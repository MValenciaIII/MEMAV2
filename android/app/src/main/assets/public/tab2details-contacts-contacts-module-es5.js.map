{"version":3,"sources":["webpack:///src/app/tab2details/contactinfo/contactinfo.page.html","webpack:///src/app/tab2details/contacts/contacts.page.html","webpack:///src/app/tab2details/contactinfo/contactinfo-routing.module.ts","webpack:///src/app/tab2details/contactinfo/contactinfo.module.ts","webpack:///src/app/tab2details/contactinfo/contactinfo.page.scss","webpack:///src/app/tab2details/contactinfo/contactinfo.page.ts","webpack:///src/app/tab2details/contacts/contacts-routing.module.ts","webpack:///src/app/tab2details/contacts/contacts.module.ts","webpack:///src/app/tab2details/contacts/contacts.page.scss","webpack:///src/app/tab2details/contacts/contacts.page.ts"],"names":["routes","path","component","ContactinfoPageRoutingModule","imports","forChild","exports","ContactinfoPageModule","declarations","ContactinfoPage","router","title","contacts","JSON","parse","localStorage","getItem","currentDisplayIndex","id","firstname","lastname","phone","address","event","preventDefault","length","push","firstName","lastName","setItem","stringify","console","log","navigate","selector","template","loadChildren","then","m","ContactsPageRoutingModule","ContactsPageModule","ContactsPage","target","dataset","newArray","filter","card","window","location","reload"],"mappings":"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","file":"tab2details-contacts-contacts-module-es5.js","sourcesContent":["export default \"  \\n<ion-header>\\n    <ion-toolbar>\\n        <ion-row>\\n            <ion-col>\\n                <ion-nav-link [routerLink]=\\\"['/tabs/tab2/']\\\">BACK</ion-nav-link>\\n            </ion-col>\\n        </ion-row>\\n        <ion-title>YOUR PLAN</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">First name:</ion-label>\\n        <ion-input [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Last name:</ion-label>\\n        <ion-input [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Phone:</ion-label>\\n        <ion-input [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" type=\\\"number\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Address:</ion-label>\\n        <ion-input [(ngModel)]=\\\"address\\\" name=\\\"address\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n        <ion-button (click)=\\\"addPerson()\\\">Add</ion-button>\\n</ion-content>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <ion-header>\\n<ion-content>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Name</ion-label>\\n        <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Relationship(Spouse, Parent, etc)</ion-label>\\n        <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Phone</ion-label>\\n        <ion-input type=\\\"number\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Address</ion-label>\\n        <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">City</ion-label>\\n        <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">State</ion-label>\\n        <ion-input type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Zip Code</ion-label>\\n        <ion-input type=\\\"Number\\\"></ion-input>\\n    </ion-item>\\n    <div>\\n        <ion-button>Save</ion-button>\\n    </div>\\n</ion-content> -->\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-row>\\n      <ion-col>\\n        <ion-nav-link [routerLink]=\\\"['/tabs/tab2/']\\\">BACK</ion-nav-link>\\n      </ion-col>\\n    </ion-row>\\n    <ion-title>YOUR PLAN</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card-header\\n    style=\\\"\\n      text-align: center;\\n      background-color: #061e3d;\\n      margin-top: 0.25em;\\n      color: #ffffff;\\n    \\\"\\n    >CONTACT INFO</ion-card-header\\n  >\\n  <div *ngIf=\\\"contacts\\\">\\n    <ion-card\\n      *ngFor=\\\"let contact of contacts;\\\"\\n      style=\\\"padding: 0.25em\\\"\\n      id=\\\"contact-items\\\"\\n    >\\n      <ion-card-header>\\n        <ion-card-title\\n          >{{contact.firstName}} {{contact.lastName}}</ion-card-title\\n        >\\n        <!-- <ion-card-title>{{contact | json}}</ion-card-title> -->\\n      </ion-card-header>\\n\\n      <ion-card-content style=\\\"font-size: 1.125rem\\\">\\n        Phone Number: {{contact.phone}} <br />\\n        Address: {{contact.address}}\\n      </ion-card-content>\\n      <!-- <ion-button (click)=\\\"EditContact($event)\\\" [attr.data-id]=\\\"contact.id\\\">Edit</ion-button> -->\\n      <ion-button (click)=\\\"DeleteContact($event)\\\" [attr.data-id]=\\\"contact.id\\\"\\n        >Delete</ion-button\\n      >\\n    </ion-card>\\n  </div>\\n\\n  <ion-button [routerLink]=\\\"['/tabs/tab2/contacts/info']\\\"\\n    >ADD NEW CONTACT</ion-button\\n  >\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactinfoPage } from './contactinfo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactinfoPage\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactinfoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ContactinfoPageRoutingModule } from './contactinfo-routing.module';\n\nimport { ContactinfoPage } from './contactinfo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ContactinfoPageRoutingModule\n  ],\n  declarations: [ContactinfoPage]\n})\nexport class ContactinfoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjJkZXRhaWxzL2NvbnRhY3RpbmZvL2NvbnRhY3RpbmZvLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n// import { LocalStorageService } from \"../services/local-storage.service\";\nimport { NavController } from \"@ionic/angular\";\nimport { Router, NavigationExtras } from \"@angular/router\";\nimport { ContactsPage } from \"../contacts/contacts.page\";\n\n@Component({\n  selector: 'app-contactinfo',\n  templateUrl: './contactinfo.page.html',\n  styleUrls: ['./contactinfo.page.scss'],\n})\nexport class ContactinfoPage implements OnInit {\n  title = \"local-storage-app\";\n  // # parses stringified array to a array\n  contacts = JSON.parse(localStorage.getItem('CONTACTS')) || [];\n  currentDisplayIndex: number = -1;\n  constructor(\n    private router: Router\n  ) {}\n  public id: number = null ;\n  public firstname: string = \"\";\n  public lastname: string = \"\";\n  public phone: number = null;\n  public address: string = \"\";\n\n  public addPerson() {\n    event.preventDefault();\n    this.id = this.contacts.length + 1\n    this.contacts.push({\n      id: this.id,\n      firstName: this.firstname,\n      lastName: this.lastname,\n      phone: this.phone,\n      address: this.address,\n    });\n    \n    localStorage.setItem('CONTACTS', JSON.stringify(this.contacts));\n\n    console.log(\"LocalStorage: \", localStorage);\n    this.router.navigate([\"tabs/tab2/contacts\"]);\n  }\n\n  ngOnInit() {}\n}","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { ContactsPage } from \"./contacts.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ContactsPage,\n  },\n  {\n    path: \"info\",\n    loadChildren: () =>\n      import(\"../contactinfo/contactinfo.module\").then(\n        (m) => m.ContactinfoPageModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { ContactsPageRoutingModule } from \"./contacts-routing.module\";\nimport { ContactinfoPageModule } from \"../contactinfo/contactinfo.module\";\n\nimport { ContactsPage } from \"./contacts.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ContactsPageRoutingModule,\n    ContactinfoPageModule,\n  ],\n  declarations: [ContactsPage],\n})\nexport class ContactsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjJkZXRhaWxzL2NvbnRhY3RzL2NvbnRhY3RzLnBhZ2Uuc2NzcyJ9 */\";","import { Component } from \"@angular/core\";\n// import { NavController } from \"ionic-angular\";\nimport { Tab2Page } from \"src/app/tab2/tab2.page\";\nimport { Router, NavigationExtras } from \"@angular/router\";\n\n@Component({\n  selector: \"app-contacts\",\n  templateUrl: \"./contacts.page.html\",\n  styleUrls: [\"./contacts.page.scss\"],\n})\nexport class ContactsPage {\n  contacts = [];\n   id = 0;\n\n  constructor(private router: Router) {\n    this.contacts = JSON.parse(localStorage.getItem('CONTACTS'))\n  }\n  ionViewWillEnter() {\n    console.log(\"contact\", this.contacts)\n    // # If new contact is entered, before component mounts, refresh from local storage\n    this.contacts = JSON.parse(localStorage.getItem('CONTACTS'))\n    console.log(\"I just entered contacts page\");\n  }\n  // EditContact() {\n  //   // this.router.navigate([\"tabs/tab2/contacts/info/${id}\"]);\n  //   // // var myArr = [];\n  //   // let id = event.target.dataset.id; \n  //   // // If localStorage has not been initialized, then initialize it by setting them all to false.\n  //   // for (var i = 0; i < this.contacts.length; i++) {\n  //   //   // When true, set emergency items to true. If false, set emergency items to false.\n  //   //   this.contacts[i].id = JSON.parse(\n  //   //     localStorage.getItem(\"CONTACTS\")\n  //   //   );\n  //   // }\n  //   // console.log(\"Local Storage: \" + localStorage.length);\n  //   // todo: route to an \"id\" page?\n  // }\n\n  DeleteContact(event) {\n\n    let id = event.target.dataset.id; \n    let newArray = this.contacts.filter(card => card.id != id);\n    localStorage.setItem(\"CONTACTS\", JSON.stringify(newArray));\n    window.location.reload();\n\n  }\n\n  ngOnDestroy() {\n    console.log(\"The stack for tab two 'contacts' has been destroyed\");\n  }\n}\n"]}