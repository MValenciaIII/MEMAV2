{"version":3,"sources":["webpack:///node_modules/leaflet/dist/images/marker-icon.png","webpack:///node_modules/leaflet/dist/images/marker-shadow.png","webpack:///node_modules/mgrs/mgrs.js","webpack:///node_modules/proj4/lib/Point.js","webpack:///node_modules/proj4/lib/Proj.js","webpack:///node_modules/proj4/lib/adjust_axis.js","webpack:///node_modules/proj4/lib/checkSanity.js","webpack:///node_modules/proj4/lib/common/adjust_lat.js","webpack:///node_modules/proj4/lib/common/adjust_lon.js","webpack:///node_modules/proj4/lib/common/adjust_zone.js","webpack:///node_modules/proj4/lib/common/asinhy.js","webpack:///node_modules/proj4/lib/common/asinz.js","webpack:///node_modules/proj4/lib/common/clens.js","webpack:///node_modules/proj4/lib/common/clens_cmplx.js","webpack:///node_modules/proj4/lib/common/cosh.js","webpack:///node_modules/proj4/lib/common/e0fn.js","webpack:///node_modules/proj4/lib/common/e1fn.js","webpack:///node_modules/proj4/lib/common/e2fn.js","webpack:///node_modules/proj4/lib/common/e3fn.js","webpack:///node_modules/proj4/lib/common/gN.js","webpack:///node_modules/proj4/lib/common/gatg.js","webpack:///node_modules/proj4/lib/common/hypot.js","webpack:///node_modules/proj4/lib/common/imlfn.js","webpack:///node_modules/proj4/lib/common/iqsfnz.js","webpack:///node_modules/proj4/lib/common/log1py.js","webpack:///node_modules/proj4/lib/common/mlfn.js","webpack:///node_modules/proj4/lib/common/msfnz.js","webpack:///node_modules/proj4/lib/common/phi2z.js","webpack:///node_modules/proj4/lib/common/pj_enfn.js","webpack:///node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///node_modules/proj4/lib/common/pj_mlfn.js","webpack:///node_modules/proj4/lib/common/qsfnz.js","webpack:///node_modules/proj4/lib/common/sign.js","webpack:///node_modules/proj4/lib/common/sinh.js","webpack:///node_modules/proj4/lib/common/srat.js","webpack:///node_modules/proj4/lib/common/toPoint.js","webpack:///node_modules/proj4/lib/common/tsfnz.js","webpack:///node_modules/proj4/lib/constants/Datum.js","webpack:///node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///node_modules/proj4/lib/constants/units.js","webpack:///node_modules/proj4/lib/constants/values.js","webpack:///node_modules/proj4/lib/core.js","webpack:///node_modules/proj4/lib/datum.js","webpack:///node_modules/proj4/lib/datumUtils.js","webpack:///node_modules/proj4/lib/datum_transform.js","webpack:///node_modules/proj4/lib/defs.js","webpack:///node_modules/proj4/lib/deriveConstants.js","webpack:///node_modules/proj4/lib/extend.js","webpack:///node_modules/proj4/lib/global.js","webpack:///node_modules/proj4/lib/index.js","webpack:///node_modules/proj4/lib/match.js","webpack:///node_modules/proj4/lib/nadgrid.js","webpack:///node_modules/proj4/lib/parseCode.js","webpack:///node_modules/proj4/lib/projString.js","webpack:///node_modules/proj4/lib/projections.js","webpack:///node_modules/proj4/lib/projections/aea.js","webpack:///node_modules/proj4/lib/projections/aeqd.js","webpack:///node_modules/proj4/lib/projections/cass.js","webpack:///node_modules/proj4/lib/projections/cea.js","webpack:///node_modules/proj4/lib/projections/eqc.js","webpack:///node_modules/proj4/lib/projections/eqdc.js","webpack:///node_modules/proj4/lib/projections/etmerc.js","webpack:///node_modules/proj4/lib/projections/gauss.js","webpack:///node_modules/proj4/lib/projections/geocent.js","webpack:///node_modules/proj4/lib/projections/gnom.js","webpack:///node_modules/proj4/lib/projections/krovak.js","webpack:///node_modules/proj4/lib/projections/laea.js","webpack:///node_modules/proj4/lib/projections/lcc.js","webpack:///node_modules/proj4/lib/projections/longlat.js","webpack:///node_modules/proj4/lib/projections/merc.js","webpack:///node_modules/proj4/lib/projections/mill.js","webpack:///node_modules/proj4/lib/projections/moll.js","webpack:///node_modules/proj4/lib/projections/nzmg.js","webpack:///node_modules/proj4/lib/projections/omerc.js","webpack:///node_modules/proj4/lib/projections/ortho.js","webpack:///node_modules/proj4/lib/projections/poly.js","webpack:///node_modules/proj4/lib/projections/qsc.js","webpack:///node_modules/proj4/lib/projections/robin.js","webpack:///node_modules/proj4/lib/projections/sinu.js","webpack:///node_modules/proj4/lib/projections/somerc.js","webpack:///node_modules/proj4/lib/projections/stere.js","webpack:///node_modules/proj4/lib/projections/sterea.js","webpack:///node_modules/proj4/lib/projections/tmerc.js","webpack:///node_modules/proj4/lib/projections/tpers.js","webpack:///node_modules/proj4/lib/projections/utm.js","webpack:///node_modules/proj4/lib/projections/vandg.js","webpack:///node_modules/proj4/lib/transform.js","webpack:///node_modules/proj4/projs.js","webpack:///node_modules/proj4leaflet/src/proj4leaflet.js","webpack:///src/app/tab3/tab3.page.html","webpack:///node_modules/wkt-parser/index.js","webpack:///node_modules/wkt-parser/parser.js","webpack:///node_modules/wkt-parser/process.js","webpack:///src/app/tab3/tab3-routing.module.ts","webpack:///src/app/tab3/tab3.module.ts","webpack:///src/app/tab3/tab3.page.scss","webpack:///src/app/tab3/tab3.page.ts"],"names":["NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","Z","forward","inverse","toPoint","ll","accuracy","encode","LLtoUTM","lat","lon","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","Math","PI","radToDeg","rad","Lat","Long","a","eccSquared","k0","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","floor","sqrt","sin","tan","cos","UTMEasting","UTMNorthing","northing","round","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","e1","N1","T1","C1","R1","D","mu","phi1Rad","x","y","pow","result","topRight","LetterDesignator","seasting","snorthing","get100kID","substr","length","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","i","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","String","fromCharCode","mgrsString","hunK","sb","testChar","test","charAt","parseInt","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","parseFloat","e","curCol","eastingValue","rewindMarker","n","curRow","northingValue","Point","z","Array","isArray","coords","split","console","warn","fromMGRS","mgrsStr","prototype","toMGRS","Projection","srsCode","callback","error","json","ourProj","projections","get","projName","datumCode","datumDef","datum_params","towgs84","ellps","ellipse","datumName","axis","lat1","lat0","sphere_","b","rf","sphere","ecc","R_A","nadgrids","datumObj","datum","es","ep2","init","start","xin","point","yin","zin","v","t","out","denorm","undefined","indexOf","crs","checkCoord","num","Number","isFinite","TypeError","abs","zone","asin","r","arg_r","pp","hr1","hr2","hr","sin_arg_r","cos_arg_r","sinh_arg_i","arg_i","cosh_arg_i","j","hi1","hi","hi2","exp","temp","sinphi","cos_2B","B","h1","h2","h","max","min","phi","dphi","ml","e0","e2","e3","NaN","eccent","log","q","sin_phi","cos_phi","con","cosphi","eccnth","atan","ts","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","MAX_ITER","k","arg","s","cphi","sphi","esinp","array","m","com","exports","wgs84","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","WGS84","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","transformer","from","to","enforceAxis","transformedArray","keys","name","concat","splice","Object","forEach","key","checkProj","item","oProj","proj4","fromProj","toProj","coord","single","obj","datum_type","map","grids","compareDatums","source","dest","geodeticToGeocentric","p","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Infinity","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","type","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","input","output","onlyMandatoryGrids","attemptedGrids","grid","push","isNull","mandatory","subgrid","subgrids","epsilon","del","minX","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","nadInterpolate","tol","dif","indx","frct","inx","f00","cvs","f10","f11","f01","m11","m10","m00","m01","defs","that","arguments","def","apply","EPSG","ESRI","IAU2000","eccentricity","a2","b2","destination","value","property","GOOGLE","defaultDatum","Proj","nadgrid","transform","version","ignoredChar","match","lkey","toLowerCase","replace","testkey","processedKey","loadedNadgrids","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","readSubgrids","getNadgrids","parseNadgridString","optional","slice","secondsToRadians","seconds","nFields","getInt32","nSubgridFields","shiftType","decodeString","trim","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","count","gridNodeCount","mapNodes","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","testObj","code","testDef","codeWords","testWKT","some","word","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","self","paramObj","defData","filter","reduce","paramName","paramVal","paramOutname","params","proj","lat_0","lat_1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","r_a","south","utmSouth","units","unit","from_greenwich","pm","legalAxis","approx","projs","names","projStore","add","len","sin_po","cos_po","t1","ms1","qs1","t2","ms2","qs2","t3","qs0","ns0","c","rh","qs","rh1","theta","phi1z","eccnts","sin_p12","cos_p12","dlon","Mlp","Ml","tanphi","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","s5","acos","sinz","cosz","cosAz","tmp","Ee","F","sinpsi","ml0","lam","nl","tl","al","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dl","dsq","title","rc","dlat","ns","ml2","g","Error","cgb","cbg","utg","gtu","f","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","phic0","ratexp","K","DEL_TOL","sin_p14","cos_p14","infinity_dist","coslon","ksp","sinc","cosc","s45","s90","fi0","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","d","eps","ro","delta_lon","czech","fi1","ok","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","sinb","cosb","cCe","sCe","rho","ab","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin1","cos1","ts1","sin2","cos2","ts2","ts0","f0","identity","pt","delta_theta","iterations","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","TOL","isTypeA","typeAProjections","projectionName","PROJECTION","L","J","gamma0","lamc","lam1","lam2","phi2","alpha_c","AB","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","S","U","W","Qp","Sp","Tp","Vp","Up","el","bl","mln","mlnp","ma","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlat","coslat","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","C_y","C_x","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","R","b0","k2","k3","Sa1","Sa2","rotI","rotB","lambda","phy","prevPhy","iteration","ssfn_","phit","eccen","coslat0","sinlat0","cons","X0","cosX0","sinX0","sinX","cosX","ce","Chi","sinc0","cosc0","R2","cosl","als","cs","tq","tan_phi","ds","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","dependsOn","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","checkNotWGS","factory","__esModule","_isProj4Obj","Class","extend","initialize","bounds","isP4","_proj","_projFromCodeDef","project","latlng","lng","unproject","unbounded","point2","LatLng","urn","CRS","includes","options","transformation","Transformation","projection","Util","setOptions","origin","scales","_scales","resolutions","infinite","scale","zoom","iZoom","baseScale","nextScale","scaleDiff","zDiff","downScale","_closestElement","downZoom","nextZoom","distance","Earth","element","low","GeoJSON","geojson","_callLevel","call","addData","properties","coordsToLatLng","geoJson","ImageOverlay","url","_projectedBounds","_animateZoom","event","_map","getZoomScale","northWest","_projectedToNewLayerPoint","center","DomUtil","setTransform","_image","_reset","getZoom","pixelOrigin","getPixelOrigin","_transform","_subtract","size","getSize","setPosition","style","width","height","viewHalf","_divideBy","newTopLeft","_round","topLeft","_getMapPanePos","imageOverlay","rename","outName","inName","d2r","cleanWKT","wkt","local","AXIS","axisOrder","ii","UNIT","convert","DATUM","SPHEROID","geogcs","GEOGCS","TOWGS84","toMeter","ratio","renamer","list","lisp","shift","unshift","parseString","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","level","place","root","stack","currentObject","state","readCharicter","char","neutral","quoted","afterquote","number","afterItem","pop","newObjects","txt","parser","mapit","thing","newObj","sExpr","routes","path","component","Tab3PageRoutingModule","imports","forChild","Tab3PageModule","declarations","Tab3Page","http","countySelectionTest","countyName","selected","Functionone","getLocationService","initializeMapOptions","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","resp","longitude","latitude","then","setView","getAlerts","setCountiesPoints","mapOptions","layers","maxZoom","attribution","storage","window","localStorage","getItem","countyInfo","countySelection","CountyPoints","CONAME","geoRadiusLine","Lon","radius","addTo","panTo","geoJSONCircle","circleToPolygon","turfcircle","toGeoJSON","getLatLng","setLatLng","redraw","marker","setIcon","iconSize","iconAnchor","iconUrl","poly","response","subscribe","features","polygons","pressOne","bindPopup","areaDesc","countiesPointsArray","countiesPoints","countiesList","lonlat","brng","dist","VincentyConstants","lon1","alpha1","sinAlpha1","cosAlpha1","tanU1","cosU1","sinU1","sigma1","sinAlpha","cosSqAlpha","uSq","sigma","sigmaP","cos2SigmaM","sinSigma","cosSigma","deltaSigma","lamFunc","lat2a","sides","rotation","angle","newLonlat","geomPoint","points","destinationVincenty","circle","getRadius","polys","createGeodesicPolygon","polygon","geometry","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA,+DAA0B,iBAA1B;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA,+DAA0B,mBAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGf;;;;;;;;AAMA,UAAIA,aAAa,GAAG,CAApB;AAEA;;;;;;;AAMA,UAAIC,yBAAyB,GAAG,QAAhC;AAEA;;;;;;;AAMA,UAAIC,sBAAsB,GAAG,QAA7B;AAEA,UAAIC,CAAC,GAAG,EAAR,C,CAAY;;AACZ,UAAIC,CAAC,GAAG,EAAR,C,CAAY;;AACZ,UAAIC,CAAC,GAAG,EAAR,C,CAAY;;AACZ,UAAIC,CAAC,GAAG,EAAR,C,CAAY;;AACZ,UAAIC,CAAC,GAAG,EAAR,C,CAAY;;AACG;;AAAA;AACbC,eAAO,EAAEA,OADI;AAEbC,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA;AAHI;AAKf;;;;;;;;;;AASO,eAASF,OAAT,CAAiBG,EAAjB,EAAqBC,QAArB,EAA+B;AACpCA,gBAAQ,GAAGA,QAAQ,IAAI,CAAvB,CADoC,CACV;;AAC1B,eAAOC,MAAM,CAACC,OAAO,CAAC;AACpBC,aAAG,EAAEJ,EAAE,CAAC,CAAD,CADa;AAEpBK,aAAG,EAAEL,EAAE,CAAC,CAAD;AAFa,SAAD,CAAR,EAGTC,QAHS,CAAb;AAID;;AAAA;AAED;;;;;;;;;AAQO,eAASH,OAAT,CAAiBQ,IAAjB,EAAuB;AAC5B,YAAIC,IAAI,GAAGC,OAAO,CAACC,MAAM,CAACH,IAAI,CAACI,WAAL,EAAD,CAAP,CAAlB;;AACA,YAAIH,IAAI,CAACH,GAAL,IAAYG,IAAI,CAACF,GAArB,EAA0B;AACxB,iBAAO,CAACE,IAAI,CAACF,GAAN,EAAWE,IAAI,CAACH,GAAhB,EAAqBG,IAAI,CAACF,GAA1B,EAA+BE,IAAI,CAACH,GAApC,CAAP;AACD;;AACD,eAAO,CAACG,IAAI,CAACI,IAAN,EAAYJ,IAAI,CAACK,MAAjB,EAAyBL,IAAI,CAACM,KAA9B,EAAqCN,IAAI,CAACO,GAA1C,CAAP;AACD;;AAAA;;AAEM,eAASf,OAAT,CAAiBO,IAAjB,EAAuB;AAC5B,YAAIC,IAAI,GAAGC,OAAO,CAACC,MAAM,CAACH,IAAI,CAACI,WAAL,EAAD,CAAP,CAAlB;;AACA,YAAIH,IAAI,CAACH,GAAL,IAAYG,IAAI,CAACF,GAArB,EAA0B;AACxB,iBAAO,CAACE,IAAI,CAACF,GAAN,EAAWE,IAAI,CAACH,GAAhB,CAAP;AACD;;AACD,eAAO,CAAC,CAACG,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACM,KAAlB,IAA2B,CAA5B,EAA+B,CAACN,IAAI,CAACO,GAAL,GAAWP,IAAI,CAACK,MAAjB,IAA2B,CAA1D,CAAP;AACD;;AAAA;AACD;;;;;;;;AAOA,eAASG,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,eAAQA,GAAG,IAAIC,IAAI,CAACC,EAAL,GAAU,KAAd,CAAX;AACD;AAED;;;;;;;;;AAOA,eAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,eAAQ,SAASA,GAAG,GAAGH,IAAI,CAACC,EAApB,CAAR;AACD;AAED;;;;;;;;;;;;;AAWA,eAASf,OAAT,CAAiBH,EAAjB,EAAqB;AACnB,YAAIqB,GAAG,GAAGrB,EAAE,CAACI,GAAb;AACA,YAAIkB,IAAI,GAAGtB,EAAE,CAACK,GAAd;AACA,YAAIkB,CAAC,GAAG,SAAR,CAHmB,CAGA;;AACnB,YAAIC,UAAU,GAAG,UAAjB,CAJmB,CAIU;;AAC7B,YAAIC,EAAE,GAAG,MAAT;AACA,YAAIC,UAAJ;AACA,YAAIC,eAAJ;AACA,YAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAatC,CAAb,EAAgBuC,CAAhB;AACA,YAAIC,MAAM,GAAGjB,QAAQ,CAACM,GAAD,CAArB;AACA,YAAIY,OAAO,GAAGlB,QAAQ,CAACO,IAAD,CAAtB;AACA,YAAIY,aAAJ;AACA,YAAIC,UAAJ,CAZmB,CAanB;;AACAA,kBAAU,GAAGlB,IAAI,CAACmB,KAAL,CAAW,CAACd,IAAI,GAAG,GAAR,IAAe,CAA1B,IAA+B,CAA5C,CAdmB,CAgBnB;;AACA,YAAIA,IAAI,KAAK,GAAb,EAAkB;AAChBa,oBAAU,GAAG,EAAb;AACD,SAnBkB,CAqBnB;;;AACA,YAAId,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAG,IAArB,IAA6BC,IAAI,IAAI,GAArC,IAA4CA,IAAI,GAAG,IAAvD,EAA6D;AAC3Da,oBAAU,GAAG,EAAb;AACD,SAxBkB,CA0BnB;;;AACA,YAAId,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAG,IAAzB,EAA+B;AAC7B,cAAIC,IAAI,IAAI,GAAR,IAAeA,IAAI,GAAG,GAA1B,EAA+B;AAC7Ba,sBAAU,GAAG,EAAb;AACD,WAFD,MAGK,IAAIb,IAAI,IAAI,GAAR,IAAeA,IAAI,GAAG,IAA1B,EAAgC;AACnCa,sBAAU,GAAG,EAAb;AACD,WAFI,MAGA,IAAIb,IAAI,IAAI,IAAR,IAAgBA,IAAI,GAAG,IAA3B,EAAiC;AACpCa,sBAAU,GAAG,EAAb;AACD,WAFI,MAGA,IAAIb,IAAI,IAAI,IAAR,IAAgBA,IAAI,GAAG,IAA3B,EAAiC;AACpCa,sBAAU,GAAG,EAAb;AACD;AACF;;AAEDT,kBAAU,GAAG,CAACS,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,GAAvB,GAA6B,CAA1C,CA1CmB,CA0C0B;AAC7C;AACA;;AACAD,qBAAa,GAAGnB,QAAQ,CAACW,UAAD,CAAxB;AAEAC,uBAAe,GAAIH,UAAD,IAAgB,IAAIA,UAApB,CAAlB;AAEAI,SAAC,GAAGL,CAAC,GAAGN,IAAI,CAACoB,IAAL,CAAU,IAAIb,UAAU,GAAGP,IAAI,CAACqB,GAAL,CAASN,MAAT,CAAb,GAAgCf,IAAI,CAACqB,GAAL,CAASN,MAAT,CAA9C,CAAR;AACAH,SAAC,GAAGZ,IAAI,CAACsB,GAAL,CAASP,MAAT,IAAmBf,IAAI,CAACsB,GAAL,CAASP,MAAT,CAAvB;AACAF,SAAC,GAAGH,eAAe,GAAGV,IAAI,CAACuB,GAAL,CAASR,MAAT,CAAlB,GAAqCf,IAAI,CAACuB,GAAL,CAASR,MAAT,CAAzC;AACAxC,SAAC,GAAGyB,IAAI,CAACuB,GAAL,CAASR,MAAT,KAAoBC,OAAO,GAAGC,aAA9B,CAAJ;AAEAH,SAAC,GAAGR,CAAC,IAAI,CAAC,IAAIC,UAAU,GAAG,CAAjB,GAAqB,IAAIA,UAAJ,GAAiBA,UAAjB,GAA8B,EAAnD,GAAwD,IAAIA,UAAJ,GAAiBA,UAAjB,GAA8BA,UAA9B,GAA2C,GAApG,IAA2GQ,MAA3G,GAAoH,CAAC,IAAIR,UAAJ,GAAiB,CAAjB,GAAqB,IAAIA,UAAJ,GAAiBA,UAAjB,GAA8B,EAAnD,GAAwD,KAAKA,UAAL,GAAkBA,UAAlB,GAA+BA,UAA/B,GAA4C,IAArG,IAA6GP,IAAI,CAACqB,GAAL,CAAS,IAAIN,MAAb,CAAjO,GAAwP,CAAC,KAAKR,UAAL,GAAkBA,UAAlB,GAA+B,GAA/B,GAAqC,KAAKA,UAAL,GAAkBA,UAAlB,GAA+BA,UAA/B,GAA4C,IAAlF,IAA0FP,IAAI,CAACqB,GAAL,CAAS,IAAIN,MAAb,CAAlV,GAA0W,KAAKR,UAAL,GAAkBA,UAAlB,GAA+BA,UAA/B,GAA4C,IAA7C,GAAqDP,IAAI,CAACqB,GAAL,CAAS,IAAIN,MAAb,CAAla,CAAL;AAEA,YAAIS,UAAU,GAAIhB,EAAE,GAAGG,CAAL,IAAUpC,CAAC,GAAG,CAAC,IAAIqC,CAAJ,GAAQC,CAAT,IAActC,CAAd,GAAkBA,CAAlB,GAAsBA,CAAtB,GAA0B,GAA9B,GAAoC,CAAC,IAAI,KAAKqC,CAAT,GAAaA,CAAC,GAAGA,CAAjB,GAAqB,KAAKC,CAA1B,GAA8B,KAAKH,eAApC,IAAuDnC,CAAvD,GAA2DA,CAA3D,GAA+DA,CAA/D,GAAmEA,CAAnE,GAAuEA,CAAvE,GAA2E,KAAzH,IAAkI,QAApJ;AAEA,YAAIkD,WAAW,GAAIjB,EAAE,IAAIM,CAAC,GAAGH,CAAC,GAAGX,IAAI,CAACsB,GAAL,CAASP,MAAT,CAAJ,IAAwBxC,CAAC,GAAGA,CAAJ,GAAQ,CAAR,GAAY,CAAC,IAAIqC,CAAJ,GAAQ,IAAIC,CAAZ,GAAgB,IAAIA,CAAJ,GAAQA,CAAzB,IAA8BtC,CAA9B,GAAkCA,CAAlC,GAAsCA,CAAtC,GAA0CA,CAA1C,GAA8C,IAA1D,GAAiE,CAAC,KAAK,KAAKqC,CAAV,GAAcA,CAAC,GAAGA,CAAlB,GAAsB,MAAMC,CAA5B,GAAgC,MAAMH,eAAvC,IAA0DnC,CAA1D,GAA8DA,CAA9D,GAAkEA,CAAlE,GAAsEA,CAAtE,GAA0EA,CAA1E,GAA8EA,CAA9E,GAAkF,KAA3K,CAAR,CAArB;;AACA,YAAI6B,GAAG,GAAG,GAAV,EAAe;AACbqB,qBAAW,IAAI,UAAf,CADa,CACc;AAC3B;AACD;;AAED,eAAO;AACLC,kBAAQ,EAAE1B,IAAI,CAAC2B,KAAL,CAAWF,WAAX,CADL;AAELG,iBAAO,EAAE5B,IAAI,CAAC2B,KAAL,CAAWH,UAAX,CAFJ;AAGLK,oBAAU,EAAEX,UAHP;AAILY,oBAAU,EAAEC,mBAAmB,CAAC3B,GAAD;AAJ1B,SAAP;AAMD;AAED;;;;;;;;;;;;;;;;;AAeA,eAASb,OAAT,CAAiByC,GAAjB,EAAsB;AAEpB,YAAIP,WAAW,GAAGO,GAAG,CAACN,QAAtB;AACA,YAAIF,UAAU,GAAGQ,GAAG,CAACJ,OAArB;AACA,YAAIE,UAAU,GAAGE,GAAG,CAACF,UAArB;AACA,YAAID,UAAU,GAAGG,GAAG,CAACH,UAArB,CALoB,CAMpB;;AACA,YAAIA,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAG,EAAnC,EAAuC;AACrC,iBAAO,IAAP;AACD;;AAED,YAAIrB,EAAE,GAAG,MAAT;AACA,YAAIF,CAAC,GAAG,SAAR,CAZoB,CAYD;;AACnB,YAAIC,UAAU,GAAG,UAAjB,CAboB,CAaS;;AAC7B,YAAIG,eAAJ;AACA,YAAIuB,EAAE,GAAG,CAAC,IAAIjC,IAAI,CAACoB,IAAL,CAAU,IAAIb,UAAd,CAAL,KAAmC,IAAIP,IAAI,CAACoB,IAAL,CAAU,IAAIb,UAAd,CAAvC,CAAT;AACA,YAAI2B,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,CAApB,EAAuBxB,CAAvB;AACA,YAAIL,UAAJ;AACA,YAAI8B,EAAJ,EAAQC,OAAR,CAlBoB,CAoBpB;;AACA,YAAIC,CAAC,GAAGjB,UAAU,GAAG,QAArB;AACA,YAAIkB,CAAC,GAAGjB,WAAR,CAtBoB,CAwBpB;AACA;AACA;AACA;;AACA,YAAIK,UAAU,GAAG,GAAjB,EAAsB;AACpBY,WAAC,IAAI,UAAL,CADoB,CACH;AACjB;AACD,SA/BmB,CAiCpB;;;AACAjC,kBAAU,GAAG,CAACoB,UAAU,GAAG,CAAd,IAAmB,CAAnB,GAAuB,GAAvB,GAA6B,CAA1C,CAlCoB,CAkCyB;AAC7C;AACA;;AAEAnB,uBAAe,GAAIH,UAAD,IAAgB,IAAIA,UAApB,CAAlB;AAEAO,SAAC,GAAG4B,CAAC,GAAGlC,EAAR;AACA+B,UAAE,GAAGzB,CAAC,IAAIR,CAAC,IAAI,IAAIC,UAAU,GAAG,CAAjB,GAAqB,IAAIA,UAAJ,GAAiBA,UAAjB,GAA8B,EAAnD,GAAwD,IAAIA,UAAJ,GAAiBA,UAAjB,GAA8BA,UAA9B,GAA2C,GAAvG,CAAL,CAAN;AAEAiC,eAAO,GAAGD,EAAE,GAAG,CAAC,IAAIN,EAAJ,GAAS,CAAT,GAAa,KAAKA,EAAL,GAAUA,EAAV,GAAeA,EAAf,GAAoB,EAAlC,IAAwCjC,IAAI,CAACqB,GAAL,CAAS,IAAIkB,EAAb,CAA7C,GAAgE,CAAC,KAAKN,EAAL,GAAUA,EAAV,GAAe,EAAf,GAAoB,KAAKA,EAAL,GAAUA,EAAV,GAAeA,EAAf,GAAoBA,EAApB,GAAyB,EAA9C,IAAoDjC,IAAI,CAACqB,GAAL,CAAS,IAAIkB,EAAb,CAApH,GAAwI,MAAMN,EAAN,GAAWA,EAAX,GAAgBA,EAAhB,GAAqB,EAAtB,GAA4BjC,IAAI,CAACqB,GAAL,CAAS,IAAIkB,EAAb,CAA7K,CA3CoB,CA4CpB;;AAEAL,UAAE,GAAG5B,CAAC,GAAGN,IAAI,CAACoB,IAAL,CAAU,IAAIb,UAAU,GAAGP,IAAI,CAACqB,GAAL,CAASmB,OAAT,CAAb,GAAiCxC,IAAI,CAACqB,GAAL,CAASmB,OAAT,CAA/C,CAAT;AACAL,UAAE,GAAGnC,IAAI,CAACsB,GAAL,CAASkB,OAAT,IAAoBxC,IAAI,CAACsB,GAAL,CAASkB,OAAT,CAAzB;AACAJ,UAAE,GAAG1B,eAAe,GAAGV,IAAI,CAACuB,GAAL,CAASiB,OAAT,CAAlB,GAAsCxC,IAAI,CAACuB,GAAL,CAASiB,OAAT,CAA3C;AACAH,UAAE,GAAG/B,CAAC,IAAI,IAAIC,UAAR,CAAD,GAAuBP,IAAI,CAAC2C,GAAL,CAAS,IAAIpC,UAAU,GAAGP,IAAI,CAACqB,GAAL,CAASmB,OAAT,CAAb,GAAiCxC,IAAI,CAACqB,GAAL,CAASmB,OAAT,CAA9C,EAAiE,GAAjE,CAA5B;AACAF,SAAC,GAAGG,CAAC,IAAIP,EAAE,GAAG1B,EAAT,CAAL;AAEA,YAAIrB,GAAG,GAAGqD,OAAO,GAAIN,EAAE,GAAGlC,IAAI,CAACsB,GAAL,CAASkB,OAAT,CAAL,GAAyBH,EAA1B,IAAiCC,CAAC,GAAGA,CAAJ,GAAQ,CAAR,GAAY,CAAC,IAAI,IAAIH,EAAR,GAAa,KAAKC,EAAlB,GAAuB,IAAIA,EAAJ,GAASA,EAAhC,GAAqC,IAAI1B,eAA1C,IAA6D4B,CAA7D,GAAiEA,CAAjE,GAAqEA,CAArE,GAAyEA,CAAzE,GAA6E,EAAzF,GAA8F,CAAC,KAAK,KAAKH,EAAV,GAAe,MAAMC,EAArB,GAA0B,KAAKD,EAAL,GAAUA,EAApC,GAAyC,MAAMzB,eAA/C,GAAiE,IAAI0B,EAAJ,GAASA,EAA3E,IAAiFE,CAAjF,GAAqFA,CAArF,GAAyFA,CAAzF,GAA6FA,CAA7F,GAAiGA,CAAjG,GAAqGA,CAArG,GAAyG,GAAxO,CAApB;AACAnD,WAAG,GAAGe,QAAQ,CAACf,GAAD,CAAd;AAEA,YAAIC,GAAG,GAAG,CAACkD,CAAC,GAAG,CAAC,IAAI,IAAIH,EAAR,GAAaC,EAAd,IAAoBE,CAApB,GAAwBA,CAAxB,GAA4BA,CAA5B,GAAgC,CAApC,GAAwC,CAAC,IAAI,IAAIF,EAAR,GAAa,KAAKD,EAAlB,GAAuB,IAAIC,EAAJ,GAASA,EAAhC,GAAqC,IAAI1B,eAAzC,GAA2D,KAAKyB,EAAL,GAAUA,EAAtE,IAA4EG,CAA5E,GAAgFA,CAAhF,GAAoFA,CAApF,GAAwFA,CAAxF,GAA4FA,CAA5F,GAAgG,GAAzI,IAAgJtC,IAAI,CAACuB,GAAL,CAASiB,OAAT,CAA1J;AACApD,WAAG,GAAGqB,UAAU,GAAGP,QAAQ,CAACd,GAAD,CAA3B;AAEA,YAAIwD,MAAJ;;AACA,YAAIZ,GAAG,CAAChD,QAAR,EAAkB;AAChB,cAAI6D,QAAQ,GAAGtD,OAAO,CAAC;AACrBmC,oBAAQ,EAAEM,GAAG,CAACN,QAAJ,GAAeM,GAAG,CAAChD,QADR;AAErB4C,mBAAO,EAAEI,GAAG,CAACJ,OAAJ,GAAcI,GAAG,CAAChD,QAFN;AAGrB8C,sBAAU,EAAEE,GAAG,CAACF,UAHK;AAIrBD,sBAAU,EAAEG,GAAG,CAACH;AAJK,WAAD,CAAtB;AAMAe,gBAAM,GAAG;AACP/C,eAAG,EAAEgD,QAAQ,CAAC1D,GADP;AAEPS,iBAAK,EAAEiD,QAAQ,CAACzD,GAFT;AAGPO,kBAAM,EAAER,GAHD;AAIPO,gBAAI,EAAEN;AAJC,WAAT;AAMD,SAbD,MAcK;AACHwD,gBAAM,GAAG;AACPzD,eAAG,EAAEA,GADE;AAEPC,eAAG,EAAEA;AAFE,WAAT;AAID;;AACD,eAAOwD,MAAP;AACD;AAED;;;;;;;;;;AAQA,eAASb,mBAAT,CAA6B5C,GAA7B,EAAkC;AAChC;AACA;AACA,YAAI2D,gBAAgB,GAAG,GAAvB;;AAEA,YAAK,MAAM3D,GAAP,IAAgBA,GAAG,IAAI,EAA3B,EAAgC;AAC9B2D,0BAAgB,GAAG,GAAnB;AACD,SAFD,MAGK,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,EAA1B,EAA+B;AAClC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,KAAK3D,GAAN,IAAeA,GAAG,IAAI,CAA1B,EAA8B;AACjC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,IAAI3D,GAAL,IAAcA,GAAG,IAAI,CAAzB,EAA6B;AAChC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,IAAI3D,GAAL,IAAcA,GAAG,IAAI,CAAC,CAA1B,EAA8B;AACjC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,CAAD,GAAK3D,GAAN,IAAeA,GAAG,IAAI,CAAC,EAA3B,EAAgC;AACnC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD,SAFI,MAGA,IAAK,CAAC,EAAD,GAAM3D,GAAP,IAAgBA,GAAG,IAAI,CAAC,EAA5B,EAAiC;AACpC2D,0BAAgB,GAAG,GAAnB;AACD;;AACD,eAAOA,gBAAP;AACD;AAED;;;;;;;;;;;AASA,eAAS7D,MAAT,CAAgB+C,GAAhB,EAAqBhD,QAArB,EAA+B;AAC7B;AACA,YAAI+D,QAAQ,GAAG,UAAUf,GAAG,CAACJ,OAA7B;AAAA,YACEoB,SAAS,GAAG,UAAUhB,GAAG,CAACN,QAD5B;AAGA,eAAOM,GAAG,CAACH,UAAJ,GAAiBG,GAAG,CAACF,UAArB,GAAkCmB,SAAS,CAACjB,GAAG,CAACJ,OAAL,EAAcI,GAAG,CAACN,QAAlB,EAA4BM,GAAG,CAACH,UAAhC,CAA3C,GAAyFkB,QAAQ,CAACG,MAAT,CAAgBH,QAAQ,CAACI,MAAT,GAAkB,CAAlC,EAAqCnE,QAArC,CAAzF,GAA0IgE,SAAS,CAACE,MAAV,CAAiBF,SAAS,CAACG,MAAV,GAAmB,CAApC,EAAuCnE,QAAvC,CAAjJ;AACD;AAED;;;;;;;;;;;;AAUA,eAASiE,SAAT,CAAmBrB,OAAnB,EAA4BF,QAA5B,EAAsCG,UAAtC,EAAkD;AAChD,YAAIuB,OAAO,GAAGC,iBAAiB,CAACxB,UAAD,CAA/B;AACA,YAAIyB,SAAS,GAAGtD,IAAI,CAACmB,KAAL,CAAWS,OAAO,GAAG,MAArB,CAAhB;AACA,YAAI2B,MAAM,GAAGvD,IAAI,CAACmB,KAAL,CAAWO,QAAQ,GAAG,MAAtB,IAAgC,EAA7C;AACA,eAAO8B,eAAe,CAACF,SAAD,EAAYC,MAAZ,EAAoBH,OAApB,CAAtB;AACD;AAED;;;;;;;;;AAOA,eAASC,iBAAT,CAA2BI,CAA3B,EAA8B;AAC5B,YAAIL,OAAO,GAAGK,CAAC,GAAGrF,aAAlB;;AACA,YAAIgF,OAAO,KAAK,CAAhB,EAAmB;AACjBA,iBAAO,GAAGhF,aAAV;AACD;;AAED,eAAOgF,OAAP;AACD;AAED;;;;;;;;;;;;;;;;;;AAgBA,eAASI,eAAT,CAAyBE,MAAzB,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;AAC1C;AACA,YAAIC,KAAK,GAAGD,IAAI,GAAG,CAAnB;AACA,YAAIE,SAAS,GAAGzF,yBAAyB,CAAC0F,UAA1B,CAAqCF,KAArC,CAAhB;AACA,YAAIG,SAAS,GAAG1F,sBAAsB,CAACyF,UAAvB,CAAkCF,KAAlC,CAAhB,CAJ0C,CAM1C;;AACA,YAAII,MAAM,GAAGH,SAAS,GAAGJ,MAAZ,GAAqB,CAAlC;AACA,YAAIQ,MAAM,GAAGF,SAAS,GAAGL,GAAzB;AACA,YAAIQ,QAAQ,GAAG,KAAf;;AAEA,YAAIF,MAAM,GAAGtF,CAAb,EAAgB;AACdsF,gBAAM,GAAGA,MAAM,GAAGtF,CAAT,GAAaJ,CAAb,GAAiB,CAA1B;AACA4F,kBAAQ,GAAG,IAAX;AACD;;AAED,YAAIF,MAAM,KAAKzF,CAAX,IAAiBsF,SAAS,GAAGtF,CAAZ,IAAiByF,MAAM,GAAGzF,CAA3C,IAAkD,CAACyF,MAAM,GAAGzF,CAAT,IAAcsF,SAAS,GAAGtF,CAA3B,KAAiC2F,QAAvF,EAAkG;AAChGF,gBAAM;AACP;;AAED,YAAIA,MAAM,KAAKxF,CAAX,IAAiBqF,SAAS,GAAGrF,CAAZ,IAAiBwF,MAAM,GAAGxF,CAA3C,IAAkD,CAACwF,MAAM,GAAGxF,CAAT,IAAcqF,SAAS,GAAGrF,CAA3B,KAAiC0F,QAAvF,EAAkG;AAChGF,gBAAM;;AAEN,cAAIA,MAAM,KAAKzF,CAAf,EAAkB;AAChByF,kBAAM;AACP;AACF;;AAED,YAAIA,MAAM,GAAGtF,CAAb,EAAgB;AACdsF,gBAAM,GAAGA,MAAM,GAAGtF,CAAT,GAAaJ,CAAb,GAAiB,CAA1B;AACD;;AAED,YAAI2F,MAAM,GAAGxF,CAAb,EAAgB;AACdwF,gBAAM,GAAGA,MAAM,GAAGxF,CAAT,GAAaH,CAAb,GAAiB,CAA1B;AACA4F,kBAAQ,GAAG,IAAX;AACD,SAHD,MAIK;AACHA,kBAAQ,GAAG,KAAX;AACD;;AAED,YAAMD,MAAM,KAAK1F,CAAZ,IAAoBwF,SAAS,GAAGxF,CAAb,IAAoB0F,MAAM,GAAG1F,CAAjD,IAA0D,CAAE0F,MAAM,GAAG1F,CAAV,IAAiBwF,SAAS,GAAGxF,CAA9B,KAAqC2F,QAAnG,EAA8G;AAC5GD,gBAAM;AACP;;AAED,YAAMA,MAAM,KAAKzF,CAAZ,IAAoBuF,SAAS,GAAGvF,CAAb,IAAoByF,MAAM,GAAGzF,CAAjD,IAA0D,CAAEyF,MAAM,GAAGzF,CAAV,IAAiBuF,SAAS,GAAGvF,CAA9B,KAAqC0F,QAAnG,EAA8G;AAC5GD,gBAAM;;AAEN,cAAIA,MAAM,KAAK1F,CAAf,EAAkB;AAChB0F,kBAAM;AACP;AACF;;AAED,YAAIA,MAAM,GAAGxF,CAAb,EAAgB;AACdwF,gBAAM,GAAGA,MAAM,GAAGxF,CAAT,GAAaH,CAAb,GAAiB,CAA1B;AACD;;AAED,YAAI6F,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBL,MAApB,IAA8BI,MAAM,CAACC,YAAP,CAAoBJ,MAApB,CAA9C;AACA,eAAOE,SAAP;AACD;AAED;;;;;;;;;;AAQA,eAAS5E,MAAT,CAAgB+E,UAAhB,EAA4B;AAE1B,YAAIA,UAAU,IAAIA,UAAU,CAACpB,MAAX,KAAsB,CAAxC,EAA2C;AACzC,gBAAO,kCAAP;AACD;;AAED,YAAIA,MAAM,GAAGoB,UAAU,CAACpB,MAAxB;AAEA,YAAIqB,IAAI,GAAG,IAAX;AACA,YAAIC,EAAE,GAAG,EAAT;AACA,YAAIC,QAAJ;AACA,YAAIjB,CAAC,GAAG,CAAR,CAX0B,CAa1B;;AACA,eAAO,CAAE,OAAD,CAAUkB,IAAV,CAAeD,QAAQ,GAAGH,UAAU,CAACK,MAAX,CAAkBnB,CAAlB,CAA1B,CAAR,EAAyD;AACvD,cAAIA,CAAC,IAAI,CAAT,EAAY;AACV,kBAAO,oCAAoCc,UAA3C;AACD;;AACDE,YAAE,IAAIC,QAAN;AACAjB,WAAC;AACF;;AAED,YAAI5B,UAAU,GAAGgD,QAAQ,CAACJ,EAAD,EAAK,EAAL,CAAzB;;AAEA,YAAIhB,CAAC,KAAK,CAAN,IAAWA,CAAC,GAAG,CAAJ,GAAQN,MAAvB,EAA+B;AAC7B;AACA;AACA,gBAAO,oCAAoCoB,UAA3C;AACD;;AAED,YAAIzC,UAAU,GAAGyC,UAAU,CAACK,MAAX,CAAkBnB,CAAC,EAAnB,CAAjB,CA9B0B,CAgC1B;;AACA,YAAI3B,UAAU,IAAI,GAAd,IAAqBA,UAAU,KAAK,GAApC,IAA2CA,UAAU,KAAK,GAA1D,IAAiEA,UAAU,IAAI,GAA/E,IAAsFA,UAAU,KAAK,GAArG,IAA4GA,UAAU,KAAK,GAA/H,EAAoI;AAClI,gBAAO,2BAA2BA,UAA3B,GAAwC,gBAAxC,GAA2DyC,UAAlE;AACD;;AAEDC,YAAI,GAAGD,UAAU,CAACO,SAAX,CAAqBrB,CAArB,EAAwBA,CAAC,IAAI,CAA7B,CAAP;AAEA,YAAIsB,GAAG,GAAG1B,iBAAiB,CAACxB,UAAD,CAA3B;AAEA,YAAImD,QAAQ,GAAGC,kBAAkB,CAACT,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAD,EAAiBG,GAAjB,CAAjC;AACA,YAAIG,SAAS,GAAGC,mBAAmB,CAACX,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAD,EAAiBG,GAAjB,CAAnC,CA1C0B,CA4C1B;AACA;AACA;;AAEA,eAAOG,SAAS,GAAGE,cAAc,CAACtD,UAAD,CAAjC,EAA+C;AAC7CoD,mBAAS,IAAI,OAAb;AACD,SAlDyB,CAoD1B;;;AACA,YAAIG,SAAS,GAAGlC,MAAM,GAAGM,CAAzB;;AAEA,YAAI4B,SAAS,GAAG,CAAZ,KAAkB,CAAtB,EAAyB;AACvB,gBAAO,sKAAsKd,UAA7K;AACD;;AAED,YAAIe,GAAG,GAAGD,SAAS,GAAG,CAAtB;AAEA,YAAIE,UAAU,GAAG,GAAjB;AACA,YAAIC,WAAW,GAAG,GAAlB;AACA,YAAIC,aAAJ,EAAmBC,gBAAnB,EAAqCC,iBAArC,EAAwD/D,OAAxD,EAAiEF,QAAjE;;AACA,YAAI4D,GAAG,GAAG,CAAV,EAAa;AACXG,uBAAa,GAAG,WAAWzF,IAAI,CAAC2C,GAAL,CAAS,EAAT,EAAa2C,GAAb,CAA3B;AACAI,0BAAgB,GAAGnB,UAAU,CAACO,SAAX,CAAqBrB,CAArB,EAAwBA,CAAC,GAAG6B,GAA5B,CAAnB;AACAC,oBAAU,GAAGK,UAAU,CAACF,gBAAD,CAAV,GAA+BD,aAA5C;AACAE,2BAAiB,GAAGpB,UAAU,CAACO,SAAX,CAAqBrB,CAAC,GAAG6B,GAAzB,CAApB;AACAE,qBAAW,GAAGI,UAAU,CAACD,iBAAD,CAAV,GAAgCF,aAA9C;AACD;;AAED7D,eAAO,GAAG2D,UAAU,GAAGP,QAAvB;AACAtD,gBAAQ,GAAG8D,WAAW,GAAGN,SAAzB;AAEA,eAAO;AACLtD,iBAAO,EAAEA,OADJ;AAELF,kBAAQ,EAAEA,QAFL;AAGLI,oBAAU,EAAEA,UAHP;AAILD,oBAAU,EAAEA,UAJP;AAKL7C,kBAAQ,EAAEyG;AALL,SAAP;AAOD;AAED;;;;;;;;;;;;AAUA,eAASR,kBAAT,CAA4BY,CAA5B,EAA+Bd,GAA/B,EAAoC;AAClC;AACA;AACA,YAAIe,MAAM,GAAGzH,yBAAyB,CAAC0F,UAA1B,CAAqCgB,GAAG,GAAG,CAA3C,CAAb;AACA,YAAIgB,YAAY,GAAG,QAAnB;AACA,YAAIC,YAAY,GAAG,KAAnB;;AAEA,eAAOF,MAAM,KAAKD,CAAC,CAAC9B,UAAF,CAAa,CAAb,CAAlB,EAAmC;AACjC+B,gBAAM;;AACN,cAAIA,MAAM,KAAKtH,CAAf,EAAkB;AAChBsH,kBAAM;AACP;;AACD,cAAIA,MAAM,KAAKrH,CAAf,EAAkB;AAChBqH,kBAAM;AACP;;AACD,cAAIA,MAAM,GAAGnH,CAAb,EAAgB;AACd,gBAAIqH,YAAJ,EAAkB;AAChB,oBAAO,oBAAoBH,CAA3B;AACD;;AACDC,kBAAM,GAAGvH,CAAT;AACAyH,wBAAY,GAAG,IAAf;AACD;;AACDD,sBAAY,IAAI,QAAhB;AACD;;AAED,eAAOA,YAAP;AACD;AAED;;;;;;;;;;;;;;;;;;AAgBA,eAASZ,mBAAT,CAA6Bc,CAA7B,EAAgClB,GAAhC,EAAqC;AAEnC,YAAIkB,CAAC,GAAG,GAAR,EAAa;AACX,gBAAO,sCAAsCA,CAA7C;AACD,SAJkC,CAMnC;AACA;;;AACA,YAAIC,MAAM,GAAG5H,sBAAsB,CAACyF,UAAvB,CAAkCgB,GAAG,GAAG,CAAxC,CAAb;AACA,YAAIoB,aAAa,GAAG,GAApB;AACA,YAAIH,YAAY,GAAG,KAAnB;;AAEA,eAAOE,MAAM,KAAKD,CAAC,CAAClC,UAAF,CAAa,CAAb,CAAlB,EAAmC;AACjCmC,gBAAM;;AACN,cAAIA,MAAM,KAAK1H,CAAf,EAAkB;AAChB0H,kBAAM;AACP;;AACD,cAAIA,MAAM,KAAKzH,CAAf,EAAkB;AAChByH,kBAAM;AACP,WAPgC,CAQjC;AACA;;;AACA,cAAIA,MAAM,GAAGxH,CAAb,EAAgB;AACd,gBAAIsH,YAAJ,EAAkB;AAAE;AAClB,oBAAO,oBAAoBC,CAA3B;AACD;;AACDC,kBAAM,GAAG3H,CAAT;AACAyH,wBAAY,GAAG,IAAf;AACD;;AACDG,uBAAa,IAAI,QAAjB;AACD;;AAED,eAAOA,aAAP;AACD;AAED;;;;;;;;;;;;AAUA,eAASf,cAAT,CAAwBtD,UAAxB,EAAoC;AAClC,YAAIJ,QAAJ;;AACA,gBAAQI,UAAR;AACA,eAAK,GAAL;AACEJ,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,GAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,QAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF,eAAK,GAAL;AACEA,oBAAQ,GAAG,SAAX;AACA;;AACF;AACEA,oBAAQ,GAAG,CAAC,GAAZ;AA9DF;;AAgEA,YAAIA,QAAQ,IAAI,GAAhB,EAAqB;AACnB,iBAAOA,QAAP;AACD,SAFD,MAGK;AACH,gBAAO,0BAA0BI,UAAjC;AACD;AAEF;;;;;;;;;;;;;;;;;ACzuBD;AAAA;;;AAAA;AAAA;AAAA;;AAEA,eAASsE,KAAT,CAAe3D,CAAf,EAAkBC,CAAlB,EAAqB2D,CAArB,EAAwB;AACtB,YAAI,EAAE,gBAAgBD,KAAlB,CAAJ,EAA8B;AAC5B,iBAAO,IAAIA,KAAJ,CAAU3D,CAAV,EAAaC,CAAb,EAAgB2D,CAAhB,CAAP;AACD;;AACD,YAAIC,KAAK,CAACC,OAAN,CAAc9D,CAAd,CAAJ,EAAsB;AACpB,eAAKA,CAAL,GAASA,CAAC,CAAC,CAAD,CAAV;AACA,eAAKC,CAAL,GAASD,CAAC,CAAC,CAAD,CAAV;AACA,eAAK4D,CAAL,GAAS5D,CAAC,CAAC,CAAD,CAAD,IAAQ,GAAjB;AACD,SAJD,MAIO,IAAG,OAAOA,CAAP,KAAa,QAAhB,EAA0B;AAC/B,eAAKA,CAAL,GAASA,CAAC,CAACA,CAAX;AACA,eAAKC,CAAL,GAASD,CAAC,CAACC,CAAX;AACA,eAAK2D,CAAL,GAAS5D,CAAC,CAAC4D,CAAF,IAAO,GAAhB;AACD,SAJM,MAIA,IAAI,OAAO5D,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,WAA1C,EAAuD;AAC5D,cAAI8D,MAAM,GAAG/D,CAAC,CAACgE,KAAF,CAAQ,GAAR,CAAb;AACA,eAAKhE,CAAL,GAASmD,UAAU,CAACY,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAnB;AACA,eAAK9D,CAAL,GAASkD,UAAU,CAACY,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAnB;AACA,eAAKH,CAAL,GAAST,UAAU,CAACY,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAV,IAA6B,GAAtC;AACD,SALM,MAKA;AACL,eAAK/D,CAAL,GAASA,CAAT;AACA,eAAKC,CAAL,GAASA,CAAT;AACA,eAAK2D,CAAL,GAASA,CAAC,IAAI,GAAd;AACD;;AACDK,eAAO,CAACC,IAAR,CAAa,6DAAb;AACD;;AAEDP,WAAK,CAACQ,QAAN,GAAiB,UAASC,OAAT,EAAkB;AACjC,eAAO,IAAIT,KAAJ,CAAU,qDAAQS,OAAR,CAAV,CAAP;AACD,OAFD;;AAGAT,WAAK,CAACU,SAAN,CAAgBC,MAAhB,GAAyB,UAAS/H,QAAT,EAAmB;AAC1C,eAAO,qDAAQ,CAAC,KAAKyD,CAAN,EAAS,KAAKC,CAAd,CAAR,EAA0B1D,QAA1B,CAAP;AACD,OAFD;AAGe;;;AAAA,uCAAAoH,KAAA;;;;;;;;;;;;;;;;ACjCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,eAASY,UAAT,CAAoBC,OAApB,EAA4BC,QAA5B,EAAsC;AACpC,YAAI,EAAE,gBAAgBF,UAAlB,CAAJ,EAAmC;AACjC,iBAAO,IAAIA,UAAJ,CAAeC,OAAf,CAAP;AACD;;AACDC,gBAAQ,GAAGA,QAAQ,IAAI,UAASC,KAAT,EAAe;AACpC,cAAGA,KAAH,EAAS;AACP,kBAAMA,KAAN;AACD;AACF,SAJD;;AAKA,YAAIC,IAAI,GAAG,2DAAUH,OAAV,CAAX;;AACA,YAAG,OAAOG,IAAP,KAAgB,QAAnB,EAA4B;AAC1BF,kBAAQ,CAACD,OAAD,CAAR;AACA;AACD;;AACD,YAAII,OAAO,GAAGL,UAAU,CAACM,WAAX,CAAuBC,GAAvB,CAA2BH,IAAI,CAACI,QAAhC,CAAd;;AACA,YAAG,CAACH,OAAJ,EAAY;AACVH,kBAAQ,CAACD,OAAD,CAAR;AACA;AACD;;AACD,YAAIG,IAAI,CAACK,SAAL,IAAkBL,IAAI,CAACK,SAAL,KAAmB,MAAzC,EAAiD;AAC/C,cAAIC,QAAQ,GAAG,uDAAM,wDAAN,EAAaN,IAAI,CAACK,SAAlB,CAAf;;AACA,cAAIC,QAAJ,EAAc;AACZN,gBAAI,CAACO,YAAL,GAAoBP,IAAI,CAACO,YAAL,KAAsBD,QAAQ,CAACE,OAAT,GAAmBF,QAAQ,CAACE,OAAT,CAAiBnB,KAAjB,CAAuB,GAAvB,CAAnB,GAAiD,IAAvE,CAApB;AACAW,gBAAI,CAACS,KAAL,GAAaH,QAAQ,CAACI,OAAtB;AACAV,gBAAI,CAACW,SAAL,GAAiBL,QAAQ,CAACK,SAAT,GAAqBL,QAAQ,CAACK,SAA9B,GAA0CX,IAAI,CAACK,SAAhE;AACD;AACF;;AACDL,YAAI,CAAC5G,EAAL,GAAU4G,IAAI,CAAC5G,EAAL,IAAW,GAArB;AACA4G,YAAI,CAACY,IAAL,GAAYZ,IAAI,CAACY,IAAL,IAAa,KAAzB;AACAZ,YAAI,CAACS,KAAL,GAAaT,IAAI,CAACS,KAAL,IAAc,OAA3B;AACAT,YAAI,CAACa,IAAL,GAAYb,IAAI,CAACa,IAAL,IAAab,IAAI,CAACc,IAA9B,CA9BoC,CA8BA;;AAEpC,YAAIC,OAAO,GAAG,gEAAUf,IAAI,CAAC9G,CAAf,EAAkB8G,IAAI,CAACgB,CAAvB,EAA0BhB,IAAI,CAACiB,EAA/B,EAAmCjB,IAAI,CAACS,KAAxC,EAA+CT,IAAI,CAACkB,MAApD,CAAd;AACA,YAAIC,GAAG,GAAG,sEAAgBJ,OAAO,CAAC7H,CAAxB,EAA2B6H,OAAO,CAACC,CAAnC,EAAsCD,OAAO,CAACE,EAA9C,EAAkDjB,IAAI,CAACoB,GAAvD,CAAV;AACA,YAAIC,QAAQ,GAAG,6DAAYrB,IAAI,CAACqB,QAAjB,CAAf;AACA,YAAIC,QAAQ,GAAGtB,IAAI,CAACuB,KAAL,IAAc,uDAAMvB,IAAI,CAACK,SAAX,EAAsBL,IAAI,CAACO,YAA3B,EAAyCQ,OAAO,CAAC7H,CAAjD,EAAoD6H,OAAO,CAACC,CAA5D,EAA+DG,GAAG,CAACK,EAAnE,EAAuEL,GAAG,CAACM,GAA3E,EAC3BJ,QAD2B,CAA7B;AAGA,gEAAO,IAAP,EAAarB,IAAb,EAtCoC,CAsChB;;AACpB,gEAAO,IAAP,EAAaC,OAAb,EAvCoC,CAuCb;AAEvB;;AACA,aAAK/G,CAAL,GAAS6H,OAAO,CAAC7H,CAAjB;AACA,aAAK8H,CAAL,GAASD,OAAO,CAACC,CAAjB;AACA,aAAKC,EAAL,GAAUF,OAAO,CAACE,EAAlB;AACA,aAAKC,MAAL,GAAcH,OAAO,CAACG,MAAtB,CA7CoC,CA+CpC;;AACA,aAAKM,EAAL,GAAUL,GAAG,CAACK,EAAd;AACA,aAAK/C,CAAL,GAAS0C,GAAG,CAAC1C,CAAb;AACA,aAAKgD,GAAL,GAAWN,GAAG,CAACM,GAAf,CAlDoC,CAoDpC;;AACA,aAAKF,KAAL,GAAaD,QAAb,CArDoC,CAuDpC;;AACA,aAAKI,IAAL,GAxDoC,CA0DpC;;AACA5B,gBAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AAED;;AACDF,gBAAU,CAACM,WAAX,GAAyB,oDAAzB;AACAN,gBAAU,CAACM,WAAX,CAAuByB,KAAvB;AACe;;AAAA,uCAAA/B,UAAA;;;;;;;;;;;;;;;;ACzEf;AAAe;;;AAAA;AACb,YAAIgC,GAAG,GAAGC,KAAK,CAACxG,CAAhB;AAAA,YACEyG,GAAG,GAAGD,KAAK,CAACvG,CADd;AAAA,YAEEyG,GAAG,GAAGF,KAAK,CAAC5C,CAAN,IAAW,GAFnB;AAGA,YAAI+C,CAAJ,EAAOC,CAAP,EAAU5F,CAAV;AACA,YAAI6F,GAAG,GAAG,EAAV;;AACA,aAAK7F,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;AACtB,cAAI8F,MAAM,IAAI9F,CAAC,KAAK,CAAhB,IAAqBwF,KAAK,CAAC5C,CAAN,KAAYmD,SAArC,EAAgD;AAC9C;AACD;;AACD,cAAI/F,CAAC,KAAK,CAAV,EAAa;AACX2F,aAAC,GAAGJ,GAAJ;;AACA,gBAAI,KAAKS,OAAL,CAAaC,GAAG,CAAC1B,IAAJ,CAASvE,CAAT,CAAb,MAA8B,CAAC,CAAnC,EAAsC;AACpC4F,eAAC,GAAG,GAAJ;AACD,aAFD,MAEO;AACLA,eAAC,GAAG,GAAJ;AACD;AAEF,WARD,MASK,IAAI5F,CAAC,KAAK,CAAV,EAAa;AAChB2F,aAAC,GAAGF,GAAJ;;AACA,gBAAI,KAAKO,OAAL,CAAaC,GAAG,CAAC1B,IAAJ,CAASvE,CAAT,CAAb,MAA8B,CAAC,CAAnC,EAAsC;AACpC4F,eAAC,GAAG,GAAJ;AACD,aAFD,MAEO;AACLA,eAAC,GAAG,GAAJ;AACD;AACF,WAPI,MAQA;AACHD,aAAC,GAAGD,GAAJ;AACAE,aAAC,GAAG,GAAJ;AACD;;AACD,kBAAQK,GAAG,CAAC1B,IAAJ,CAASvE,CAAT,CAAR;AACA,iBAAK,GAAL;AACE6F,iBAAG,CAACD,CAAD,CAAH,GAASD,CAAT;AACA;;AACF,iBAAK,GAAL;AACEE,iBAAG,CAACD,CAAD,CAAH,GAAS,CAACD,CAAV;AACA;;AACF,iBAAK,GAAL;AACEE,iBAAG,CAACD,CAAD,CAAH,GAASD,CAAT;AACA;;AACF,iBAAK,GAAL;AACEE,iBAAG,CAACD,CAAD,CAAH,GAAS,CAACD,CAAV;AACA;;AACF,iBAAK,GAAL;AACE,kBAAIH,KAAK,CAACI,CAAD,CAAL,KAAaG,SAAjB,EAA4B;AAC1BF,mBAAG,CAACjD,CAAJ,GAAQ+C,CAAR;AACD;;AACD;;AACF,iBAAK,GAAL;AACE,kBAAIH,KAAK,CAACI,CAAD,CAAL,KAAaG,SAAjB,EAA4B;AAC1BF,mBAAG,CAACjD,CAAJ,GAAQ,CAAC+C,CAAT;AACD;;AACD;;AACF;AACE;AACA,qBAAO,IAAP;AAzBF;AA2BD;;AACD,eAAOE,GAAP;AACD,OA5Dc;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACbK,kBAAU,CAACV,KAAK,CAACxG,CAAP,CAAV;AACAkH,kBAAU,CAACV,KAAK,CAACvG,CAAP,CAAV;AACD,OAHc;;AAIf,eAASiH,UAAT,CAAoBC,GAApB,EAAyB;AACvB,YAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,UAA/B,EAA2C;AACzC,cAAID,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAJ,EAA0B;AACxB;AACD;;AACD,gBAAM,IAAIG,SAAJ,CAAc,oCAAd,CAAN;AACD;;AACD,YAAI,OAAOH,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAKA,GAAnC,IAA0C,CAACE,QAAQ,CAACF,GAAD,CAAvD,EAA8D;AAC5D,gBAAM,IAAIG,SAAJ,CAAc,oCAAd,CAAN;AACD;AACF;;;;;;;;;;;;;;;;;ACdD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGe;;;AAAA;AACb,eAAQ/J,IAAI,CAACgK,GAAL,CAASvH,CAAT,IAAc,yDAAf,GAA0BA,CAA1B,GAA+BA,CAAC,GAAI,sDAAKA,CAAL,IAAUzC,IAAI,CAACC,EAA1D;AACD,OAFc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;;;AAAA;AACb,eAAQD,IAAI,CAACgK,GAAL,CAASvH,CAAT,KAAe,qDAAhB,GAAuBA,CAAvB,GAA4BA,CAAC,GAAI,sDAAKA,CAAL,IAAU,wDAAlD;AACD,OAFc;;;;;;;;;;;;;;;;;ACJf;AAAA;;;AAAA;AAAA;AAAA;AAEe;;;AAAA;AACb,YAAIwH,IAAI,KAAKT,SAAb,EAAwB;AACtBS,cAAI,GAAGjK,IAAI,CAACmB,KAAL,CAAW,CAAC,4DAAW/B,GAAX,IAAkBY,IAAI,CAACC,EAAxB,IAA8B,EAA9B,GAAmCD,IAAI,CAACC,EAAnD,IAAyD,CAAhE;;AAEA,cAAIgK,IAAI,GAAG,CAAX,EAAc;AACZ,mBAAO,CAAP;AACD,WAFD,MAEO,IAAIA,IAAI,GAAG,EAAX,EAAe;AACpB,mBAAO,EAAP;AACD;AACF;;AACD,eAAOA,IAAP;AACD,OAXc;;;;;;;;;;;;;;;;;ACFf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGe;;;AAAA;AACb,YAAIvH,CAAC,GAAG1C,IAAI,CAACgK,GAAL,CAASvH,CAAT,CAAR;AACAC,SAAC,GAAG,wDAAOA,CAAC,IAAI,IAAIA,CAAC,IAAI,uDAAM,CAAN,EAASA,CAAT,IAAc,CAAlB,CAAT,CAAR,CAAJ;AAEA,eAAOD,CAAC,GAAG,CAAJ,GAAQ,CAACC,CAAT,GAAaA,CAApB;AACD,OALc;;;;;;;;;;;;;;;;;ACHf;AAAe;;;AAAA;AACb,YAAI1C,IAAI,CAACgK,GAAL,CAASvH,CAAT,IAAc,CAAlB,EAAqB;AACnBA,WAAC,GAAIA,CAAC,GAAG,CAAL,GAAU,CAAV,GAAc,CAAC,CAAnB;AACD;;AACD,eAAOzC,IAAI,CAACkK,IAAL,CAAUzH,CAAV,CAAP;OAJa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAI0H,CAAC,GAAG,IAAInK,IAAI,CAACuB,GAAL,CAAS6I,KAAT,CAAZ;AACA,YAAI3G,CAAC,GAAG4G,EAAE,CAAClH,MAAH,GAAY,CAApB;AACA,YAAImH,GAAG,GAAGD,EAAE,CAAC5G,CAAD,CAAZ;AACA,YAAI8G,GAAG,GAAG,CAAV;AACA,YAAIC,EAAJ;;AAEA,eAAO,EAAE/G,CAAF,IAAO,CAAd,EAAiB;AACf+G,YAAE,GAAG,CAACD,GAAD,GAAOJ,CAAC,GAAGG,GAAX,GAAiBD,EAAE,CAAC5G,CAAD,CAAxB;AACA8G,aAAG,GAAGD,GAAN;AACAA,aAAG,GAAGE,EAAN;AACD;;AAED,eAAOxK,IAAI,CAACqB,GAAL,CAAS+I,KAAT,IAAkBI,EAAzB;AACD,OAdc;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGe;;;AAAA;AACb,YAAIC,SAAS,GAAGzK,IAAI,CAACqB,GAAL,CAAS+I,KAAT,CAAhB;AACA,YAAIM,SAAS,GAAG1K,IAAI,CAACuB,GAAL,CAAS6I,KAAT,CAAhB;AACA,YAAIO,UAAU,GAAG,sDAAKC,KAAL,CAAjB;AACA,YAAIC,UAAU,GAAG,sDAAKD,KAAL,CAAjB;AACA,YAAIT,CAAC,GAAG,IAAIO,SAAJ,GAAgBG,UAAxB;AACA,YAAIpH,CAAC,GAAG,CAAC,CAAD,GAAKgH,SAAL,GAAiBE,UAAzB;AACA,YAAIG,CAAC,GAAGT,EAAE,CAAClH,MAAH,GAAY,CAApB;AACA,YAAIqH,EAAE,GAAGH,EAAE,CAACS,CAAD,CAAX;AACA,YAAIC,GAAG,GAAG,CAAV;AACA,YAAIT,GAAG,GAAG,CAAV;AACA,YAAIU,EAAE,GAAG,CAAT;AACA,YAAIT,GAAJ;AACA,YAAIU,GAAJ;;AAEA,eAAO,EAAEH,CAAF,IAAO,CAAd,EAAiB;AACfP,aAAG,GAAGD,GAAN;AACAW,aAAG,GAAGF,GAAN;AACAT,aAAG,GAAGE,EAAN;AACAO,aAAG,GAAGC,EAAN;AACAR,YAAE,GAAG,CAACD,GAAD,GAAOJ,CAAC,GAAGG,GAAX,GAAiB7G,CAAC,GAAGsH,GAArB,GAA2BV,EAAE,CAACS,CAAD,CAAlC;AACAE,YAAE,GAAG,CAACC,GAAD,GAAOxH,CAAC,GAAG6G,GAAX,GAAiBH,CAAC,GAAGY,GAA1B;AACD;;AAEDZ,SAAC,GAAGM,SAAS,GAAGI,UAAhB;AACApH,SAAC,GAAGiH,SAAS,GAAGC,UAAhB;AAEA,eAAO,CAACR,CAAC,GAAGK,EAAJ,GAAS/G,CAAC,GAAGuH,EAAd,EAAkBb,CAAC,GAAGa,EAAJ,GAASvH,CAAC,GAAG+G,EAA/B,CAAP;AACD,OA5Bc;;;;;;;;;;;;;;;;;ACHf;AAAe;;;AAAA;AACb,YAAIL,CAAC,GAAGnK,IAAI,CAACkL,GAAL,CAASzI,CAAT,CAAR;AACA0H,SAAC,GAAG,CAACA,CAAC,GAAG,IAAIA,CAAT,IAAc,CAAlB;AACA,eAAOA,CAAP;OAHa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQ,IAAI,OAAO1H,CAAP,IAAY,IAAIA,CAAC,GAAG,EAAJ,IAAU,IAAI,OAAOA,CAArB,CAAhB,CAAZ;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQ,QAAQA,CAAR,IAAa,IAAI,OAAOA,CAAP,IAAY,IAAI,UAAUA,CAA1B,CAAjB,CAAR;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQ,aAAaA,CAAb,GAAiBA,CAAjB,IAAsB,IAAI,OAAOA,CAAjC,CAAR;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,IAAa,KAAK,IAAlB,CAAR;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAI0I,IAAI,GAAGtF,CAAC,GAAGuF,MAAf;AACA,eAAO9K,CAAC,GAAGN,IAAI,CAACoB,IAAL,CAAU,IAAI+J,IAAI,GAAGA,IAArB,CAAX;OAFa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAIE,MAAM,GAAG,IAAIrL,IAAI,CAACuB,GAAL,CAAS,IAAI+J,CAAb,CAAjB;AACA,YAAI7H,CAAC,GAAG4G,EAAE,CAAClH,MAAH,GAAY,CAApB;AACA,YAAIoI,EAAE,GAAGlB,EAAE,CAAC5G,CAAD,CAAX;AACA,YAAI+H,EAAE,GAAG,CAAT;AACA,YAAIC,CAAJ;;AAEA,eAAO,EAAEhI,CAAF,IAAO,CAAd,EAAiB;AACfgI,WAAC,GAAG,CAACD,EAAD,GAAMH,MAAM,GAAGE,EAAf,GAAoBlB,EAAE,CAAC5G,CAAD,CAA1B;AACA+H,YAAE,GAAGD,EAAL;AACAA,YAAE,GAAGE,CAAL;AACD;;AAED,eAAQH,CAAC,GAAGG,CAAC,GAAGzL,IAAI,CAACqB,GAAL,CAAS,IAAIiK,CAAb,CAAhB;AACD,OAdc;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb7I,SAAC,GAAGzC,IAAI,CAACgK,GAAL,CAASvH,CAAT,CAAJ;AACAC,SAAC,GAAG1C,IAAI,CAACgK,GAAL,CAAStH,CAAT,CAAJ;AACA,YAAIpC,CAAC,GAAGN,IAAI,CAAC0L,GAAL,CAASjJ,CAAT,EAAYC,CAAZ,CAAR;AACA,YAAI0F,CAAC,GAAGpI,IAAI,CAAC2L,GAAL,CAASlJ,CAAT,EAAYC,CAAZ,KAAkBpC,CAAC,GAAGA,CAAH,GAAO,CAA1B,CAAR;AAEA,eAAOA,CAAC,GAAGN,IAAI,CAACoB,IAAL,CAAU,IAAIpB,IAAI,CAAC2C,GAAL,CAASyF,CAAT,EAAY,CAAZ,CAAd,CAAX;AACD,OAPc;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAIwD,GAAJ;AACA,YAAIC,IAAJ;AAEAD,WAAG,GAAGE,EAAE,GAAGC,EAAX;;AACA,aAAK,IAAItI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BoI,cAAI,GAAG,CAACC,EAAE,IAAIC,EAAE,GAAGH,GAAL,GAAW3J,EAAE,GAAGjC,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAhB,GAAoCI,EAAE,GAAGhM,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAzC,GAA6DK,EAAE,GAAGjM,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAtE,CAAH,KAAgGG,EAAE,GAAG,IAAI9J,EAAJ,GAASjC,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAAd,GAAkC,IAAII,EAAJ,GAAShM,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAA3C,GAA+D,IAAIK,EAAJ,GAASjM,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAAxK,CAAP;AACAA,aAAG,IAAIC,IAAP;;AACA,cAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,YAAtB,EAAoC;AAClC,mBAAOD,GAAP;AACD;AACF,SAXY,CAab;;;AACA,eAAOM,GAAP;OAda;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAEe;;;AAAA;AACb,YAAIf,IAAI,GAAG,IAAI,CAAC,IAAIgB,MAAM,GAAGA,MAAd,KAAyB,IAAIA,MAA7B,IAAuCnM,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAID,MAAL,KAAgB,IAAIA,MAApB,CAAT,CAAtD;;AACA,YAAInM,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAASqC,CAAT,IAAclB,IAAvB,IAA+B,MAAnC,EAA2C;AACzC,cAAIkB,CAAC,GAAG,CAAR,EAAW;AACT,mBAAQ,CAAC,CAAD,GAAK,yDAAb;AACD,WAFD,MAGK;AACH,mBAAO,yDAAP;AACD;AACF,SATY,CAUb;;;AACA,YAAIT,GAAG,GAAG5L,IAAI,CAACkK,IAAL,CAAU,MAAMmC,CAAhB,CAAV;AACA,YAAIR,IAAJ;AACA,YAAIS,OAAJ;AACA,YAAIC,OAAJ;AACA,YAAIC,GAAJ;;AACA,aAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B6I,iBAAO,GAAGtM,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAV;AACAW,iBAAO,GAAGvM,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAV;AACAY,aAAG,GAAGL,MAAM,GAAGG,OAAf;AACAT,cAAI,GAAG7L,IAAI,CAAC2C,GAAL,CAAS,IAAI6J,GAAG,GAAGA,GAAnB,EAAwB,CAAxB,KAA8B,IAAID,OAAlC,KAA8CF,CAAC,IAAI,IAAIF,MAAM,GAAGA,MAAjB,CAAD,GAA4BG,OAAO,IAAI,IAAIE,GAAG,GAAGA,GAAd,CAAnC,GAAwD,MAAML,MAAN,GAAenM,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAII,GAAL,KAAa,IAAIA,GAAjB,CAAT,CAArH,CAAP;AACAZ,aAAG,IAAIC,IAAP;;AACA,cAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,YAAtB,EAAoC;AAClC,mBAAOD,GAAP;AACD;AACF,SAzBY,CA2Bb;;;AACA,eAAOM,GAAP;AACD,OA7Bc;;;;;;;;;;;;;;;;;ACFf;AAAe;;;AAAA;AACb,YAAIxJ,CAAC,GAAG,IAAID,CAAZ;AACA,YAAI4D,CAAC,GAAG3D,CAAC,GAAG,CAAZ;AAEA,eAAO2D,CAAC,KAAK,CAAN,GAAU5D,CAAV,GAAcA,CAAC,GAAGzC,IAAI,CAACoM,GAAL,CAAS1J,CAAT,CAAJ,GAAkB2D,CAAvC;AACD,OALc;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQ0F,EAAE,GAAGH,GAAL,GAAW3J,EAAE,GAAGjC,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAhB,GAAoCI,EAAE,GAAGhM,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAzC,GAA6DK,EAAE,GAAGjM,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAA1E;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAIY,GAAG,GAAGL,MAAM,GAAGf,MAAnB;AACA,eAAOqB,MAAM,GAAIzM,IAAI,CAACoB,IAAL,CAAU,IAAIoL,GAAG,GAAGA,GAApB,CAAjB;OAFa;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAEe;;;AAAA;AACb,YAAIE,MAAM,GAAG,MAAMP,MAAnB;AACA,YAAIK,GAAJ,EAASX,IAAT;AACA,YAAID,GAAG,GAAG,4DAAU,IAAI5L,IAAI,CAAC2M,IAAL,CAAUC,EAAV,CAAxB;;AACA,aAAK,IAAInJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B+I,aAAG,GAAGL,MAAM,GAAGnM,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAf;AACAC,cAAI,GAAG,4DAAU,IAAI7L,IAAI,CAAC2M,IAAL,CAAUC,EAAE,GAAI5M,IAAI,CAAC2C,GAAL,CAAU,CAAC,IAAI6J,GAAL,KAAa,IAAIA,GAAjB,CAAV,EAAkCE,MAAlC,CAAhB,CAAd,GAA4Ed,GAAnF;AACAA,aAAG,IAAIC,IAAP;;AACA,cAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,YAAtB,EAAoC;AAClC,mBAAOD,GAAP;AACD;AACF,SAXY,CAYb;;;AACA,eAAO,CAAC,IAAR;AACD,OAdc;;;;;;;;;;;;;;;;;ACFf;;AAAA,UAAIiB,GAAG,GAAG,CAAV;AACA,UAAIC,GAAG,GAAG,IAAV;AACA,UAAIC,GAAG,GAAG,QAAV;AACA,UAAIC,GAAG,GAAG,UAAV;AACA,UAAIC,GAAG,GAAG,gBAAV;AACA,UAAIC,GAAG,GAAG,IAAV;AACA,UAAIC,GAAG,GAAG,OAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,YAAV;AAEe;;AAAA;AACb,YAAIC,EAAE,GAAG,EAAT;AACAA,UAAE,CAAC,CAAD,CAAF,GAAQZ,GAAG,GAAGjE,EAAE,IAAIkE,GAAG,GAAGlE,EAAE,IAAImE,GAAG,GAAGnE,EAAE,IAAIoE,GAAG,GAAGpE,EAAE,GAAGqE,GAAf,CAAZ,CAAZ,CAAhB;AACAQ,UAAE,CAAC,CAAD,CAAF,GAAQ7E,EAAE,IAAIsE,GAAG,GAAGtE,EAAE,IAAImE,GAAG,GAAGnE,EAAE,IAAIoE,GAAG,GAAGpE,EAAE,GAAGqE,GAAf,CAAZ,CAAZ,CAAV;AACA,YAAI5D,CAAC,GAAGT,EAAE,GAAGA,EAAb;AACA6E,UAAE,CAAC,CAAD,CAAF,GAAQpE,CAAC,IAAI8D,GAAG,GAAGvE,EAAE,IAAIwE,GAAG,GAAGxE,EAAE,GAAGyE,GAAf,CAAZ,CAAT;AACAhE,SAAC,IAAIT,EAAL;AACA6E,UAAE,CAAC,CAAD,CAAF,GAAQpE,CAAC,IAAIiE,GAAG,GAAG1E,EAAE,GAAG2E,GAAf,CAAT;AACAE,UAAE,CAAC,CAAD,CAAF,GAAQpE,CAAC,GAAGT,EAAJ,GAAS4E,GAAjB;AACA,eAAOC,EAAP;OATa;;;;;;;;;;;;;;;;;ACbf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAIC,QAAQ,GAAG,EAAf;AAEe;;AAAA;AACb,YAAIC,CAAC,GAAG,KAAK,IAAI/E,EAAT,CAAR;AACA,YAAIgD,GAAG,GAAGgC,GAAV;;AACA,aAAK,IAAInK,CAAC,GAAGiK,QAAb,EAAuBjK,CAAvB,EAA0B,EAAEA,CAA5B,EAA+B;AAAE;AAC/B,cAAIoK,CAAC,GAAG7N,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAR;AACA,cAAIvC,CAAC,GAAG,IAAIT,EAAE,GAAGiF,CAAL,GAASA,CAArB,CAF6B,CAG7B;AACA;;AACAxE,WAAC,GAAG,CAAC,yDAAQuC,GAAR,EAAaiC,CAAb,EAAgB7N,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAhB,EAA+B6B,EAA/B,IAAqCG,GAAtC,KAA8CvE,CAAC,GAAGrJ,IAAI,CAACoB,IAAL,CAAUiI,CAAV,CAAlD,IAAkEsE,CAAtE;AACA/B,aAAG,IAAIvC,CAAP;;AACA,cAAIrJ,IAAI,CAACgK,GAAL,CAASX,CAAT,IAAc,uDAAlB,EAAyB;AACvB,mBAAOuC,GAAP;AACD;AACF,SAbY,CAcb;;;AACA,eAAOA,GAAP;AACD,OAhBc;;;;;;;;;;;;;;;;;ACLf;AAAe;;;AAAA;AACbkC,YAAI,IAAIC,IAAR;AACAA,YAAI,IAAIA,IAAR;AACA,eAAQN,EAAE,CAAC,CAAD,CAAF,GAAQ7B,GAAR,GAAckC,IAAI,IAAIL,EAAE,CAAC,CAAD,CAAF,GAAQM,IAAI,IAAIN,EAAE,CAAC,CAAD,CAAF,GAAQM,IAAI,IAAIN,EAAE,CAAC,CAAD,CAAF,GAAQM,IAAI,GAAGN,EAAE,CAAC,CAAD,CAArB,CAAhB,CAAhB,CAA1B;OAHa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAIjB,GAAJ;;AACA,YAAIL,MAAM,GAAG,MAAb,EAAqB;AACnBK,aAAG,GAAGL,MAAM,GAAGf,MAAf;AACA,iBAAQ,CAAC,IAAIe,MAAM,GAAGA,MAAd,KAAyBf,MAAM,IAAI,IAAIoB,GAAG,GAAGA,GAAd,CAAN,GAA4B,MAAML,MAAP,GAAiBnM,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAII,GAAL,KAAa,IAAIA,GAAjB,CAAT,CAArE,CAAR;AACD,SAHD,MAIK;AACH,iBAAQ,IAAIpB,MAAZ;AACD;OARY;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAO3I,CAAC,GAAC,CAAF,GAAM,CAAC,CAAP,GAAW,CAAlB;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAI0H,CAAC,GAAGnK,IAAI,CAACkL,GAAL,CAASzI,CAAT,CAAR;AACA0H,SAAC,GAAG,CAACA,CAAC,GAAG,IAAIA,CAAT,IAAc,CAAlB;AACA,eAAOA,CAAP;OAHa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,eAAQnK,IAAI,CAAC2C,GAAL,CAAS,CAAC,IAAIqL,KAAL,KAAe,IAAIA,KAAnB,CAAT,EAAoC9C,GAApC,CAAR;OADa;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACb,YAAI5B,GAAG,GAAG;AACR7G,WAAC,EAAEwL,KAAK,CAAC,CAAD,CADA;AAERvL,WAAC,EAAEuL,KAAK,CAAC,CAAD;AAFA,SAAV;;AAIA,YAAIA,KAAK,CAAC9K,MAAN,GAAa,CAAjB,EAAoB;AAClBmG,aAAG,CAACjD,CAAJ,GAAQ4H,KAAK,CAAC,CAAD,CAAb;AACD;;AACD,YAAIA,KAAK,CAAC9K,MAAN,GAAa,CAAjB,EAAoB;AAClBmG,aAAG,CAAC4E,CAAJ,GAAQD,KAAK,CAAC,CAAD,CAAb;AACD;;AACD,eAAO3E,GAAP;OAXa;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAEe;;;AAAA;AACb,YAAIkD,GAAG,GAAGL,MAAM,GAAGf,MAAnB;AACA,YAAI+C,GAAG,GAAG,MAAMhC,MAAhB;AACAK,WAAG,GAAGxM,IAAI,CAAC2C,GAAL,CAAU,CAAC,IAAI6J,GAAL,KAAa,IAAIA,GAAjB,CAAV,EAAkC2B,GAAlC,CAAN;AACA,eAAQnO,IAAI,CAACsB,GAAL,CAAS,OAAO,4DAAUsK,GAAjB,CAAT,IAAkCY,GAA1C;AACD,OALc;;;;;;;;;;;;;;;;;ACFf;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAI4B,OAAO,GAAG,EAAd;AAEAA,aAAO,CAACC,KAAR,GAAgB;AACdzG,eAAO,EAAE,OADK;AAEdE,eAAO,EAAE,OAFK;AAGdC,iBAAS,EAAE;AAHG,OAAhB;AAMAqG,aAAO,CAACE,MAAR,GAAiB;AACf1G,eAAO,EAAE,wBADM;AAEfE,eAAO,EAAE,QAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACG,MAAR,GAAiB;AACf3G,eAAO,EAAE,sBADM;AAEfE,eAAO,EAAE,OAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACI,KAAR,GAAgB;AACd5G,eAAO,EAAE,OADK;AAEdE,eAAO,EAAE,OAFK;AAGdC,iBAAS,EAAE;AAHG,OAAhB;AAMAqG,aAAO,CAACK,KAAR,GAAgB;AACdhG,gBAAQ,EAAE,0CADI;AAEdX,eAAO,EAAE,QAFK;AAGdC,iBAAS,EAAE;AAHG,OAAhB;AAMAqG,aAAO,CAACM,OAAR,GAAkB;AAChB9G,eAAO,EAAE,yCADO;AAEhBE,eAAO,EAAE,QAFO;AAGhBC,iBAAS,EAAE;AAHK,OAAlB;AAMAqG,aAAO,CAACO,QAAR,GAAmB;AACjB/G,eAAO,EAAE,kBADQ;AAEjBE,eAAO,EAAE,SAFQ;AAGjBC,iBAAS,EAAE;AAHM,OAAnB;AAMAqG,aAAO,CAACQ,aAAR,GAAwB;AACtBhH,eAAO,EAAE,iDADa;AAEtBE,eAAO,EAAE,QAFa;AAGtBC,iBAAS,EAAE;AAHW,OAAxB;AAMAqG,aAAO,CAACS,MAAR,GAAiB;AACfjH,eAAO,EAAE,oDADM;AAEfE,eAAO,EAAE,MAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACU,KAAR,GAAgB;AACdlH,eAAO,EAAE,oDADK;AAEdE,eAAO,EAAE,UAFK;AAGdC,iBAAS,EAAE;AAHG,OAAhB;AAMAqG,aAAO,CAACW,UAAR,GAAqB;AACnBnH,eAAO,EAAE,wBADU;AAEnBE,eAAO,EAAE,MAFU;AAGnBC,iBAAS,EAAE;AAHQ,OAArB;AAMAqG,aAAO,CAACY,MAAR,GAAiB;AACfpH,eAAO,EAAE,4CADM;AAEfE,eAAO,EAAE,MAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACa,MAAR,GAAiB;AACfrH,eAAO,EAAE,wDADM;AAEfE,eAAO,EAAE,MAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACc,MAAR,GAAiB;AACftH,eAAO,EAAE,YADM;AAEfE,eAAO,EAAE,QAFM;AAGfC,iBAAS,EAAE;AAHI,OAAjB;AAMAqG,aAAO,CAACe,QAAR,GAAmB;AACjBvH,eAAO,EAAE,cADQ;AAEjBE,eAAO,EAAE,QAFQ;AAGjBC,iBAAS,EAAE;AAHM,OAAnB;AAMAqG,aAAO,CAACgB,aAAR,GAAwB;AACtBxH,eAAO,EAAE,aADa;AAEtBE,eAAO,EAAE,QAFa;AAGtBC,iBAAS,EAAE;AAHW,OAAxB;AAMAqG,aAAO,CAACiB,KAAR,GAAgB;AACdzH,eAAO,EAAE,uDADK;AAEdE,eAAO,EAAE,MAFK;AAGdC,iBAAS,EAAE;AAHG,OAAhB;;;;;;;;;;;;;;;;AClGA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAIqG,OAAO,GAAG,EAAd;AAEAA,aAAO,CAACkB,KAAR,GAAgB;AACdhP,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,OAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACoB,KAAR,GAAgB;AACdlP,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,OAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACqB,KAAR,GAAgB;AACdnP,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,aAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACsB,KAAR,GAAgB;AACdpP,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,OAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACuB,IAAR,GAAe;AACbrP,SAAC,EAAE,WADU;AAEb8H,SAAC,EAAE,WAFU;AAGbmH,mBAAW,EAAE;AAHA,OAAf;AAMAnB,aAAO,CAACwB,IAAR,GAAe;AACbtP,SAAC,EAAE,OADU;AAEb+H,UAAE,EAAE,MAFS;AAGbkH,mBAAW,EAAE;AAHA,OAAf;AAMAnB,aAAO,CAACyB,KAAR,GAAgB;AACdvP,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,MAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAAC0B,QAAR,GAAmB;AACjBxP,SAAC,EAAE,WADc;AAEjB8H,SAAC,EAAE,WAFc;AAGjBmH,mBAAW,EAAE;AAHI,OAAnB;AAMAnB,aAAO,CAAC2B,MAAR,GAAiB;AACfzP,SAAC,EAAE,UADY;AAEf+H,UAAE,EAAE,KAFW;AAGfkH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAAC4B,OAAR,GAAkB;AAChB1P,SAAC,EAAE,SADa;AAEhB+H,UAAE,EAAE,MAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC6B,KAAR,GAAgB;AACd3P,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,cAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAAC8B,MAAR,GAAiB;AACf5P,SAAC,EAAE,WADY;AAEf+H,UAAE,EAAE,WAFW;AAGfkH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAAC+B,QAAR,GAAmB;AACjB7P,SAAC,EAAE,WADc;AAEjB+H,UAAE,EAAE,WAFa;AAGjBkH,mBAAW,EAAE;AAHI,OAAnB;AAMAnB,aAAO,CAACgC,MAAR,GAAiB;AACf9P,SAAC,EAAE,SADY;AAEf8H,SAAC,EAAE,SAFY;AAGfmH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAACiC,MAAR,GAAiB;AACf/P,SAAC,EAAE,WADY;AAEf+H,UAAE,EAAE,QAFW;AAGfkH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAACkC,MAAR,GAAiB;AACfhQ,SAAC,EAAE,iBADY;AAEf+H,UAAE,EAAE,iBAFW;AAGfkH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAACmC,GAAR,GAAc;AACZjQ,SAAC,EAAE,SADS;AAEZ+H,UAAE,EAAE,MAFQ;AAGZkH,mBAAW,EAAE;AAHD,OAAd;AAMAnB,aAAO,CAACoC,MAAR,GAAiB;AACflQ,SAAC,EAAE,SADY;AAEf+H,UAAE,EAAE,KAFW;AAGfkH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAACqC,OAAR,GAAkB;AAChBnQ,SAAC,EAAE,UADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACsC,OAAR,GAAkB;AAChBpQ,SAAC,EAAE,WADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACuC,OAAR,GAAkB;AAChBrQ,SAAC,EAAE,WADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACwC,OAAR,GAAkB;AAChBtQ,SAAC,EAAE,WADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACyC,OAAR,GAAkB;AAChBvQ,SAAC,EAAE,WADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC0C,OAAR,GAAkB;AAChBxQ,SAAC,EAAE,WADa;AAEhB+H,UAAE,EAAE,QAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC2C,OAAR,GAAkB;AAChBzQ,SAAC,EAAE,SADa;AAEhB+H,UAAE,EAAE,KAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC4C,QAAR,GAAmB;AACjB1Q,SAAC,EAAE,SADc;AAEjB+H,UAAE,EAAE,KAFa;AAGjBkH,mBAAW,EAAE;AAHI,OAAnB;AAMAnB,aAAO,CAAC6C,OAAR,GAAkB;AAChB3Q,SAAC,EAAE,SADa;AAEhB+H,UAAE,EAAE,KAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC8C,OAAR,GAAkB;AAChB5Q,SAAC,EAAE,SADa;AAEhB+H,UAAE,EAAE,KAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAAC+C,KAAR,GAAgB;AACd7Q,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,KAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACgD,IAAR,GAAe;AACb9Q,SAAC,EAAE,SADU;AAEb+H,UAAE,EAAE,KAFS;AAGbkH,mBAAW,EAAE;AAHA,OAAf;AAMAnB,aAAO,CAACiD,KAAR,GAAgB;AACd/Q,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,MAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACkD,KAAR,GAAgB;AACdhR,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,OAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACmD,KAAR,GAAgB;AACdjR,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,KAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACoD,QAAR,GAAmB;AACjBlR,SAAC,EAAE,SADc;AAEjB8H,SAAC,EAAE,SAFc;AAGjBmH,mBAAW,EAAE;AAHI,OAAnB;AAMAnB,aAAO,CAACqD,OAAR,GAAkB;AAChBnR,SAAC,EAAE,SADa;AAEhB+H,UAAE,EAAE,SAFY;AAGhBkH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACsD,KAAR,GAAgB;AACdpR,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,KAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAACuD,MAAR,GAAiB;AACfrR,SAAC,EAAE,SADY;AAEf8H,SAAC,EAAE,YAFY;AAGfmH,mBAAW,EAAE;AAHE,OAAjB;AAMAnB,aAAO,CAACwD,OAAR,GAAkB;AAChBtR,SAAC,EAAE,SADa;AAEhB8H,SAAC,EAAE,YAFa;AAGhBmH,mBAAW,EAAE;AAHG,OAAlB;AAMAnB,aAAO,CAACyD,KAAR,GAAgB;AACdvR,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,KAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAAC0D,KAAR,GAAgB;AACdxR,SAAC,EAAE,SADW;AAEd+H,UAAE,EAAE,MAFU;AAGdkH,mBAAW,EAAE;AAHC,OAAhB;AAMAnB,aAAO,CAAC2D,IAAR,GAAe;AACbzR,SAAC,EAAE,SADU;AAEb+H,UAAE,EAAE,MAFS;AAGbkH,mBAAW,EAAE;AAHA,OAAf;AAMO,UAAIyC,KAAK,GAAG5D,OAAO,CAAC4D,KAAR,GAAgB;AACjC1R,SAAC,EAAE,SAD8B;AAEjC+H,UAAE,EAAE,aAF6B;AAGjCkH,mBAAW,EAAE;AAHoB,OAA5B;AAMPnB,aAAO,CAAC9F,MAAR,GAAiB;AACfhI,SAAC,EAAE,SADY;AAEf8H,SAAC,EAAE,SAFY;AAGfmH,mBAAW,EAAE;AAHE,OAAjB;;;;;;;;;;;;;;;;AC9PA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAInB,OAAO,GAAG,EAAd;AAGAA,aAAO,CAAC6D,SAAR,GAAoB,GAApB,C,CAAyB;;AACzB7D,aAAO,CAAC8D,MAAR,GAAiB,CAAC,cAAlB,C,CAAkC;;AAClC9D,aAAO,CAAC+D,KAAR,GAAgB,cAAhB,C,CAAgC;;AAChC/D,aAAO,CAACgE,MAAR,GAAiB,CAAC,eAAlB,C,CAAmC;;AACnChE,aAAO,CAACiE,MAAR,GAAiB,CAAC,cAAlB,C,CAAkC;;AAClCjE,aAAO,CAACkE,IAAR,GAAe,eAAf,C,CAAgC;;AAChClE,aAAO,CAACmE,IAAR,GAAe,cAAf,C,CAA+B;;AAC/BnE,aAAO,CAACoE,OAAR,GAAkB,gBAAlB,C,CAAoC;;AACpCpE,aAAO,CAACqE,KAAR,GAAgB,CAAC,eAAjB,C,CAAkC;;AAClCrE,aAAO,CAACsE,QAAR,GAAmB,QAAnB,C,CAA6B;;AAC7BtE,aAAO,CAACuE,SAAR,GAAoB,eAApB,C,CAAqC;;AACrCvE,aAAO,CAACwE,MAAR,GAAiB,UAAjB,C,CAA6B;;AAC7BxE,aAAO,CAACyE,IAAR,GAAe,eAAf,C,CAAgC;;;;;;;;;;;;;;;;;ACfhC;AAAe;;;AAAA;AACbC,UAAE,EAAE;AAACC,kBAAQ,EAAE;AAAX,SADS;AAEb,iBAAS;AAACA,kBAAQ,EAAE,OAAO;AAAlB;AAFI;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,SAAS,GAAG,CAAhB,C,CAAmB;;AACnB,UAAIC,WAAW,GAAG,CAAlB,C,CAAqB;;AACrB,UAAIC,mBAAmB,GAAG,SAA1B,C,CAAsC;;AACtC,UAAIC,mBAAmB,GAAG,WAA1B,C,CAAwC;;AACxC,UAAIC,kBAAkB,GAAG,qBAAzB,C,CAAgD;;AAChD,UAAIC,UAAU,GAAG,kCAAjB;AACA,UAAIC,OAAO,GAAGzT,IAAI,CAACC,EAAL,GAAQ,CAAtB,C,CACP;;AACO,UAAIyT,KAAK,GAAG,qBAAZ;AACP;;AACO,UAAIC,GAAG,GAAG,sBAAV;AACP;;AACO,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,KAAK,GAAG,OAAZ,C,CACP;AACA;;AAEO,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,oBAAV;AACA,UAAIC,MAAM,GAAGhU,IAAI,CAACC,EAAL,GAAQ,CAArB;AACA,UAAIgU,MAAM,GAAGjU,IAAI,CAACC,EAAL,GAAU,CAAvB,C,CACP;AACA;AACA;AACA;;AACO,UAAIiU,GAAG,GAAG,aAAV;;;;;;;;;;;;;;;;AC5BP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAI7F,KAAK,GAAG,sDAAK,OAAL,CAAZ;;AAEA,eAAS8F,WAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+B7N,MAA/B,EAAuC8N,WAAvC,EAAoD;AAClD,YAAIC,gBAAJ,EAAsBjL,GAAtB,EAA2BkL,IAA3B;;AACA,YAAIlO,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAJ,EAA2B;AACzB+N,0BAAgB,GAAG,2DAAUH,IAAV,EAAgBC,EAAhB,EAAoB7N,MAApB,EAA4B8N,WAA5B,KAA4C;AAAC7R,aAAC,EAAEyJ,GAAJ;AAASxJ,aAAC,EAAEwJ;AAAZ,WAA/D;;AACA,cAAI1F,MAAM,CAACrD,MAAP,GAAgB,CAApB,EAAuB;AACrB,gBAAK,OAAOiR,IAAI,CAACK,IAAZ,KAAqB,WAArB,IAAoCL,IAAI,CAACK,IAAL,KAAc,SAAnD,IAAkE,OAAOJ,EAAE,CAACI,IAAV,KAAmB,WAAnB,IAAkCJ,EAAE,CAACI,IAAH,KAAY,SAApH,EAAgI;AAC9H,kBAAI,OAAOF,gBAAgB,CAAClO,CAAxB,KAA8B,QAAlC,EAA4C;AAC1C,uBAAO,CAACkO,gBAAgB,CAAC9R,CAAlB,EAAqB8R,gBAAgB,CAAC7R,CAAtC,EAAyC6R,gBAAgB,CAAClO,CAA1D,EAA6DqO,MAA7D,CAAoElO,MAAM,CAACmO,MAAP,CAAc,CAAd,CAApE,CAAP;AACD,eAFD,MAEO;AACL,uBAAO,CAACJ,gBAAgB,CAAC9R,CAAlB,EAAqB8R,gBAAgB,CAAC7R,CAAtC,EAAyC8D,MAAM,CAAC,CAAD,CAA/C,EAAoDkO,MAApD,CAA2DlO,MAAM,CAACmO,MAAP,CAAc,CAAd,CAA3D,CAAP;AACD;AACF,aAND,MAMO;AACL,qBAAO,CAACJ,gBAAgB,CAAC9R,CAAlB,EAAqB8R,gBAAgB,CAAC7R,CAAtC,EAAyCgS,MAAzC,CAAgDlO,MAAM,CAACmO,MAAP,CAAc,CAAd,CAAhD,CAAP;AACD;AACF,WAVD,MAUO;AACL,mBAAO,CAACJ,gBAAgB,CAAC9R,CAAlB,EAAqB8R,gBAAgB,CAAC7R,CAAtC,CAAP;AACD;AACF,SAfD,MAeO;AACL4G,aAAG,GAAG,2DAAU8K,IAAV,EAAgBC,EAAhB,EAAoB7N,MAApB,EAA4B8N,WAA5B,CAAN;AACAE,cAAI,GAAGI,MAAM,CAACJ,IAAP,CAAYhO,MAAZ,CAAP;;AACA,cAAIgO,IAAI,CAACrR,MAAL,KAAgB,CAApB,EAAuB;AACrB,mBAAOmG,GAAP;AACD;;AACDkL,cAAI,CAACK,OAAL,CAAa,UAAUC,GAAV,EAAe;AAC1B,gBAAK,OAAOV,IAAI,CAACK,IAAZ,KAAqB,WAArB,IAAoCL,IAAI,CAACK,IAAL,KAAc,SAAnD,IAAkE,OAAOJ,EAAE,CAACI,IAAV,KAAmB,WAAnB,IAAkCJ,EAAE,CAACI,IAAH,KAAY,SAApH,EAAgI;AAC9H,kBAAIK,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAAvB,IAA8BA,GAAG,KAAK,GAA1C,EAA+C;AAC7C;AACD;AACF,aAJD,MAIO;AACL,kBAAIA,GAAG,KAAK,GAAR,IAAeA,GAAG,KAAK,GAA3B,EAAgC;AAC9B;AACD;AACF;;AACDxL,eAAG,CAACwL,GAAD,CAAH,GAAWtO,MAAM,CAACsO,GAAD,CAAjB;AACD,WAXD;AAYA,iBAAOxL,GAAP;AACD;AACF;;AAED,eAASyL,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,YAAIA,IAAI,YAAY,6CAApB,EAA0B;AACxB,iBAAOA,IAAP;AACD;;AACD,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,iBAAOD,IAAI,CAACC,KAAZ;AACD;;AACD,eAAO,sDAAKD,IAAL,CAAP;AACD;;AAED,eAASE,KAAT,CAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;AACtCF,gBAAQ,GAAGJ,SAAS,CAACI,QAAD,CAApB;AACA,YAAIG,MAAM,GAAG,KAAb;AACA,YAAIC,GAAJ;;AACA,YAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,gBAAM,GAAGD,QAAT;AACAA,kBAAQ,GAAG9G,KAAX;AACAiH,gBAAM,GAAG,IAAT;AACD,SAJD,MAIO,IAAI,OAAOF,MAAM,CAAC3S,CAAd,KAAoB,WAApB,IAAmC6D,KAAK,CAACC,OAAN,CAAc6O,MAAd,CAAvC,EAA8D;AACnEC,eAAK,GAAGD,MAAR;AACAA,gBAAM,GAAGD,QAAT;AACAA,kBAAQ,GAAG9G,KAAX;AACAiH,gBAAM,GAAG,IAAT;AACD;;AACDF,cAAM,GAAGL,SAAS,CAACK,MAAD,CAAlB;;AACA,YAAIC,KAAJ,EAAW;AACT,iBAAOlB,WAAW,CAACgB,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,CAAlB;AACD,SAFD,MAEO;AACLE,aAAG,GAAG;AACJ3W,mBAAO,EAAE,iBAAU4H,MAAV,EAAkB8N,WAAlB,EAA+B;AACtC,qBAAOH,WAAW,CAACgB,QAAD,EAAWC,MAAX,EAAmB5O,MAAnB,EAA2B8N,WAA3B,CAAlB;AACD,aAHG;AAIJzV,mBAAO,EAAE,iBAAU2H,MAAV,EAAkB8N,WAAlB,EAA+B;AACtC,qBAAOH,WAAW,CAACiB,MAAD,EAASD,QAAT,EAAmB3O,MAAnB,EAA2B8N,WAA3B,CAAlB;AACD;AANG,WAAN;;AAQA,cAAIgB,MAAJ,EAAY;AACVC,eAAG,CAACN,KAAJ,GAAYG,MAAZ;AACD;;AACD,iBAAOG,GAAP;AACD;AACF;AACc;;;AAAA,uCAAAL,KAAA;;;;;;;;;;;;;;;;ACrFf;AAAA;;;AAAA;AAAA;AAAA;;AAEA,eAASvM,KAAT,CAAelB,SAAf,EAA0BE,YAA1B,EAAwCrH,CAAxC,EAA2C8H,CAA3C,EAA8CQ,EAA9C,EAAkDC,GAAlD,EAAuDJ,QAAvD,EAAiE;AAC/D,YAAIa,GAAG,GAAG,EAAV;;AAEA,YAAI7B,SAAS,KAAK+B,SAAd,IAA2B/B,SAAS,KAAK,MAA7C,EAAqD;AACnD6B,aAAG,CAACkM,UAAJ,GAAiB,6DAAjB;AACD,SAFD,MAEO;AACLlM,aAAG,CAACkM,UAAJ,GAAiB,2DAAjB;AACD;;AAED,YAAI7N,YAAJ,EAAkB;AAChB2B,aAAG,CAAC3B,YAAJ,GAAmBA,YAAY,CAAC8N,GAAb,CAAiB7P,UAAjB,CAAnB;;AACA,cAAI0D,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAAxB,IAA6B2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAArD,IAA0D2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAAtF,EAAyF;AACvF2B,eAAG,CAACkM,UAAJ,GAAiB,4DAAjB;AACD;;AACD,cAAIlM,GAAG,CAAC3B,YAAJ,CAAiBxE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,gBAAImG,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAAxB,IAA6B2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAArD,IAA0D2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAAlF,IAAuF2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,MAAwB,CAAnH,EAAsH;AACpH2B,iBAAG,CAACkM,UAAJ,GAAiB,4DAAjB;AACAlM,iBAAG,CAAC3B,YAAJ,CAAiB,CAAjB,KAAuB,4DAAvB;AACA2B,iBAAG,CAAC3B,YAAJ,CAAiB,CAAjB,KAAuB,4DAAvB;AACA2B,iBAAG,CAAC3B,YAAJ,CAAiB,CAAjB,KAAuB,4DAAvB;AACA2B,iBAAG,CAAC3B,YAAJ,CAAiB,CAAjB,IAAuB2B,GAAG,CAAC3B,YAAJ,CAAiB,CAAjB,IAAsB,SAAvB,GAAoC,GAA1D;AACD;AACF;AACF;;AAED,YAAIc,QAAJ,EAAc;AACZa,aAAG,CAACkM,UAAJ,GAAiB,+DAAjB;AACAlM,aAAG,CAACoM,KAAJ,GAAYjN,QAAZ;AACD;;AACDa,WAAG,CAAChJ,CAAJ,GAAQA,CAAR,CA7B+D,CA6BpD;;AACXgJ,WAAG,CAAClB,CAAJ,GAAQA,CAAR;AACAkB,WAAG,CAACV,EAAJ,GAASA,EAAT;AACAU,WAAG,CAACT,GAAJ,GAAUA,GAAV;AACA,eAAOS,GAAP;AACD;AAEc;;;AAAA,uCAAAX,KAAA;;;;;;;;;;;;;;;;ACtCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,eAASgN,aAAT,CAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AAC1C,YAAID,MAAM,CAACJ,UAAP,KAAsBK,IAAI,CAACL,UAA/B,EAA2C;AACzC,iBAAO,KAAP,CADyC,CAC3B;AACf,SAFD,MAEO,IAAII,MAAM,CAACtV,CAAP,KAAauV,IAAI,CAACvV,CAAlB,IAAuBN,IAAI,CAACgK,GAAL,CAAS4L,MAAM,CAAChN,EAAP,GAAYiN,IAAI,CAACjN,EAA1B,IAAgC,cAA3D,EAA2E;AAChF;AACA;AACA,iBAAO,KAAP;AACD,SAJM,MAIA,IAAIgN,MAAM,CAACJ,UAAP,KAAsB,4DAA1B,EAAsC;AAC3C,iBAAQI,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAA3B,IAAmDiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAA9E,IAAsGiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAAzI;AACD,SAFM,MAEA,IAAIiO,MAAM,CAACJ,UAAP,KAAsB,4DAA1B,EAAsC;AAC3C,iBAAQI,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAA3B,IAAmDiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAA9E,IAAsGiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAAjI,IAAyJiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAApL,IAA4MiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAAvO,IAA+PiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAA1R,IAAkTiO,MAAM,CAACjO,YAAP,CAAoB,CAApB,MAA2BkO,IAAI,CAAClO,YAAL,CAAkB,CAAlB,CAArV;AACD,SAFM,MAEA;AACL,iBAAO,IAAP,CADK,CACQ;AACd;AACF,O,CAAC;;AAEF;;;;;;;;;;;;;;;AAaO,eAASmO,oBAAT,CAA8BC,CAA9B,EAAiCnN,EAAjC,EAAqCtI,CAArC,EAAwC;AAC7C,YAAI0V,SAAS,GAAGD,CAAC,CAACtT,CAAlB;AACA,YAAIwT,QAAQ,GAAGF,CAAC,CAACrT,CAAjB;AACA,YAAIwT,MAAM,GAAGH,CAAC,CAAC1P,CAAF,GAAM0P,CAAC,CAAC1P,CAAR,GAAY,CAAzB,CAH6C,CAGjB;;AAE5B,YAAI8P,EAAJ;AAAQ;;AACR,YAAIC,OAAJ;AAAa;;AACb,YAAIC,QAAJ;AAAc;;AACd,YAAIC,OAAJ;AAAa;;AAEb;;;;;;AAKA,YAAIL,QAAQ,GAAG,CAAC,yDAAZ,IAAuBA,QAAQ,GAAG,CAAC,KAAD,GAAS,yDAA/C,EAAwD;AACtDA,kBAAQ,GAAG,CAAC,yDAAZ;AACD,SAFD,MAEO,IAAIA,QAAQ,GAAG,yDAAX,IAAsBA,QAAQ,GAAG,QAAQ,yDAA7C,EAAsD;AAC3DA,kBAAQ,GAAG,yDAAX;AACD,SAFM,MAEA,IAAIA,QAAQ,GAAG,CAAC,yDAAhB,EAAyB;AAC9B;AACA;AACA,iBAAO;AAAExT,aAAC,EAAE,CAAC8T,QAAN;AAAgB7T,aAAC,EAAE,CAAC6T,QAApB;AAA8BlQ,aAAC,EAAE0P,CAAC,CAAC1P;AAAnC,WAAP;AACD,SAJM,MAIA,IAAI4P,QAAQ,GAAG,yDAAf,EAAwB;AAC7B;AACA,iBAAO;AAAExT,aAAC,EAAE8T,QAAL;AAAe7T,aAAC,EAAE6T,QAAlB;AAA4BlQ,aAAC,EAAE0P,CAAC,CAAC1P;AAAjC,WAAP;AACD;;AAED,YAAI2P,SAAS,GAAGhW,IAAI,CAACC,EAArB,EAAyB;AACvB+V,mBAAS,IAAK,IAAIhW,IAAI,CAACC,EAAvB;AACD;;AACDmW,eAAO,GAAGpW,IAAI,CAACqB,GAAL,CAAS4U,QAAT,CAAV;AACAK,eAAO,GAAGtW,IAAI,CAACuB,GAAL,CAAS0U,QAAT,CAAV;AACAI,gBAAQ,GAAGD,OAAO,GAAGA,OAArB;AACAD,UAAE,GAAG7V,CAAC,GAAIN,IAAI,CAACoB,IAAL,CAAU,QAAQwH,EAAE,GAAGyN,QAAvB,CAAV;AACA,eAAO;AACL5T,WAAC,EAAE,CAAC0T,EAAE,GAAGD,MAAN,IAAgBI,OAAhB,GAA0BtW,IAAI,CAACuB,GAAL,CAASyU,SAAT,CADxB;AAELtT,WAAC,EAAE,CAACyT,EAAE,GAAGD,MAAN,IAAgBI,OAAhB,GAA0BtW,IAAI,CAACqB,GAAL,CAAS2U,SAAT,CAFxB;AAGL3P,WAAC,EAAE,CAAE8P,EAAE,IAAI,IAAIvN,EAAR,CAAH,GAAkBsN,MAAnB,IAA6BE;AAH3B,SAAP;AAKD,O,CAAC;;;AAEK,eAASI,oBAAT,CAA8BT,CAA9B,EAAiCnN,EAAjC,EAAqCtI,CAArC,EAAwC8H,CAAxC,EAA2C;AAChD;;AACA;AACA,YAAIqO,KAAK,GAAG,KAAZ;AACA,YAAIC,MAAM,GAAID,KAAK,GAAGA,KAAtB;AACA,YAAIE,OAAO,GAAG,EAAd;AAEA,YAAIC,CAAJ;AAAO;;AACP,YAAIC,EAAJ;AAAQ;;AACR,YAAIC,EAAJ;AAAQ;;AACR,YAAIC,EAAJ;AAAQ;;AACR,YAAIC,EAAJ;AACA,YAAIC,EAAJ;AACA,YAAIC,EAAJ;AAAQ;;AACR,YAAIC,KAAJ;AAAW;;AACX,YAAIC,KAAJ;AAAW;;AACX,YAAIC,IAAJ;AAAU;;AACV,YAAIC,IAAJ;AAAU;;AACV,YAAIC,KAAJ;AAAW;;AACX,YAAIC,IAAJ;AAAU;;AAEV,YAAIC,CAAC,GAAG1B,CAAC,CAACtT,CAAV;AACA,YAAIiV,CAAC,GAAG3B,CAAC,CAACrT,CAAV;AACA,YAAI/D,CAAC,GAAGoX,CAAC,CAAC1P,CAAF,GAAM0P,CAAC,CAAC1P,CAAR,GAAY,GAApB,CAvBgD,CAuBvB;;AACzB,YAAI2P,SAAJ;AACA,YAAIC,QAAJ;AACA,YAAIC,MAAJ;AAEAU,SAAC,GAAG5W,IAAI,CAACoB,IAAL,CAAUqW,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAJ;AACAb,UAAE,GAAG7W,IAAI,CAACoB,IAAL,CAAUqW,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAZ,GAAgB/Y,CAAC,GAAGA,CAA9B,CAAL;AAEA;;AACA,YAAIiY,CAAC,GAAGtW,CAAJ,GAAQmW,KAAZ,EAAmB;AAEjB;AACAT,mBAAS,GAAG,GAAZ;AAEA;;;AAEA,cAAIa,EAAE,GAAGvW,CAAL,GAASmW,KAAb,EAAoB;AAClBR,oBAAQ,GAAG,yDAAX;AACAC,kBAAM,GAAG,CAAC9N,CAAV;AACA,mBAAO;AACL3F,eAAC,EAAEsT,CAAC,CAACtT,CADA;AAELC,eAAC,EAAEqT,CAAC,CAACrT,CAFA;AAGL2D,eAAC,EAAE0P,CAAC,CAAC1P;AAHA,aAAP;AAKD;AACF,SAhBD,MAgBO;AACL;;AAEA2P,mBAAS,GAAGhW,IAAI,CAAC2X,KAAL,CAAWD,CAAX,EAAcD,CAAd,CAAZ;AACD;AAED;;;;;;;;;;;AASAX,UAAE,GAAGnY,CAAC,GAAGkY,EAAT;AACAE,UAAE,GAAGH,CAAC,GAAGC,EAAT;AACAG,UAAE,GAAG,MAAMhX,IAAI,CAACoB,IAAL,CAAU,MAAMwH,EAAE,IAAI,MAAMA,EAAV,CAAF,GAAkBmO,EAAlB,GAAuBA,EAAvC,CAAX;AACAI,aAAK,GAAGJ,EAAE,IAAI,MAAMnO,EAAV,CAAF,GAAkBoO,EAA1B;AACAI,aAAK,GAAGN,EAAE,GAAGE,EAAb;AACAQ,YAAI,GAAG,CAAP;AAEA;;;AAEA,WAAG;AACDA,cAAI;AACJN,YAAE,GAAG5W,CAAC,GAAGN,IAAI,CAACoB,IAAL,CAAU,MAAMwH,EAAE,GAAGwO,KAAL,GAAaA,KAA7B,CAAT;AAEA;;AACAlB,gBAAM,GAAGU,CAAC,GAAGO,KAAJ,GAAYxY,CAAC,GAAGyY,KAAhB,GAAwBF,EAAE,IAAI,MAAMtO,EAAE,GAAGwO,KAAL,GAAaA,KAAvB,CAAnC;AAEAH,YAAE,GAAGrO,EAAE,GAAGsO,EAAL,IAAWA,EAAE,GAAGhB,MAAhB,CAAL;AACAc,YAAE,GAAG,MAAMhX,IAAI,CAACoB,IAAL,CAAU,MAAM6V,EAAE,IAAI,MAAMA,EAAV,CAAF,GAAkBF,EAAlB,GAAuBA,EAAvC,CAAX;AACAM,cAAI,GAAGN,EAAE,IAAI,MAAME,EAAV,CAAF,GAAkBD,EAAzB;AACAM,cAAI,GAAGR,EAAE,GAAGE,EAAZ;AACAO,eAAK,GAAGD,IAAI,GAAGH,KAAP,GAAeE,IAAI,GAAGD,KAA9B;AACAD,eAAK,GAAGE,IAAR;AACAD,eAAK,GAAGE,IAAR;AACD,SAdD,QAeOC,KAAK,GAAGA,KAAR,GAAgBb,MAAhB,IAA0Bc,IAAI,GAAGb,OAfxC;AAiBA;;;AACAV,gBAAQ,GAAGjW,IAAI,CAAC2M,IAAL,CAAU2K,IAAI,GAAGtX,IAAI,CAACgK,GAAL,CAASqN,IAAT,CAAjB,CAAX;AACA,eAAO;AACL5U,WAAC,EAAEuT,SADE;AAELtT,WAAC,EAAEuT,QAFE;AAGL5P,WAAC,EAAE6P;AAHE,SAAP;AAKD,O,CAAC;;AAEF;AACA;AACA;;AAGA;;;;;;;AAKO,eAAS0B,iBAAT,CAA2B7B,CAA3B,EAA8BP,UAA9B,EAA0C7N,YAA1C,EAAwD;AAE7D,YAAI6N,UAAU,KAAK,4DAAnB,EAA+B;AAC7B;AACA;AACA,iBAAO;AACL/S,aAAC,EAAEsT,CAAC,CAACtT,CAAF,GAAMkF,YAAY,CAAC,CAAD,CADhB;AAELjF,aAAC,EAAEqT,CAAC,CAACrT,CAAF,GAAMiF,YAAY,CAAC,CAAD,CAFhB;AAGLtB,aAAC,EAAE0P,CAAC,CAAC1P,CAAF,GAAMsB,YAAY,CAAC,CAAD;AAHhB,WAAP;AAKD,SARD,MAQO,IAAI6N,UAAU,KAAK,4DAAnB,EAA+B;AACpC,cAAIqC,KAAK,GAAGlQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAImQ,KAAK,GAAGnQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIoQ,KAAK,GAAGpQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIqQ,KAAK,GAAGrQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIsQ,KAAK,GAAGtQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIuQ,KAAK,GAAGvQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIwQ,IAAI,GAAGxQ,YAAY,CAAC,CAAD,CAAvB,CAPoC,CAQpC;AACA;;AACA,iBAAO;AACLlF,aAAC,EAAE0V,IAAI,IAAIpC,CAAC,CAACtT,CAAF,GAAMyV,KAAK,GAAGnC,CAAC,CAACrT,CAAhB,GAAoBuV,KAAK,GAAGlC,CAAC,CAAC1P,CAAlC,CAAJ,GAA2CwR,KADzC;AAELnV,aAAC,EAAEyV,IAAI,IAAID,KAAK,GAAGnC,CAAC,CAACtT,CAAV,GAAcsT,CAAC,CAACrT,CAAhB,GAAoBsV,KAAK,GAAGjC,CAAC,CAAC1P,CAAlC,CAAJ,GAA2CyR,KAFzC;AAGLzR,aAAC,EAAE8R,IAAI,IAAI,CAACF,KAAD,GAASlC,CAAC,CAACtT,CAAX,GAAeuV,KAAK,GAAGjC,CAAC,CAACrT,CAAzB,GAA6BqT,CAAC,CAAC1P,CAAnC,CAAJ,GAA4C0R;AAH1C,WAAP;AAKD;AACF,O,CAAC;;AAEF;AACA;AACA;AACA;;;AACO,eAASK,mBAAT,CAA6BrC,CAA7B,EAAgCP,UAAhC,EAA4C7N,YAA5C,EAA0D;AAE/D,YAAI6N,UAAU,KAAK,4DAAnB,EAA+B;AAC7B;AACA;AACA,iBAAO;AACL/S,aAAC,EAAEsT,CAAC,CAACtT,CAAF,GAAMkF,YAAY,CAAC,CAAD,CADhB;AAELjF,aAAC,EAAEqT,CAAC,CAACrT,CAAF,GAAMiF,YAAY,CAAC,CAAD,CAFhB;AAGLtB,aAAC,EAAE0P,CAAC,CAAC1P,CAAF,GAAMsB,YAAY,CAAC,CAAD;AAHhB,WAAP;AAMD,SATD,MASO,IAAI6N,UAAU,KAAK,4DAAnB,EAA+B;AACpC,cAAIqC,KAAK,GAAGlQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAImQ,KAAK,GAAGnQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIoQ,KAAK,GAAGpQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIqQ,KAAK,GAAGrQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIsQ,KAAK,GAAGtQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIuQ,KAAK,GAAGvQ,YAAY,CAAC,CAAD,CAAxB;AACA,cAAIwQ,IAAI,GAAGxQ,YAAY,CAAC,CAAD,CAAvB;AACA,cAAI0Q,KAAK,GAAG,CAACtC,CAAC,CAACtT,CAAF,GAAMoV,KAAP,IAAgBM,IAA5B;AACA,cAAIG,KAAK,GAAG,CAACvC,CAAC,CAACrT,CAAF,GAAMoV,KAAP,IAAgBK,IAA5B;AACA,cAAII,KAAK,GAAG,CAACxC,CAAC,CAAC1P,CAAF,GAAM0R,KAAP,IAAgBI,IAA5B,CAVoC,CAWpC;AACA;;AAEA,iBAAO;AACL1V,aAAC,EAAE4V,KAAK,GAAGH,KAAK,GAAGI,KAAhB,GAAwBL,KAAK,GAAGM,KAD9B;AAEL7V,aAAC,EAAE,CAACwV,KAAD,GAASG,KAAT,GAAiBC,KAAjB,GAAyBN,KAAK,GAAGO,KAF/B;AAGLlS,aAAC,EAAE4R,KAAK,GAAGI,KAAR,GAAgBL,KAAK,GAAGM,KAAxB,GAAgCC;AAH9B,WAAP;AAKD,SA9B8D,CA8B7D;;AACH;;;;;;;;;;;;;;;;;ACpPD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,eAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,eAAQA,IAAI,KAAK,4DAAT,IAAuBA,IAAI,KAAK,4DAAxC;AACD;AAEc;;;AAAA;AACb;AACA,YAAI,kEAAc7C,MAAd,EAAsBC,IAAtB,CAAJ,EAAiC;AAC/B,iBAAO5M,KAAP,CAD+B,CACjB;AACd;AACA;AACD,SANY,CAQb;;;AACA,YAAI2M,MAAM,CAACJ,UAAP,KAAsB,6DAAtB,IAAqCK,IAAI,CAACL,UAAL,KAAoB,6DAA7D,EAA0E;AACxE,iBAAOvM,KAAP;AACD,SAXY,CAab;;;AACA,YAAIyP,QAAQ,GAAG9C,MAAM,CAACtV,CAAtB;AACA,YAAIqY,SAAS,GAAG/C,MAAM,CAAChN,EAAvB;;AACA,YAAIgN,MAAM,CAACJ,UAAP,KAAsB,+DAA1B,EAAyC;AACvC,cAAIoD,aAAa,GAAGC,cAAc,CAACjD,MAAD,EAAS,KAAT,EAAgB3M,KAAhB,CAAlC;;AACA,cAAI2P,aAAa,KAAK,CAAtB,EAAyB;AACvB,mBAAOpP,SAAP;AACD;;AACDkP,kBAAQ,GAAG,qEAAX;AACAC,mBAAS,GAAG,oEAAZ;AACD;;AAED,YAAIG,MAAM,GAAGjD,IAAI,CAACvV,CAAlB;AACA,YAAIyY,MAAM,GAAGlD,IAAI,CAACzN,CAAlB;AACA,YAAI4Q,OAAO,GAAGnD,IAAI,CAACjN,EAAnB;;AACA,YAAIiN,IAAI,CAACL,UAAL,KAAoB,+DAAxB,EAAuC;AACrCsD,gBAAM,GAAG,qEAAT;AACAC,gBAAM,GAAG,qEAAT;AACAC,iBAAO,GAAG,oEAAV;AACD,SAhCY,CAkCb;;;AACA,YAAIL,SAAS,KAAKK,OAAd,IAAyBN,QAAQ,KAAKI,MAAtC,IAAgD,CAACN,WAAW,CAAC5C,MAAM,CAACJ,UAAR,CAA5D,IAAoF,CAACgD,WAAW,CAAC3C,IAAI,CAACL,UAAN,CAApG,EAAuH;AACrH,iBAAOvM,KAAP;AACD,SArCY,CAuCb;;;AACAA,aAAK,GAAG,yEAAqBA,KAArB,EAA4B0P,SAA5B,EAAuCD,QAAvC,CAAR,CAxCa,CAyCb;;AACA,YAAIF,WAAW,CAAC5C,MAAM,CAACJ,UAAR,CAAf,EAAoC;AAClCvM,eAAK,GAAG,sEAAkBA,KAAlB,EAAyB2M,MAAM,CAACJ,UAAhC,EAA4CI,MAAM,CAACjO,YAAnD,CAAR;AACD;;AACD,YAAI6Q,WAAW,CAAC3C,IAAI,CAACL,UAAN,CAAf,EAAkC;AAChCvM,eAAK,GAAG,wEAAoBA,KAApB,EAA2B4M,IAAI,CAACL,UAAhC,EAA4CK,IAAI,CAAClO,YAAjD,CAAR;AACD;;AACDsB,aAAK,GAAG,yEAAqBA,KAArB,EAA4B+P,OAA5B,EAAqCF,MAArC,EAA6CC,MAA7C,CAAR;;AAEA,YAAIlD,IAAI,CAACL,UAAL,KAAoB,+DAAxB,EAAuC;AACrC,cAAIyD,mBAAmB,GAAGJ,cAAc,CAAChD,IAAD,EAAO,IAAP,EAAa5M,KAAb,CAAxC;;AACA,cAAIgQ,mBAAmB,KAAK,CAA5B,EAA+B;AAC7B,mBAAOzP,SAAP;AACD;AACF;;AAED,eAAOP,KAAP;AACD,OA1Dc;;AA4DR,eAAS4P,cAAT,CAAwBjD,MAAxB,EAAgC/W,OAAhC,EAAyCoK,KAAzC,EAAgD;AACrD,YAAI2M,MAAM,CAACF,KAAP,KAAiB,IAAjB,IAAyBE,MAAM,CAACF,KAAP,CAAavS,MAAb,KAAwB,CAArD,EAAwD;AACtDuD,iBAAO,CAAC0F,GAAR,CAAY,4BAAZ;AACA,iBAAO,CAAC,CAAR;AACD;;AACD,YAAI8M,KAAK,GAAG;AAACzW,WAAC,EAAE,CAACwG,KAAK,CAACxG,CAAX;AAAcC,WAAC,EAAEuG,KAAK,CAACvG;AAAvB,SAAZ;AACA,YAAIyW,MAAM,GAAG;AAAC1W,WAAC,EAAEoH,MAAM,CAACqC,GAAX;AAAgBxJ,WAAC,EAAEmH,MAAM,CAACqC;AAA1B,SAAb;AACA,YAAIkN,kBAAkB,GAAG,KAAzB;AACA,YAAIC,cAAc,GAAG,EAArB;;AACA,aAAK,IAAI5V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmS,MAAM,CAACF,KAAP,CAAavS,MAAjC,EAAyCM,CAAC,EAA1C,EAA8C;AAC5C,cAAI6V,IAAI,GAAG1D,MAAM,CAACF,KAAP,CAAajS,CAAb,CAAX;AACA4V,wBAAc,CAACE,IAAf,CAAoBD,IAAI,CAAC7E,IAAzB;;AACA,cAAI6E,IAAI,CAACE,MAAT,EAAiB;AACfL,kBAAM,GAAGD,KAAT;AACA;AACD;;AACDE,4BAAkB,GAAGE,IAAI,CAACG,SAA1B;;AACA,cAAIH,IAAI,CAACA,IAAL,KAAc,IAAlB,EAAwB;AACtB,gBAAIA,IAAI,CAACG,SAAT,EAAoB;AAClB/S,qBAAO,CAAC0F,GAAR,CAAY,oCAAoCkN,IAAI,CAAC7E,IAAzC,GAAgD,GAA5D;AACA,qBAAO,CAAC,CAAR;AACD;;AACD;AACD;;AACD,cAAIiF,OAAO,GAAGJ,IAAI,CAACA,IAAL,CAAUK,QAAV,CAAmB,CAAnB,CAAd,CAf4C,CAgB5C;;AACA,cAAIC,OAAO,GAAG,CAAC5Z,IAAI,CAACgK,GAAL,CAAS0P,OAAO,CAACG,GAAR,CAAY,CAAZ,CAAT,IAA2B7Z,IAAI,CAACgK,GAAL,CAAS0P,OAAO,CAACG,GAAR,CAAY,CAAZ,CAAT,CAA5B,IAAwD,OAAtE;AACA,cAAIC,IAAI,GAAGJ,OAAO,CAAC3a,EAAR,CAAW,CAAX,IAAgB6a,OAA3B;AACA,cAAIG,IAAI,GAAGL,OAAO,CAAC3a,EAAR,CAAW,CAAX,IAAgB6a,OAA3B;AACA,cAAII,IAAI,GAAGN,OAAO,CAAC3a,EAAR,CAAW,CAAX,IAAgB,CAAC2a,OAAO,CAACO,GAAR,CAAY,CAAZ,IAAiB,CAAlB,IAAuBP,OAAO,CAACG,GAAR,CAAY,CAAZ,CAAvC,GAAwDD,OAAnE;AACA,cAAIM,IAAI,GAAGR,OAAO,CAAC3a,EAAR,CAAW,CAAX,IAAgB,CAAC2a,OAAO,CAACO,GAAR,CAAY,CAAZ,IAAiB,CAAlB,IAAuBP,OAAO,CAACG,GAAR,CAAY,CAAZ,CAAvC,GAAwDD,OAAnE;;AACA,cAAIG,IAAI,GAAGb,KAAK,CAACxW,CAAb,IAAkBoX,IAAI,GAAGZ,KAAK,CAACzW,CAA/B,IAAoCyX,IAAI,GAAGhB,KAAK,CAACxW,CAAjD,IAAsDsX,IAAI,GAAGd,KAAK,CAACzW,CAAvE,EAA2E;AACzE;AACD;;AACD0W,gBAAM,GAAGgB,iBAAiB,CAACjB,KAAD,EAAQra,OAAR,EAAiB6a,OAAjB,CAA1B;;AACA,cAAI,CAACU,KAAK,CAACjB,MAAM,CAAC1W,CAAR,CAAV,EAAsB;AACpB;AACD;AACF;;AACD,YAAI2X,KAAK,CAACjB,MAAM,CAAC1W,CAAR,CAAT,EAAqB;AACnBiE,iBAAO,CAAC0F,GAAR,CAAY,qDACV,CAAC8M,KAAK,CAACzW,CAAP,GAAW,qDADD,GACO,GADP,GACayW,KAAK,CAACxW,CAAN,GAAU,qDADvB,GAC6B,WAD7B,GAC2C2W,cAD3C,GAC4D,GADxE;AAEA,iBAAO,CAAC,CAAR;AACD;;AACDpQ,aAAK,CAACxG,CAAN,GAAU,CAAC0W,MAAM,CAAC1W,CAAlB;AACAwG,aAAK,CAACvG,CAAN,GAAUyW,MAAM,CAACzW,CAAjB;AACA,eAAO,CAAP;AACD;;AAED,eAASyX,iBAAT,CAA2BE,GAA3B,EAAgCxb,OAAhC,EAAyCyb,EAAzC,EAA6C;AAC3C,YAAIC,GAAG,GAAG;AAAC9X,WAAC,EAAEoH,MAAM,CAACqC,GAAX;AAAgBxJ,WAAC,EAAEmH,MAAM,CAACqC;AAA1B,SAAV;;AACA,YAAIkO,KAAK,CAACC,GAAG,CAAC5X,CAAL,CAAT,EAAkB;AAAE,iBAAO8X,GAAP;AAAa;;AACjC,YAAIC,EAAE,GAAG;AAAC/X,WAAC,EAAE4X,GAAG,CAAC5X,CAAR;AAAWC,WAAC,EAAE2X,GAAG,CAAC3X;AAAlB,SAAT;AACA8X,UAAE,CAAC/X,CAAH,IAAQ6X,EAAE,CAACvb,EAAH,CAAM,CAAN,CAAR;AACAyb,UAAE,CAAC9X,CAAH,IAAQ4X,EAAE,CAACvb,EAAH,CAAM,CAAN,CAAR;AACAyb,UAAE,CAAC/X,CAAH,GAAO,mEAAW+X,EAAE,CAAC/X,CAAH,GAAOzC,IAAI,CAACC,EAAvB,IAA6BD,IAAI,CAACC,EAAzC;AACA,YAAIoJ,CAAC,GAAGoR,cAAc,CAACD,EAAD,EAAKF,EAAL,CAAtB;;AACA,YAAIzb,OAAJ,EAAa;AACX,cAAIub,KAAK,CAAC/Q,CAAC,CAAC5G,CAAH,CAAT,EAAgB;AACd,mBAAO8X,GAAP;AACD;;AACDlR,WAAC,CAAC5G,CAAF,GAAM+X,EAAE,CAAC/X,CAAH,GAAO4G,CAAC,CAAC5G,CAAf;AACA4G,WAAC,CAAC3G,CAAF,GAAM8X,EAAE,CAAC9X,CAAH,GAAO2G,CAAC,CAAC3G,CAAf;AACA,cAAIe,CAAC,GAAG,CAAR;AAAA,cAAWiX,GAAG,GAAG,KAAjB;AACA,cAAIC,GAAJ,EAASd,GAAT;;AACA,aAAG;AACDA,eAAG,GAAGY,cAAc,CAACpR,CAAD,EAAIiR,EAAJ,CAApB;;AACA,gBAAIF,KAAK,CAACP,GAAG,CAACpX,CAAL,CAAT,EAAkB;AAChBiE,qBAAO,CAAC0F,GAAR,CAAY,2FAAZ;AACA;AACD;;AACDuO,eAAG,GAAG;AAAClY,eAAC,EAAE+X,EAAE,CAAC/X,CAAH,IAAQoX,GAAG,CAACpX,CAAJ,GAAQ4G,CAAC,CAAC5G,CAAlB,CAAJ;AAA0BC,eAAC,EAAE8X,EAAE,CAAC9X,CAAH,IAAQmX,GAAG,CAACnX,CAAJ,GAAQ2G,CAAC,CAAC3G,CAAlB;AAA7B,aAAN;AACA2G,aAAC,CAAC5G,CAAF,IAAOkY,GAAG,CAAClY,CAAX;AACA4G,aAAC,CAAC3G,CAAF,IAAOiY,GAAG,CAACjY,CAAX;AACD,WATD,QASSe,CAAC,MAAMzD,IAAI,CAACgK,GAAL,CAAS2Q,GAAG,CAAClY,CAAb,IAAkBiY,GAAzB,IAAgC1a,IAAI,CAACgK,GAAL,CAAS2Q,GAAG,CAACjY,CAAb,IAAkBgY,GAT3D;;AAUA,cAAIjX,CAAC,GAAG,CAAR,EAAW;AACTiD,mBAAO,CAAC0F,GAAR,CAAY,iDAAZ;AACA,mBAAOmO,GAAP;AACD;;AACDA,aAAG,CAAC9X,CAAJ,GAAQ,mEAAW4G,CAAC,CAAC5G,CAAF,GAAM6X,EAAE,CAACvb,EAAH,CAAM,CAAN,CAAjB,CAAR;AACAwb,aAAG,CAAC7X,CAAJ,GAAQ2G,CAAC,CAAC3G,CAAF,GAAM4X,EAAE,CAACvb,EAAH,CAAM,CAAN,CAAd;AACD,SAxBD,MAwBO;AACL,cAAI,CAACqb,KAAK,CAAC/Q,CAAC,CAAC5G,CAAH,CAAV,EAAiB;AACf8X,eAAG,CAAC9X,CAAJ,GAAQ4X,GAAG,CAAC5X,CAAJ,GAAQ4G,CAAC,CAAC5G,CAAlB;AACA8X,eAAG,CAAC7X,CAAJ,GAAQ2X,GAAG,CAAC3X,CAAJ,GAAQ2G,CAAC,CAAC3G,CAAlB;AACD;AACF;;AACD,eAAO6X,GAAP;AACD;;AAED,eAASE,cAAT,CAAwBJ,GAAxB,EAA6BC,EAA7B,EAAiC;AAC/B,YAAIjR,CAAC,GAAG;AAAC5G,WAAC,EAAE4X,GAAG,CAAC5X,CAAJ,GAAQ6X,EAAE,CAACT,GAAH,CAAO,CAAP,CAAZ;AAAuBnX,WAAC,EAAE2X,GAAG,CAAC3X,CAAJ,GAAQ4X,EAAE,CAACT,GAAH,CAAO,CAAP;AAAlC,SAAR;AACA,YAAIe,IAAI,GAAG;AAACnY,WAAC,EAAEzC,IAAI,CAACmB,KAAL,CAAWkI,CAAC,CAAC5G,CAAb,CAAJ;AAAqBC,WAAC,EAAE1C,IAAI,CAACmB,KAAL,CAAWkI,CAAC,CAAC3G,CAAb;AAAxB,SAAX;AACA,YAAImY,IAAI,GAAG;AAACpY,WAAC,EAAE4G,CAAC,CAAC5G,CAAF,GAAM,MAAMmY,IAAI,CAACnY,CAArB;AAAwBC,WAAC,EAAE2G,CAAC,CAAC3G,CAAF,GAAM,MAAMkY,IAAI,CAAClY;AAA5C,SAAX;AACA,YAAI6X,GAAG,GAAE;AAAC9X,WAAC,EAAEoH,MAAM,CAACqC,GAAX;AAAgBxJ,WAAC,EAAEmH,MAAM,CAACqC;AAA1B,SAAT;AACA,YAAI4O,GAAJ;;AACA,YAAIF,IAAI,CAACnY,CAAL,GAAS,CAAT,IAAcmY,IAAI,CAACnY,CAAL,IAAU6X,EAAE,CAACL,GAAH,CAAO,CAAP,CAA5B,EAAuC;AACrC,iBAAOM,GAAP;AACD;;AACD,YAAIK,IAAI,CAAClY,CAAL,GAAS,CAAT,IAAckY,IAAI,CAAClY,CAAL,IAAU4X,EAAE,CAACL,GAAH,CAAO,CAAP,CAA5B,EAAuC;AACrC,iBAAOM,GAAP;AACD;;AACDO,WAAG,GAAIF,IAAI,CAAClY,CAAL,GAAS4X,EAAE,CAACL,GAAH,CAAO,CAAP,CAAV,GAAuBW,IAAI,CAACnY,CAAlC;AACA,YAAIsY,GAAG,GAAG;AAACtY,WAAC,EAAE6X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ,CAAJ;AAAoBpY,WAAC,EAAE4X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ;AAAvB,SAAV;AACAA,WAAG;AACH,YAAIG,GAAG,GAAE;AAACxY,WAAC,EAAE6X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ,CAAJ;AAAoBpY,WAAC,EAAE4X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ;AAAvB,SAAT;AACAA,WAAG,IAAIR,EAAE,CAACL,GAAH,CAAO,CAAP,CAAP;AACA,YAAIiB,GAAG,GAAG;AAACzY,WAAC,EAAE6X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ,CAAJ;AAAoBpY,WAAC,EAAE4X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ;AAAvB,SAAV;AACAA,WAAG;AACH,YAAIK,GAAG,GAAG;AAAC1Y,WAAC,EAAE6X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ,CAAJ;AAAoBpY,WAAC,EAAE4X,EAAE,CAACU,GAAH,CAAOF,GAAP,EAAY,CAAZ;AAAvB,SAAV;AACA,YAAIM,GAAG,GAAGP,IAAI,CAACpY,CAAL,GAASoY,IAAI,CAACnY,CAAxB;AAAA,YAA2B2Y,GAAG,GAAGR,IAAI,CAACpY,CAAL,IAAU,MAAMoY,IAAI,CAACnY,CAArB,CAAjC;AAAA,YACE4Y,GAAG,GAAG,CAAC,MAAMT,IAAI,CAACpY,CAAZ,KAAkB,MAAMoY,IAAI,CAACnY,CAA7B,CADR;AAAA,YACyC6Y,GAAG,GAAG,CAAC,MAAMV,IAAI,CAACpY,CAAZ,IAAiBoY,IAAI,CAACnY,CADrE;AAEA6X,WAAG,CAAC9X,CAAJ,GAAS6Y,GAAG,GAAGP,GAAG,CAACtY,CAAV,GAAc4Y,GAAG,GAAGJ,GAAG,CAACxY,CAAxB,GAA4B8Y,GAAG,GAAGJ,GAAG,CAAC1Y,CAAtC,GAA0C2Y,GAAG,GAAGF,GAAG,CAACzY,CAA7D;AACA8X,WAAG,CAAC7X,CAAJ,GAAS4Y,GAAG,GAAGP,GAAG,CAACrY,CAAV,GAAc2Y,GAAG,GAAGJ,GAAG,CAACvY,CAAxB,GAA4B6Y,GAAG,GAAGJ,GAAG,CAACzY,CAAtC,GAA0C0Y,GAAG,GAAGF,GAAG,CAACxY,CAA7D;AACA,eAAO6X,GAAP;AACD;;;;;;;;;;;;;;;;;AC/LD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,eAASiB,IAAT,CAAc/G,IAAd,EAAoB;AAClB;AACA,YAAIgH,IAAI,GAAG,IAAX;;AACA,YAAIC,SAAS,CAACvY,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAIwY,GAAG,GAAGD,SAAS,CAAC,CAAD,CAAnB;;AACA,cAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;AAC3B,gBAAIA,GAAG,CAAC/W,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACzB4W,kBAAI,CAAC/G,IAAD,CAAJ,GAAa,4DAAUiH,SAAS,CAAC,CAAD,CAAnB,CAAb;AACD,aAFD,MAGK;AACHF,kBAAI,CAAC/G,IAAD,CAAJ,GAAa,2DAAIiH,SAAS,CAAC,CAAD,CAAb,CAAb;AACD;AACF,WAPD,MAOO;AACLF,gBAAI,CAAC/G,IAAD,CAAJ,GAAakH,GAAb;AACD;AACF,SAZD,MAaK,IAAID,SAAS,CAACvY,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,cAAImD,KAAK,CAACC,OAAN,CAAckO,IAAd,CAAJ,EAAyB;AACvB,mBAAOA,IAAI,CAACgB,GAAL,CAAS,UAASrM,CAAT,EAAY;AAC1B,kBAAI9C,KAAK,CAACC,OAAN,CAAc6C,CAAd,CAAJ,EAAsB;AACpBoS,oBAAI,CAACI,KAAL,CAAWH,IAAX,EAAiBrS,CAAjB;AACD,eAFD,MAGK;AACHoS,oBAAI,CAACpS,CAAD,CAAJ;AACD;AACF,aAPM,CAAP;AAQD,WATD,MAUK,IAAI,OAAOqL,IAAP,KAAgB,QAApB,EAA8B;AACjC,gBAAIA,IAAI,IAAI+G,IAAZ,EAAkB;AAChB,qBAAOA,IAAI,CAAC/G,IAAD,CAAX;AACD;AACF,WAJI,MAKA,IAAI,UAAUA,IAAd,EAAoB;AACvB+G,gBAAI,CAAC,UAAU/G,IAAI,CAACoH,IAAhB,CAAJ,GAA4BpH,IAA5B;AACD,WAFI,MAGA,IAAI,UAAUA,IAAd,EAAoB;AACvB+G,gBAAI,CAAC,UAAU/G,IAAI,CAACqH,IAAhB,CAAJ,GAA4BrH,IAA5B;AACD,WAFI,MAGA,IAAI,aAAaA,IAAjB,EAAuB;AAC1B+G,gBAAI,CAAC,aAAa/G,IAAI,CAACsH,OAAnB,CAAJ,GAAkCtH,IAAlC;AACD,WAFI,MAGA;AACH/N,mBAAO,CAAC0F,GAAR,CAAYqI,IAAZ;AACD;;AACD;AACD;AAGF;;AACD,8DAAQ+G,IAAR;AACe;;AAAA,uCAAAA,IAAA;;;;;;;;;;;;;;;;ACtDf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,eAASQ,YAAT,CAAsB1b,CAAtB,EAAyB8H,CAAzB,EAA4BC,EAA5B,EAAgCG,GAAhC,EAAqC;AAC1C,YAAIyT,EAAE,GAAG3b,CAAC,GAAGA,CAAb,CAD0C,CAC1B;;AAChB,YAAI4b,EAAE,GAAG9T,CAAC,GAAGA,CAAb,CAF0C,CAE1B;;AAChB,YAAIQ,EAAE,GAAG,CAACqT,EAAE,GAAGC,EAAN,IAAYD,EAArB,CAH0C,CAGjB;;AACzB,YAAIpW,CAAC,GAAG,CAAR;;AACA,YAAI2C,GAAJ,EAAS;AACPlI,WAAC,IAAI,IAAIsI,EAAE,IAAI,0DAAQA,EAAE,IAAI,wDAAMA,EAAE,GAAG,qDAAf,CAAd,CAAX;AACAqT,YAAE,GAAG3b,CAAC,GAAGA,CAAT;AACAsI,YAAE,GAAG,CAAL;AACD,SAJD,MAIO;AACL/C,WAAC,GAAG7F,IAAI,CAACoB,IAAL,CAAUwH,EAAV,CAAJ,CADK,CACc;AACpB;;AACD,YAAIC,GAAG,GAAG,CAACoT,EAAE,GAAGC,EAAN,IAAYA,EAAtB,CAZ0C,CAYhB;;AAC1B,eAAO;AACLtT,YAAE,EAAEA,EADC;AAEL/C,WAAC,EAAEA,CAFE;AAGLgD,aAAG,EAAEA;AAHA,SAAP;AAKD;;AACM,eAASP,MAAT,CAAgBhI,CAAhB,EAAmB8H,CAAnB,EAAsBC,EAAtB,EAA0BR,KAA1B,EAAiCS,MAAjC,EAAyC;AAC9C,YAAI,CAAChI,CAAL,EAAQ;AAAE;AACR,cAAIwH,OAAO,GAAG,uDAAM,4DAAN,EAAiBD,KAAjB,CAAd;;AACA,cAAI,CAACC,OAAL,EAAc;AACZA,mBAAO,GAAG,0DAAV;AACD;;AACDxH,WAAC,GAAGwH,OAAO,CAACxH,CAAZ;AACA8H,WAAC,GAAGN,OAAO,CAACM,CAAZ;AACAC,YAAE,GAAGP,OAAO,CAACO,EAAb;AACD;;AAED,YAAIA,EAAE,IAAI,CAACD,CAAX,EAAc;AACZA,WAAC,GAAG,CAAC,MAAM,MAAMC,EAAb,IAAmB/H,CAAvB;AACD;;AACD,YAAI+H,EAAE,KAAK,CAAP,IAAYrI,IAAI,CAACgK,GAAL,CAAS1J,CAAC,GAAG8H,CAAb,IAAkB,uDAAlC,EAAyC;AACvCE,gBAAM,GAAG,IAAT;AACAF,WAAC,GAAG9H,CAAJ;AACD;;AACD,eAAO;AACLA,WAAC,EAAEA,CADE;AAEL8H,WAAC,EAAEA,CAFE;AAGLC,YAAE,EAAEA,EAHC;AAILC,gBAAM,EAAEA;AAJH,SAAP;AAMD;;;;;;;;;;;;;;;;;AC/CD;AAAe;;;AAAA;AACb6T,mBAAW,GAAGA,WAAW,IAAI,EAA7B;AACA,YAAIC,KAAJ,EAAWC,QAAX;;AACA,YAAI,CAACzG,MAAL,EAAa;AACX,iBAAOuG,WAAP;AACD;;AACD,aAAKE,QAAL,IAAiBzG,MAAjB,EAAyB;AACvBwG,eAAK,GAAGxG,MAAM,CAACyG,QAAD,CAAd;;AACA,cAAID,KAAK,KAAK5S,SAAd,EAAyB;AACvB2S,uBAAW,CAACE,QAAD,CAAX,GAAwBD,KAAxB;AACD;AACF;;AACD,eAAOD,WAAP;AACD,OAbc;;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;AACbX,YAAI,CAAC,WAAD,EAAc,iFAAd,CAAJ;AACAA,YAAI,CAAC,WAAD,EAAc,iHAAd,CAAJ;AACAA,YAAI,CAAC,WAAD,EAAc,kJAAd,CAAJ;AAEAA,YAAI,CAACxJ,KAAL,GAAawJ,IAAI,CAAC,WAAD,CAAjB;AACAA,YAAI,CAAC,WAAD,CAAJ,GAAoBA,IAAI,CAAC,WAAD,CAAxB,CANa,CAM0B;;AACvCA,YAAI,CAACc,MAAL,GAAcd,IAAI,CAAC,WAAD,CAAlB;AACAA,YAAI,CAAC,aAAD,CAAJ,GAAsBA,IAAI,CAAC,WAAD,CAA1B;AACAA,YAAI,CAAC,aAAD,CAAJ,GAAsBA,IAAI,CAAC,WAAD,CAA1B;AACD,OAVc;;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,oDAAMe,YAAN,GAAqB,OAArB,C,CAA8B;;AAC9B,oDAAMC,IAAN,GAAa,6CAAb;AACA,oDAAMxK,KAAN,GAAc,IAAI,8CAAMwK,IAAV,CAAe,OAAf,CAAd;AACA,oDAAMpW,KAAN,GAAc,8CAAd;AACA,oDAAMtH,OAAN,GAAgB,uDAAhB;AACA,oDAAM0c,IAAN,GAAa,6CAAb;AACA,oDAAMiB,OAAN,GAAgB,gDAAhB;AACA,oDAAMC,SAAN,GAAkB,kDAAlB;AACA,oDAAMrd,IAAN,GAAa,4CAAb;AACA,oDAAMsd,OAAN,GAAgB,aAAhB;AACA,6DAAoB,6CAApB;AACe;;AAAA;;;;;;;;;;;;;;;;ACrBf;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAIC,WAAW,GAAG,gBAAlB;;AACe,eAASC,KAAT,CAAetH,GAAf,EAAoBT,GAApB,EAAyB;AACtC,YAAIS,GAAG,CAACT,GAAD,CAAP,EAAc;AACZ,iBAAOS,GAAG,CAACT,GAAD,CAAV;AACD;;AACD,YAAIN,IAAI,GAAGI,MAAM,CAACJ,IAAP,CAAYe,GAAZ,CAAX;AACA,YAAIuH,IAAI,GAAGhI,GAAG,CAACiI,WAAJ,GAAkBC,OAAlB,CAA0BJ,WAA1B,EAAuC,EAAvC,CAAX;AACA,YAAInZ,CAAC,GAAG,CAAC,CAAT;AACA,YAAIwZ,OAAJ,EAAaC,YAAb;;AACA,eAAO,EAAEzZ,CAAF,GAAM+Q,IAAI,CAACrR,MAAlB,EAA0B;AACxB8Z,iBAAO,GAAGzI,IAAI,CAAC/Q,CAAD,CAAd;AACAyZ,sBAAY,GAAGD,OAAO,CAACF,WAAR,GAAsBC,OAAtB,CAA8BJ,WAA9B,EAA2C,EAA3C,CAAf;;AACA,cAAIM,YAAY,KAAKJ,IAArB,EAA2B;AACzB,mBAAOvH,GAAG,CAAC0H,OAAD,CAAV;AACD;AACF;AACF;;;;;;;;;;;;;;;;;AChBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAMA,UAAIE,cAAc,GAAG,EAArB;AAEA;;;;;AAIe,eAASV,OAAT,CAAiB3H,GAAjB,EAAsBsI,IAAtB,EAA4B;AACzC,YAAIC,IAAI,GAAG,IAAIC,QAAJ,CAAaF,IAAb,CAAX;AACA,YAAIG,cAAc,GAAGC,kBAAkB,CAACH,IAAD,CAAvC;AACA,YAAII,MAAM,GAAGC,UAAU,CAACL,IAAD,EAAOE,cAAP,CAAvB;;AACA,YAAIE,MAAM,CAACE,SAAP,GAAmB,CAAvB,EAA0B;AACxBjX,iBAAO,CAAC0F,GAAR,CAAY,qFAAZ;AACD;;AACD,YAAIuN,QAAQ,GAAGiE,YAAY,CAACP,IAAD,EAAOI,MAAP,EAAeF,cAAf,CAA3B;AACA,YAAId,OAAO,GAAG;AAACgB,gBAAM,EAAEA,MAAT;AAAiB9D,kBAAQ,EAAEA;AAA3B,SAAd;AACAwD,sBAAc,CAACrI,GAAD,CAAd,GAAsB2H,OAAtB;AACA,eAAOA,OAAP;AACD;AAED;;;;;AAGO,eAASoB,WAAT,CAAqBpV,QAArB,EAA+B;AACpC;AACA,YAAIA,QAAQ,KAAKe,SAAjB,EAA4B;AAAE,iBAAO,IAAP;AAAc;;AAC5C,YAAIkM,KAAK,GAAGjN,QAAQ,CAAChC,KAAT,CAAe,GAAf,CAAZ;AACA,eAAOiP,KAAK,CAACD,GAAN,CAAUqI,kBAAV,CAAP;AACD;;AAED,eAASA,kBAAT,CAA4B1B,KAA5B,EAAmC;AACjC,YAAIA,KAAK,CAACjZ,MAAN,KAAiB,CAArB,EAAwB;AACtB,iBAAO,IAAP;AACD;;AACD,YAAI4a,QAAQ,GAAG3B,KAAK,CAAC,CAAD,CAAL,KAAa,GAA5B;;AACA,YAAI2B,QAAJ,EAAc;AACZ3B,eAAK,GAAGA,KAAK,CAAC4B,KAAN,CAAY,CAAZ,CAAR;AACD;;AACD,YAAI5B,KAAK,KAAK,MAAd,EAAsB;AACpB,iBAAO;AAAC3H,gBAAI,EAAE,MAAP;AAAegF,qBAAS,EAAE,CAACsE,QAA3B;AAAqCzE,gBAAI,EAAE,IAA3C;AAAiDE,kBAAM,EAAE;AAAzD,WAAP;AACD;;AACD,eAAO;AACL/E,cAAI,EAAE2H,KADD;AAEL3C,mBAAS,EAAE,CAACsE,QAFP;AAGLzE,cAAI,EAAE6D,cAAc,CAACf,KAAD,CAAd,IAAyB,IAH1B;AAIL5C,gBAAM,EAAE;AAJH,SAAP;AAMD;;AAED,eAASyE,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,eAAQA,OAAO,GAAG,IAAX,GAAmBle,IAAI,CAACC,EAAxB,GAA6B,GAApC;AACD;;AAED,eAASud,kBAAT,CAA4BH,IAA5B,EAAkC;AAChC,YAAIc,OAAO,GAAGd,IAAI,CAACe,QAAL,CAAc,CAAd,EAAiB,KAAjB,CAAd;;AACA,YAAID,OAAO,KAAK,EAAhB,EAAoB;AAClB,iBAAO,KAAP;AACD;;AACDA,eAAO,GAAGd,IAAI,CAACe,QAAL,CAAc,CAAd,EAAiB,IAAjB,CAAV;;AACA,YAAID,OAAO,KAAK,EAAhB,EAAoB;AAClBzX,iBAAO,CAACC,IAAR,CAAa,mEAAb;AACD;;AACD,eAAO,IAAP;AACD;;AAED,eAAS+W,UAAT,CAAoBL,IAApB,EAA0BE,cAA1B,EAA0C;AACxC,eAAO;AACLY,iBAAO,EAAEd,IAAI,CAACe,QAAL,CAAc,CAAd,EAAiBb,cAAjB,CADJ;AAELc,wBAAc,EAAEhB,IAAI,CAACe,QAAL,CAAc,EAAd,EAAkBb,cAAlB,CAFX;AAGLI,mBAAS,EAAEN,IAAI,CAACe,QAAL,CAAc,EAAd,EAAkBb,cAAlB,CAHN;AAILe,mBAAS,EAAEC,YAAY,CAAClB,IAAD,EAAO,EAAP,EAAW,KAAK,CAAhB,CAAZ,CAA+BmB,IAA/B,EAJN;AAKLC,2BAAiB,EAAEpB,IAAI,CAACqB,UAAL,CAAgB,GAAhB,EAAqBnB,cAArB,CALd;AAMLoB,2BAAiB,EAAEtB,IAAI,CAACqB,UAAL,CAAgB,GAAhB,EAAqBnB,cAArB,CANd;AAOLqB,yBAAe,EAAEvB,IAAI,CAACqB,UAAL,CAAgB,GAAhB,EAAqBnB,cAArB,CAPZ;AAQLsB,yBAAe,EAAExB,IAAI,CAACqB,UAAL,CAAgB,GAAhB,EAAqBnB,cAArB;AARZ,SAAP;AAUD;;AAED,eAASgB,YAAT,CAAsBlB,IAAtB,EAA4BtU,KAA5B,EAAmC+V,GAAnC,EAAwC;AACtC,eAAOza,MAAM,CAACC,YAAP,CAAoBsX,KAApB,CAA0B,IAA1B,EAAgC,IAAImD,UAAJ,CAAe1B,IAAI,CAAC2B,MAAL,CAAYhB,KAAZ,CAAkBjV,KAAlB,EAAyB+V,GAAzB,CAAf,CAAhC,CAAP;AACD;;AAED,eAASlB,YAAT,CAAsBP,IAAtB,EAA4BI,MAA5B,EAAoCF,cAApC,EAAoD;AAClD,YAAI0B,UAAU,GAAG,GAAjB;AACA,YAAIvJ,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIjS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGga,MAAM,CAACE,SAA3B,EAAsCla,CAAC,EAAvC,EAA2C;AACzC,cAAIyb,SAAS,GAAGC,cAAc,CAAC9B,IAAD,EAAO4B,UAAP,EAAmB1B,cAAnB,CAA9B;AACA,cAAI6B,KAAK,GAAGC,aAAa,CAAChC,IAAD,EAAO4B,UAAP,EAAmBC,SAAnB,EAA8B3B,cAA9B,CAAzB;AACA,cAAI+B,cAAc,GAAGtf,IAAI,CAAC2B,KAAL,CACnB,IAAI,CAACud,SAAS,CAACK,cAAV,GAA2BL,SAAS,CAACM,cAAtC,IAAwDN,SAAS,CAACO,iBADnD,CAArB;AAEA,cAAIC,cAAc,GAAG1f,IAAI,CAAC2B,KAAL,CACnB,IAAI,CAACud,SAAS,CAACS,aAAV,GAA0BT,SAAS,CAACU,aAArC,IAAsDV,SAAS,CAACW,gBADjD,CAArB,CALyC,CAOzC;;AACAnK,eAAK,CAAC6D,IAAN,CAAW;AACTxa,cAAE,EAAE,CAACkf,gBAAgB,CAACiB,SAAS,CAACM,cAAX,CAAjB,EAA6CvB,gBAAgB,CAACiB,SAAS,CAACU,aAAX,CAA7D,CADK;AAET/F,eAAG,EAAE,CAACoE,gBAAgB,CAACiB,SAAS,CAACO,iBAAX,CAAjB,EAAgDxB,gBAAgB,CAACiB,SAAS,CAACW,gBAAX,CAAhE,CAFI;AAGT5F,eAAG,EAAE,CAACqF,cAAD,EAAiBI,cAAjB,CAHI;AAITI,iBAAK,EAAEZ,SAAS,CAACa,aAJR;AAKT/E,eAAG,EAAEgF,QAAQ,CAACZ,KAAD;AALJ,WAAX;AAOD;;AACD,eAAO1J,KAAP;AACD;;AAED,eAASsK,QAAT,CAAkBZ,KAAlB,EAAyB;AACvB,eAAOA,KAAK,CAAC3J,GAAN,CAAU,UAAUtL,CAAV,EAAa;AAAC,iBAAO,CAAC8T,gBAAgB,CAAC9T,CAAC,CAAC8V,cAAH,CAAjB,EAAqChC,gBAAgB,CAAC9T,CAAC,CAAC+V,aAAH,CAArD,CAAP;AAAgF,SAAxG,CAAP;AACD;;AAED,eAASf,cAAT,CAAwB9B,IAAxB,EAA8B8C,MAA9B,EAAsC5C,cAAtC,EAAsD;AACpD,eAAO;AACL9I,cAAI,EAAE8J,YAAY,CAAClB,IAAD,EAAO8C,MAAM,GAAG,CAAhB,EAAmBA,MAAM,GAAG,EAA5B,CAAZ,CAA4C3B,IAA5C,EADD;AAEL4B,gBAAM,EAAE7B,YAAY,CAAClB,IAAD,EAAO8C,MAAM,GAAG,EAAhB,EAAoBA,MAAM,GAAG,EAAT,GAAc,CAAlC,CAAZ,CAAiD3B,IAAjD,EAFH;AAGLoB,uBAAa,EAAEvC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,EAAzB,EAA6B5C,cAA7B,CAHV;AAILoC,uBAAa,EAAEtC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,EAAzB,EAA6B5C,cAA7B,CAJV;AAKLiC,wBAAc,EAAEnC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,GAAzB,EAA8B5C,cAA9B,CALX;AAMLgC,wBAAc,EAAElC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,GAAzB,EAA8B5C,cAA9B,CANX;AAOLsC,0BAAgB,EAAExC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,GAAzB,EAA8B5C,cAA9B,CAPb;AAQLkC,2BAAiB,EAAEpC,IAAI,CAACqB,UAAL,CAAgByB,MAAM,GAAG,GAAzB,EAA8B5C,cAA9B,CARd;AASLwC,uBAAa,EAAE1C,IAAI,CAACe,QAAL,CAAc+B,MAAM,GAAG,GAAvB,EAA4B5C,cAA5B;AATV,SAAP;AAWD;;AAED,eAAS8B,aAAT,CAAuBhC,IAAvB,EAA6B8C,MAA7B,EAAqCE,UAArC,EAAiD9C,cAAjD,EAAiE;AAC/D,YAAI+C,WAAW,GAAGH,MAAM,GAAG,GAA3B;AACA,YAAII,gBAAgB,GAAG,EAAvB;AACA,YAAIC,gBAAgB,GAAG,EAAvB;;AACA,aAAK,IAAI/c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4c,UAAU,CAACN,aAA/B,EAA8Ctc,CAAC,EAA/C,EAAmD;AACjD,cAAIgd,MAAM,GAAG;AACXP,yBAAa,EAAE7C,IAAI,CAACqD,UAAL,CAAgBJ,WAAW,GAAG7c,CAAC,GAAG8c,gBAAlC,EAAoDhD,cAApD,CADJ;AAEX0C,0BAAc,EAAE5C,IAAI,CAACqD,UAAL,CAAgBJ,WAAW,GAAG7c,CAAC,GAAG8c,gBAAlB,GAAqC,CAArD,EAAwDhD,cAAxD,CAFL;AAGXoD,4BAAgB,EAAEtD,IAAI,CAACqD,UAAL,CAAgBJ,WAAW,GAAG7c,CAAC,GAAG8c,gBAAlB,GAAqC,CAArD,EAAwDhD,cAAxD,CAHP;AAIXqD,6BAAiB,EAAEvD,IAAI,CAACqD,UAAL,CAAgBJ,WAAW,GAAG7c,CAAC,GAAG8c,gBAAlB,GAAqC,EAArD,EAAyDhD,cAAzD;AAJR,WAAb;AAMAiD,0BAAgB,CAACjH,IAAjB,CAAsBkH,MAAtB;AACD;;AACD,eAAOD,gBAAP;AACD;;;;;;;;;;;;;;;;;AC7ID;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,eAASK,OAAT,CAAiBC,IAAjB,EAAsB;AACpB,eAAO,OAAOA,IAAP,KAAgB,QAAvB;AACD;;AACD,eAASC,OAAT,CAAiBD,IAAjB,EAAsB;AACpB,eAAOA,IAAI,IAAI,6CAAf;AACD;;AACD,UAAIE,SAAS,GAAG,CAAC,cAAD,EAAiB,SAAjB,EAA4B,QAA5B,EAAqC,QAArC,EAA8C,QAA9C,EAAuD,UAAvD,EAAmE,SAAnE,EAA8E,aAA9E,EAA6F,eAA7F,EAA8G,QAA9G,EAAwH,gBAAxH,CAAhB;;AACA,eAASC,OAAT,CAAiBH,IAAjB,EAAsB;AACpB,eAAOE,SAAS,CAACE,IAAV,CAAe,UAAUC,IAAV,EAAgB;AACpC,iBAAOL,IAAI,CAACrX,OAAL,CAAa0X,IAAb,IAAqB,CAAC,CAA7B;AACD,SAFM,CAAP;AAGD;;AACD,UAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB,EAA2B,QAA3B,CAAZ;;AACA,eAASC,aAAT,CAAuBrM,IAAvB,EAA6B;AAC3B,YAAIsM,IAAI,GAAG,uDAAMtM,IAAN,EAAY,WAAZ,CAAX;;AACA,YAAI,CAACsM,IAAL,EAAW;AACT;AACD;;AACD,YAAIR,IAAI,GAAG,uDAAMQ,IAAN,EAAY,MAAZ,CAAX;AACA,eAAOR,IAAI,IAAIM,KAAK,CAAC3X,OAAN,CAAcqX,IAAd,IAAsB,CAAC,CAAtC;AACD;;AACD,eAASS,YAAT,CAAsBvM,IAAtB,EAA4B;AAC1B,YAAIwM,GAAG,GAAG,uDAAMxM,IAAN,EAAY,WAAZ,CAAV;;AACA,YAAI,CAACwM,GAAL,EAAU;AACR;AACD;;AACD,eAAO,uDAAMA,GAAN,EAAW,OAAX,CAAP;AACD;;AACD,eAASC,QAAT,CAAkBX,IAAlB,EAAuB;AACrB,eAAOA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAnB;AACD;;AACD,eAASY,KAAT,CAAeZ,IAAf,EAAoB;AAClB,YAAID,OAAO,CAACC,IAAD,CAAX,EAAmB;AACjB;AACA,cAAIC,OAAO,CAACD,IAAD,CAAX,EAAmB;AACjB,mBAAO,8CAAKA,IAAL,CAAP;AACD;;AACD,cAAIG,OAAO,CAACH,IAAD,CAAX,EAAmB;AACjB,gBAAIxX,GAAG,GAAG,2DAAIwX,IAAJ,CAAV,CADiB,CAEjB;;AACA,gBAAIO,aAAa,CAAC/X,GAAD,CAAjB,EAAwB;AACtB,qBAAO,8CAAK,WAAL,CAAP;AACD;;AACD,gBAAIqY,YAAY,GAAGJ,YAAY,CAACjY,GAAD,CAA/B;;AACA,gBAAIqY,YAAJ,EAAkB;AAChB,qBAAO,4DAAQA,YAAR,CAAP;AACD;;AACD,mBAAOrY,GAAP;AACD;;AACD,cAAImY,QAAQ,CAACX,IAAD,CAAZ,EAAoB;AAClB,mBAAO,4DAAQA,IAAR,CAAP;AACD;AACF,SApBD,MAoBK;AACH,iBAAOA,IAAP;AACD;AACF;AAEc;;;AAAA,uCAAAY,KAAA;;;;;;;;;;;;;;;;AC7Df;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKe;;;AAAA;AACb,YAAIE,IAAI,GAAG,EAAX;AACA,YAAIC,QAAQ,GAAGC,OAAO,CAACrb,KAAR,CAAc,GAAd,EAAmBgP,GAAnB,CAAuB,UAASrM,CAAT,EAAY;AAChD,iBAAOA,CAAC,CAACoV,IAAF,EAAP;AACD,SAFc,EAEZuD,MAFY,CAEL,UAASzhB,CAAT,EAAY;AACpB,iBAAOA,CAAP;AACD,SAJc,EAIZ0hB,MAJY,CAIL,UAASjM,CAAT,EAAYzV,CAAZ,EAAe;AACvB,cAAImG,KAAK,GAAGnG,CAAC,CAACmG,KAAF,CAAQ,GAAR,CAAZ;AACAA,eAAK,CAAC8S,IAAN,CAAW,IAAX;AACAxD,WAAC,CAACtP,KAAK,CAAC,CAAD,CAAL,CAASsW,WAAT,EAAD,CAAD,GAA4BtW,KAAK,CAAC,CAAD,CAAjC;AACA,iBAAOsP,CAAP;AACD,SATc,EASZ,EATY,CAAf;AAUA,YAAIkM,SAAJ,EAAeC,QAAf,EAAyBC,YAAzB;AACA,YAAIC,MAAM,GAAG;AACXC,cAAI,EAAE,UADK;AAEX1Z,eAAK,EAAE,WAFI;AAGXN,YAAE,EAAE,YAASe,CAAT,EAAY;AACdwY,gBAAI,CAACvZ,EAAL,GAAUzC,UAAU,CAACwD,CAAD,CAApB;AACD,WALU;AAMXkZ,eAAK,EAAE,eAASlZ,CAAT,EAAY;AACjBwY,gBAAI,CAAC1Z,IAAL,GAAYkB,CAAC,GAAG,qDAAhB;AACD,WARU;AASXmZ,eAAK,EAAE,eAASnZ,CAAT,EAAY;AACjBwY,gBAAI,CAAC3Z,IAAL,GAAYmB,CAAC,GAAG,qDAAhB;AACD,WAXU;AAYXoZ,eAAK,EAAE,eAASpZ,CAAT,EAAY;AACjBwY,gBAAI,CAACa,IAAL,GAAYrZ,CAAC,GAAG,qDAAhB;AACD,WAdU;AAeXsZ,gBAAM,EAAE,gBAAStZ,CAAT,EAAY;AAClBwY,gBAAI,CAACc,MAAL,GAActZ,CAAC,GAAG,qDAAlB;AACD,WAjBU;AAkBXuZ,eAAK,EAAE,eAASvZ,CAAT,EAAY;AACjBwY,gBAAI,CAACgB,KAAL,GAAaxZ,CAAC,GAAG,qDAAjB;AACD,WApBU;AAqBXyZ,eAAK,EAAE,eAASzZ,CAAT,EAAY;AACjBwY,gBAAI,CAACkB,KAAL,GAAa1Z,CAAC,GAAG,qDAAjB;AACD,WAvBU;AAwBX2Z,eAAK,EAAE,eAAS3Z,CAAT,EAAY;AACjBwY,gBAAI,CAACoB,KAAL,GAAa5Z,CAAC,GAAG,qDAAjB;AACD,WA1BU;AA2BX6Z,eAAK,EAAE,eAAS7Z,CAAT,EAAY;AACjBwY,gBAAI,CAACqB,KAAL,GAAard,UAAU,CAACwD,CAAD,CAAV,GAAgB,qDAA7B;AACD,WA7BU;AA8BX8Z,eAAK,EAAE,eAAS9Z,CAAT,EAAY;AACjBwY,gBAAI,CAACuB,oBAAL,GAA4Bvd,UAAU,CAACwD,CAAD,CAAtC;AACD,WAhCU;AAiCXga,cAAI,EAAE,cAASha,CAAT,EAAY;AAChBwY,gBAAI,CAACyB,KAAL,GAAaja,CAAC,GAAG,qDAAjB;AACD,WAnCU;AAoCXka,aAAG,EAAE,aAASla,CAAT,EAAY;AACfwY,gBAAI,CAAC2B,EAAL,GAAU3d,UAAU,CAACwD,CAAD,CAApB;AACD,WAtCU;AAuCXoa,aAAG,EAAE,aAASpa,CAAT,EAAY;AACfwY,gBAAI,CAAC6B,EAAL,GAAU7d,UAAU,CAACwD,CAAD,CAApB;AACD,WAzCU;AA0CXsa,aAAG,EAAE,aAASta,CAAT,EAAY;AACfwY,gBAAI,CAACphB,EAAL,GAAUoF,UAAU,CAACwD,CAAD,CAApB;AACD,WA5CU;AA6CXuE,WAAC,EAAE,WAASvE,CAAT,EAAY;AACbwY,gBAAI,CAACphB,EAAL,GAAUoF,UAAU,CAACwD,CAAD,CAApB;AACD,WA/CU;AAgDX9I,WAAC,EAAE,WAAS8I,CAAT,EAAY;AACbwY,gBAAI,CAACthB,CAAL,GAASsF,UAAU,CAACwD,CAAD,CAAnB;AACD,WAlDU;AAmDXhB,WAAC,EAAE,WAASgB,CAAT,EAAY;AACbwY,gBAAI,CAACxZ,CAAL,GAASxC,UAAU,CAACwD,CAAD,CAAnB;AACD,WArDU;AAsDXua,aAAG,EAAE,eAAW;AACd/B,gBAAI,CAACpZ,GAAL,GAAW,IAAX;AACD,WAxDU;AAyDXyB,cAAI,EAAE,cAASb,CAAT,EAAY;AAChBwY,gBAAI,CAAC3X,IAAL,GAAYpF,QAAQ,CAACuE,CAAD,EAAI,EAAJ,CAApB;AACD,WA3DU;AA4DXwa,eAAK,EAAE,iBAAW;AAChBhC,gBAAI,CAACiC,QAAL,GAAgB,IAAhB;AACD,WA9DU;AA+DXjc,iBAAO,EAAE,iBAASwB,CAAT,EAAY;AACnBwY,gBAAI,CAACja,YAAL,GAAoByB,CAAC,CAAC3C,KAAF,CAAQ,GAAR,EAAagP,GAAb,CAAiB,UAASnV,CAAT,EAAY;AAC/C,qBAAOsF,UAAU,CAACtF,CAAD,CAAjB;AACD,aAFmB,CAApB;AAGD,WAnEU;AAoEXyS,kBAAQ,EAAE,kBAAS3J,CAAT,EAAY;AACpBwY,gBAAI,CAAC7O,QAAL,GAAgBnN,UAAU,CAACwD,CAAD,CAA1B;AACD,WAtEU;AAuEX0a,eAAK,EAAE,eAAS1a,CAAT,EAAY;AACjBwY,gBAAI,CAACkC,KAAL,GAAa1a,CAAb;AACA,gBAAI2a,IAAI,GAAG,uDAAM,wDAAN,EAAa3a,CAAb,CAAX;;AACA,gBAAI2a,IAAJ,EAAU;AACRnC,kBAAI,CAAC7O,QAAL,GAAgBgR,IAAI,CAAChR,QAArB;AACD;AACF,WA7EU;AA8EXiR,wBAAc,EAAE,wBAAS5a,CAAT,EAAY;AAC1BwY,gBAAI,CAACoC,cAAL,GAAsB5a,CAAC,GAAG,qDAA1B;AACD,WAhFU;AAiFX6a,YAAE,EAAE,YAAS7a,CAAT,EAAY;AACd,gBAAI6a,EAAE,GAAG,uDAAM,gEAAN,EAAqB7a,CAArB,CAAT;AACAwY,gBAAI,CAACoC,cAAL,GAAsB,CAACC,EAAE,GAAGA,EAAH,GAAQre,UAAU,CAACwD,CAAD,CAArB,IAA4B,qDAAlD;AACD,WApFU;AAqFXX,kBAAQ,EAAE,kBAASW,CAAT,EAAY;AACpB,gBAAIA,CAAC,KAAK,OAAV,EAAmB;AACjBwY,kBAAI,CAACna,SAAL,GAAiB,MAAjB;AACD,aAFD,MAGK;AACHma,kBAAI,CAACnZ,QAAL,GAAgBW,CAAhB;AACD;AACF,WA5FU;AA6FXpB,cAAI,EAAE,cAASoB,CAAT,EAAY;AAChB,gBAAI8a,SAAS,GAAG,QAAhB;;AACA,gBAAI9a,CAAC,CAACjG,MAAF,KAAa,CAAb,IAAkB+gB,SAAS,CAACza,OAAV,CAAkBL,CAAC,CAAClG,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAlB,MAAsC,CAAC,CAAzD,IAA8DghB,SAAS,CAACza,OAAV,CAAkBL,CAAC,CAAClG,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAlB,MAAsC,CAAC,CAArG,IAA0GghB,SAAS,CAACza,OAAV,CAAkBL,CAAC,CAAClG,MAAF,CAAS,CAAT,EAAY,CAAZ,CAAlB,MAAsC,CAAC,CAArJ,EAAwJ;AACtJ0e,kBAAI,CAAC5Z,IAAL,GAAYoB,CAAZ;AACD;AACF,WAlGU;AAmGX+a,gBAAM,EAAE,kBAAW;AACjBvC,gBAAI,CAACuC,MAAL,GAAc,IAAd;AACD;AArGU,SAAb;;AAuGA,aAAKlC,SAAL,IAAkBJ,QAAlB,EAA4B;AAC1BK,kBAAQ,GAAGL,QAAQ,CAACI,SAAD,CAAnB;;AACA,cAAIA,SAAS,IAAIG,MAAjB,EAAyB;AACvBD,wBAAY,GAAGC,MAAM,CAACH,SAAD,CAArB;;AACA,gBAAI,OAAOE,YAAP,KAAwB,UAA5B,EAAwC;AACtCA,0BAAY,CAACD,QAAD,CAAZ;AACD,aAFD,MAGK;AACHN,kBAAI,CAACO,YAAD,CAAJ,GAAqBD,QAArB;AACD;AACF,WARD,MASK;AACHN,gBAAI,CAACK,SAAD,CAAJ,GAAkBC,QAAlB;AACD;AACF;;AACD,YAAG,OAAON,IAAI,CAACna,SAAZ,KAA0B,QAA1B,IAAsCma,IAAI,CAACna,SAAL,KAAmB,OAA5D,EAAoE;AAClEma,cAAI,CAACna,SAAL,GAAiBma,IAAI,CAACna,SAAL,CAAesV,WAAf,EAAjB;AACD;;AACD,eAAO6E,IAAP;AACD,OAvIc;;;;;;;;;;;;;;;;;ACLf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAIwC,KAAK,GAAG,CAAC,yDAAD,EAAO,4DAAP,CAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,SAAS,GAAG,EAAhB;;AAEA,eAASC,GAAT,CAAalC,IAAb,EAAmB5e,CAAnB,EAAsB;AACpB,YAAI+gB,GAAG,GAAGF,SAAS,CAACnhB,MAApB;;AACA,YAAI,CAACkf,IAAI,CAACgC,KAAV,EAAiB;AACf3d,iBAAO,CAAC0F,GAAR,CAAY3I,CAAZ;AACA,iBAAO,IAAP;AACD;;AACD6gB,iBAAS,CAACE,GAAD,CAAT,GAAiBnC,IAAjB;AACAA,YAAI,CAACgC,KAAL,CAAWxP,OAAX,CAAmB,UAAS5O,CAAT,EAAY;AAC7Boe,eAAK,CAACpe,CAAC,CAAC8W,WAAF,EAAD,CAAL,GAAyByH,GAAzB;AACD,SAFD;AAGA,eAAO,IAAP;AACD;;AAIM,eAASjd,GAAT,CAAakN,IAAb,EAAmB;AACxB,YAAI,CAACA,IAAL,EAAW;AACT,iBAAO,KAAP;AACD;;AACD,YAAIxO,CAAC,GAAGwO,IAAI,CAACsI,WAAL,EAAR;;AACA,YAAI,OAAOsH,KAAK,CAACpe,CAAD,CAAZ,KAAoB,WAApB,IAAmCqe,SAAS,CAACD,KAAK,CAACpe,CAAD,CAAN,CAAhD,EAA4D;AAC1D,iBAAOqe,SAAS,CAACD,KAAK,CAACpe,CAAD,CAAN,CAAhB;AACD;AACF;;AAEM,eAAS8C,KAAT,GAAiB;AACtBqb,aAAK,CAACvP,OAAN,CAAc0P,GAAd;AACD;AACc;;;AAAA;AACbxb,aAAK,EAAEA,KADM;AAEbwb,WAAG,EAAEA,GAFQ;AAGbhd,WAAG,EAAEA;AAHQ;;;;;;;;;;;;;;;;AClCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMO,eAASuB,IAAT,GAAgB;AAErB,YAAI9I,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C;AACD;;AACD,aAAKtX,IAAL,GAAY,KAAK/C,CAAL,GAAS,KAAK9H,CAA1B;AACA,aAAKsI,EAAL,GAAU,IAAI5I,IAAI,CAAC2C,GAAL,CAAS,KAAKwI,IAAd,EAAoB,CAApB,CAAd;AACA,aAAKc,EAAL,GAAUjM,IAAI,CAACoB,IAAL,CAAU,KAAKwH,EAAf,CAAV;AAEA,aAAK6b,MAAL,GAAczkB,IAAI,CAACqB,GAAL,CAAS,KAAK4G,IAAd,CAAd;AACA,aAAKyc,MAAL,GAAc1kB,IAAI,CAACuB,GAAL,CAAS,KAAK0G,IAAd,CAAd;AACA,aAAK0c,EAAL,GAAU,KAAKF,MAAf;AACA,aAAKjY,GAAL,GAAW,KAAKiY,MAAhB;AACA,aAAKG,GAAL,GAAW,8DAAM,KAAK3Y,EAAX,EAAe,KAAKwY,MAApB,EAA4B,KAAKC,MAAjC,CAAX;AACA,aAAKG,GAAL,GAAW,8DAAM,KAAK5Y,EAAX,EAAe,KAAKwY,MAApB,EAA4B,KAAKC,MAAjC,CAAX;AAEA,aAAKD,MAAL,GAAczkB,IAAI,CAACqB,GAAL,CAAS,KAAKohB,IAAd,CAAd;AACA,aAAKiC,MAAL,GAAc1kB,IAAI,CAACuB,GAAL,CAAS,KAAKkhB,IAAd,CAAd;AACA,aAAKqC,EAAL,GAAU,KAAKL,MAAf;AACA,aAAKM,GAAL,GAAW,8DAAM,KAAK9Y,EAAX,EAAe,KAAKwY,MAApB,EAA4B,KAAKC,MAAjC,CAAX;AACA,aAAKM,GAAL,GAAW,8DAAM,KAAK/Y,EAAX,EAAe,KAAKwY,MAApB,EAA4B,KAAKC,MAAjC,CAAX;AAEA,aAAKD,MAAL,GAAczkB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAd;AACA,aAAKwc,MAAL,GAAc1kB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAd;AACA,aAAK+c,EAAL,GAAU,KAAKR,MAAf;AACA,aAAKS,GAAL,GAAW,8DAAM,KAAKjZ,EAAX,EAAe,KAAKwY,MAApB,EAA4B,KAAKC,MAAjC,CAAX;;AAEA,YAAI1kB,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C,eAAK0C,GAAL,GAAW,CAAC,KAAKP,GAAL,GAAW,KAAKA,GAAhB,GAAsB,KAAKG,GAAL,GAAW,KAAKA,GAAvC,KAA+C,KAAKC,GAAL,GAAW,KAAKH,GAA/D,CAAX;AACD,SAFD,MAGK;AACH,eAAKM,GAAL,GAAW,KAAK3Y,GAAhB;AACD;;AACD,aAAK4Y,CAAL,GAAS,KAAKR,GAAL,GAAW,KAAKA,GAAhB,GAAsB,KAAKO,GAAL,GAAW,KAAKN,GAA/C;AACA,aAAKQ,EAAL,GAAU,KAAK/kB,CAAL,GAASN,IAAI,CAACoB,IAAL,CAAU,KAAKgkB,CAAL,GAAS,KAAKD,GAAL,GAAW,KAAKD,GAAnC,CAAT,GAAmD,KAAKC,GAAlE;AACD;AAED;;;;AAEO,eAASvmB,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA,aAAK4J,OAAL,GAAetM,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAf;AACA,aAAKoN,OAAL,GAAevM,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAf;AAEA,YAAImmB,EAAE,GAAG,8DAAM,KAAKrZ,EAAX,EAAe,KAAKK,OAApB,EAA6B,KAAKC,OAAlC,CAAT;AACA,YAAIgZ,GAAG,GAAG,KAAKjlB,CAAL,GAASN,IAAI,CAACoB,IAAL,CAAU,KAAKgkB,CAAL,GAAS,KAAKD,GAAL,GAAWG,EAA9B,CAAT,GAA6C,KAAKH,GAA5D;AACA,YAAIK,KAAK,GAAG,KAAKL,GAAL,GAAW,mEAAW/lB,GAAG,GAAG,KAAKwjB,KAAtB,CAAvB;AACA,YAAIngB,CAAC,GAAG8iB,GAAG,GAAGvlB,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAN,GAAwB,KAAKjC,EAArC;AACA,YAAI7gB,CAAC,GAAG,KAAK2iB,EAAL,GAAUE,GAAG,GAAGvlB,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAhB,GAAkC,KAAK/B,EAA/C;AAEA1N,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIwP,GAAJ,EAASD,EAAT,EAAa9Y,GAAb,EAAkBgZ,KAAlB,EAAyBpmB,GAAzB,EAA8BD,GAA9B;AAEA4W,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,GAAM,KAAK2iB,EAAL,GAAUtP,CAAC,CAACrT,CAAZ,GAAgB,KAAK+gB,EAA3B;;AACA,YAAI,KAAK0B,GAAL,IAAY,CAAhB,EAAmB;AACjBI,aAAG,GAAGvlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAN;AACA8J,aAAG,GAAG,CAAN;AACD,SAHD,MAIK;AACH+Y,aAAG,GAAG,CAACvlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAP;AACA8J,aAAG,GAAG,CAAC,CAAP;AACD;;AACDgZ,aAAK,GAAG,CAAR;;AACA,YAAID,GAAG,KAAK,CAAZ,EAAe;AACbC,eAAK,GAAGxlB,IAAI,CAAC2X,KAAL,CAAWnL,GAAG,GAAGuJ,CAAC,CAACtT,CAAnB,EAAsB+J,GAAG,GAAGuJ,CAAC,CAACrT,CAA9B,CAAR;AACD;;AACD8J,WAAG,GAAG+Y,GAAG,GAAG,KAAKJ,GAAX,GAAiB,KAAK7kB,CAA5B;;AACA,YAAI,KAAKgI,MAAT,EAAiB;AACfnJ,aAAG,GAAGa,IAAI,CAACkK,IAAL,CAAU,CAAC,KAAKkb,CAAL,GAAS5Y,GAAG,GAAGA,GAAhB,KAAwB,IAAI,KAAK2Y,GAAjC,CAAV,CAAN;AACD,SAFD,MAGK;AACHG,YAAE,GAAG,CAAC,KAAKF,CAAL,GAAS5Y,GAAG,GAAGA,GAAhB,IAAuB,KAAK2Y,GAAjC;AACAhmB,aAAG,GAAG,KAAKsmB,KAAL,CAAW,KAAKxZ,EAAhB,EAAoBqZ,EAApB,CAAN;AACD;;AAEDlmB,WAAG,GAAG,mEAAWomB,KAAK,GAAG,KAAKL,GAAb,GAAmB,KAAKvC,KAAnC,CAAN;AACA7M,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;AAED;;;;;AAGO,eAAS0P,KAAT,CAAetZ,MAAf,EAAuBmZ,EAAvB,EAA2B;AAChC,YAAIla,MAAJ,EAAYqB,MAAZ,EAAoBD,GAApB,EAAyB2B,GAAzB,EAA8BtC,IAA9B;AACA,YAAID,GAAG,GAAG,8DAAM,MAAM0Z,EAAZ,CAAV;;AACA,YAAInZ,MAAM,GAAG,uDAAb,EAAoB;AAClB,iBAAOP,GAAP;AACD;;AAED,YAAI8Z,MAAM,GAAGvZ,MAAM,GAAGA,MAAtB;;AACA,aAAK,IAAI1I,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B2H,gBAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAT;AACAa,gBAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAT;AACAY,aAAG,GAAGL,MAAM,GAAGf,MAAf;AACA+C,aAAG,GAAG,IAAI3B,GAAG,GAAGA,GAAhB;AACAX,cAAI,GAAG,MAAMsC,GAAN,GAAYA,GAAZ,GAAkB1B,MAAlB,IAA4B6Y,EAAE,IAAI,IAAII,MAAR,CAAF,GAAoBta,MAAM,GAAG+C,GAA7B,GAAmC,MAAMhC,MAAN,GAAenM,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAII,GAAL,KAAa,IAAIA,GAAjB,CAAT,CAA9E,CAAP;AACAZ,aAAG,GAAGA,GAAG,GAAGC,IAAZ;;AACA,cAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,IAAtB,EAA4B;AAC1B,mBAAOD,GAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD;;AAEM,UAAIyY,KAAK,GAAG,CAAC,yBAAD,EAA4B,QAA5B,EAAsC,KAAtC,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA,KAJM;AAKboB,aAAK,EAAEA;AALM;;;;;;;;;;;;;;;;AC1Hf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcO,eAAS3c,IAAT,GAAgB;AACrB,aAAK6c,OAAL,GAAe3lB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAf;AACA,aAAK0d,OAAL,GAAe5lB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAf;AACD;;AAEM,eAAStJ,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAI0I,MAAM,GAAGpL,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAb;AACA,YAAI+J,MAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASwU,CAAC,CAACrT,CAAX,CAAb;AACA,YAAImjB,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;AACA,YAAI7W,EAAJ,EAAQ9J,EAAR,EAAY+J,EAAZ,EAAgBC,EAAhB,EAAoB6Z,GAApB,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,EAA1C,EAA8CC,GAA9C,EAAmDC,EAAnD,EAAuDC,CAAvD,EAA0DC,CAA1D,EAA6DC,EAA7D,EAAiEC,EAAjE,EAAqEpB,CAArE,EAAwEqB,EAAxE,EAA4EC,KAA5E,EAAmF7Y,CAAnF,EAAsF8Y,EAAtF,EAA0FC,EAA1F,EAA8FC,EAA9F,EAAkGC,EAAlG;;AACA,YAAI,KAAKxe,MAAT,EAAiB;AACf,cAAItI,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AACvC;AACA5P,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,IAAU,4DAAUnB,GAApB,IAA2Ba,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA3C;AACA9P,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,IAAU,4DAAUnB,GAApB,IAA2Ba,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA3C;AACA,mBAAO9P,CAAP;AACD,WALD,MAMK,IAAI/V,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AAC5C;AACA5P,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,IAAU,4DAAUnB,GAApB,IAA2Ba,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA3C;AACA9P,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,IAAU,4DAAUnB,GAApB,IAA2Ba,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA3C;AACA,mBAAO9P,CAAP;AACD,WALI,MAMA;AACH;AACA2Q,iBAAK,GAAG,KAAKf,OAAL,GAAeva,MAAf,GAAwB,KAAKwa,OAAL,GAAenZ,MAAf,GAAwBzM,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAxD;AACAT,aAAC,GAAGplB,IAAI,CAAC+mB,IAAL,CAAUL,KAAV,CAAJ;AACAD,cAAE,GAAGrB,CAAC,GAAGA,CAAC,GAAGplB,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAAP,GAAqB,CAA3B;AACArP,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAASmmB,EAAT,GAAcha,MAAd,GAAuBzM,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAAvC;AACA9P,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAASmmB,EAAT,IAAe,KAAKb,OAAL,GAAexa,MAAf,GAAwB,KAAKua,OAAL,GAAelZ,MAAf,GAAwBzM,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA/D,CAAhB;AACA,mBAAO9P,CAAP;AACD;AACF,SAtBD,MAuBK;AACHhK,YAAE,GAAG,6DAAK,KAAKnD,EAAV,CAAL;AACA3G,YAAE,GAAG,6DAAK,KAAK2G,EAAV,CAAL;AACAoD,YAAE,GAAG,6DAAK,KAAKpD,EAAV,CAAL;AACAqD,YAAE,GAAG,6DAAK,KAAKrD,EAAV,CAAL;;AACA,cAAI5I,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AACvC;AACAG,eAAG,GAAG,KAAKxlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB,yDAArB,CAAf;AACA8Z,cAAE,GAAG,KAAKzlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB9M,GAArB,CAAd;AACA4W,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU,CAACuC,GAAG,GAAGC,EAAP,IAAa/lB,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA7B;AACA9P,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,CAACqC,GAAG,GAAGC,EAAP,IAAa/lB,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA7B;AACA,mBAAO9P,CAAP;AACD,WAPD,MAQK,IAAI/V,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AAC5C;AACAG,eAAG,GAAG,KAAKxlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB,yDAArB,CAAf;AACA8Z,cAAE,GAAG,KAAKzlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB9M,GAArB,CAAd;AACA4W,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU,CAACuC,GAAG,GAAGC,EAAP,IAAa/lB,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA7B;AACA9P,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,CAACqC,GAAG,GAAGC,EAAP,IAAa/lB,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA7B;AACA,mBAAO9P,CAAP;AACD,WAPI,MAQA;AACH;AACAiQ,kBAAM,GAAG5a,MAAM,GAAGqB,MAAlB;AACAwZ,eAAG,GAAG,2DAAG,KAAK3lB,CAAR,EAAW,KAAKuF,CAAhB,EAAmB,KAAK8f,OAAxB,CAAN;AACAO,cAAE,GAAG,2DAAG,KAAK5lB,CAAR,EAAW,KAAKuF,CAAhB,EAAmBuF,MAAnB,CAAL;AACA+a,eAAG,GAAGnmB,IAAI,CAAC2M,IAAL,CAAU,CAAC,IAAI,KAAK/D,EAAV,IAAgBod,MAAhB,GAAyB,KAAKpd,EAAL,GAAUqd,GAAV,GAAgB,KAAKN,OAArB,IAAgCO,EAAE,GAAGzZ,MAArC,CAAnC,CAAN;AACA2Z,cAAE,GAAGpmB,IAAI,CAAC2X,KAAL,CAAW3X,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAAX,EAA2B,KAAKD,OAAL,GAAe5lB,IAAI,CAACsB,GAAL,CAAS6kB,GAAT,CAAf,GAA+B,KAAKR,OAAL,GAAe3lB,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAzE,CAAL;;AACA,gBAAIO,EAAE,KAAK,CAAX,EAAc;AACZvY,eAAC,GAAG7N,IAAI,CAACkK,IAAL,CAAU,KAAK0b,OAAL,GAAe5lB,IAAI,CAACqB,GAAL,CAAS8kB,GAAT,CAAf,GAA+B,KAAKR,OAAL,GAAe3lB,IAAI,CAACuB,GAAL,CAAS4kB,GAAT,CAAxD,CAAJ;AACD,aAFD,MAGK,IAAInmB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAASoc,EAAT,IAAepmB,IAAI,CAACC,EAA7B,KAAoC,uDAAxC,EAA+C;AAClD4N,eAAC,GAAG,CAAC7N,IAAI,CAACkK,IAAL,CAAU,KAAK0b,OAAL,GAAe5lB,IAAI,CAACqB,GAAL,CAAS8kB,GAAT,CAAf,GAA+B,KAAKR,OAAL,GAAe3lB,IAAI,CAACuB,GAAL,CAAS4kB,GAAT,CAAxD,CAAL;AACD,aAFI,MAGA;AACHtY,eAAC,GAAG7N,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACqB,GAAL,CAASwkB,IAAT,IAAiB7lB,IAAI,CAACuB,GAAL,CAAS4kB,GAAT,CAAjB,GAAiCnmB,IAAI,CAACqB,GAAL,CAAS+kB,EAAT,CAA3C,CAAJ;AACD;;AACDC,aAAC,GAAG,KAAKxgB,CAAL,GAAS,KAAK8f,OAAd,GAAwB3lB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAnB,CAA5B;AACA0d,aAAC,GAAG,KAAKzgB,CAAL,GAAS,KAAK+f,OAAd,GAAwB5lB,IAAI,CAACuB,GAAL,CAAS6kB,EAAT,CAAxB,GAAuCpmB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAnB,CAA3C;AACA2d,cAAE,GAAGF,CAAC,GAAGC,CAAT;AACAE,cAAE,GAAGF,CAAC,GAAGA,CAAT;AACAK,cAAE,GAAG9Y,CAAC,GAAGA,CAAT;AACA+Y,cAAE,GAAGD,EAAE,GAAG9Y,CAAV;AACAgZ,cAAE,GAAGD,EAAE,GAAG/Y,CAAV;AACAiZ,cAAE,GAAGD,EAAE,GAAGhZ,CAAV;AACAuX,aAAC,GAAGa,GAAG,GAAGpY,CAAN,IAAW,IAAI8Y,EAAE,GAAGH,EAAL,IAAW,IAAIA,EAAf,IAAqB,CAAzB,GAA6BI,EAAE,GAAG,CAAL,GAASL,EAAT,IAAe,IAAI,IAAIC,EAAvB,CAA7B,GAA0DK,EAAE,GAAG,GAAL,IAAYL,EAAE,IAAI,IAAI,IAAIA,EAAZ,CAAF,GAAoB,IAAIH,CAAJ,GAAQA,CAAR,IAAa,IAAI,IAAIG,EAArB,CAAhC,CAA1D,GAAsHM,EAAE,GAAG,EAAL,GAAUP,EAA3I,CAAJ;AACAxQ,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU6B,CAAC,GAAGplB,IAAI,CAACqB,GAAL,CAAS+kB,EAAT,CAApB;AACArQ,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU2B,CAAC,GAAGplB,IAAI,CAACuB,GAAL,CAAS6kB,EAAT,CAApB;AACA,mBAAOrQ,CAAP;AACD;AACF;AAGF;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA,YAAI4B,EAAJ,EAAQhf,CAAR,EAAW2gB,IAAX,EAAiBC,IAAjB,EAAuB7nB,GAAvB,EAA4BD,GAA5B,EAAiCqN,GAAjC,EAAsCT,EAAtC,EAA0C9J,EAA1C,EAA8C+J,EAA9C,EAAkDC,EAAlD,EAAsD6Z,GAAtD,EAA2DhlB,CAA3D,EAA8DoB,EAA9D,EAAkEikB,GAAlE,EAAuEC,EAAvE,EAA2Ec,KAA3E,EAAkFC,GAAlF,EAAuF5oB,CAAvF,EAA0F+M,CAA1F,EAA6FhJ,CAA7F,EAAgG8kB,EAAhG,EAAoGC,CAApG,EAAuGC,MAAvG;;AACA,YAAI,KAAKhf,MAAT,EAAiB;AACf+c,YAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;;AACA,cAAI2iB,EAAE,GAAI,IAAI,yDAAJ,GAAc,KAAK/kB,CAA7B,EAAiC;AAC/B;AACD;;AACD+F,WAAC,GAAGgf,EAAE,GAAG,KAAK/kB,CAAd;AAEA0mB,cAAI,GAAGhnB,IAAI,CAACqB,GAAL,CAASgF,CAAT,CAAP;AACA4gB,cAAI,GAAGjnB,IAAI,CAACuB,GAAL,CAAS8E,CAAT,CAAP;AAEAjH,aAAG,GAAG,KAAKwjB,KAAX;;AACA,cAAI5iB,IAAI,CAACgK,GAAL,CAASqb,EAAT,KAAgB,uDAApB,EAA2B;AACzBlmB,eAAG,GAAG,KAAK+I,IAAX;AACD,WAFD,MAGK;AACH/I,eAAG,GAAG,8DAAM8nB,IAAI,GAAG,KAAKtB,OAAZ,GAAuB5P,CAAC,CAACrT,CAAF,GAAMskB,IAAN,GAAa,KAAKpB,OAAnB,GAA8BP,EAA1D,CAAN;AACA7Y,eAAG,GAAGxM,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,yDAA5B;;AACA,gBAAIlI,IAAI,CAACgK,GAAL,CAASwC,GAAT,KAAiB,uDAArB,EAA4B;AAC1B,kBAAI,KAAKtE,IAAL,IAAa,CAAjB,EAAoB;AAClB9I,mBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgB,CAAEsT,CAAC,CAACrT,CAApB,CAAxB,CAAN;AACD,eAFD,MAGK;AACHtD,mBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW,CAAC5B,CAAC,CAACtT,CAAd,EAAiBsT,CAAC,CAACrT,CAAnB,CAAxB,CAAN;AACD;AACF,aAPD,MAQK;AACH;;;;;;;AAOAtD,iBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAF,GAAMukB,IAAjB,EAAuB3B,EAAE,GAAG,KAAKO,OAAV,GAAoBqB,IAApB,GAA2BlR,CAAC,CAACrT,CAAF,GAAM,KAAKijB,OAAX,GAAqBqB,IAAvE,CAAxB,CAAN;AACD;AACF;;AAEDjR,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD,SAxCD,MAyCK;AACHhK,YAAE,GAAG,6DAAK,KAAKnD,EAAV,CAAL;AACA3G,YAAE,GAAG,6DAAK,KAAK2G,EAAV,CAAL;AACAoD,YAAE,GAAG,6DAAK,KAAKpD,EAAV,CAAL;AACAqD,YAAE,GAAG,6DAAK,KAAKrD,EAAV,CAAL;;AACA,cAAI5I,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AACvC;AACAG,eAAG,GAAG,KAAKxlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB,yDAArB,CAAf;AACAoZ,cAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;AACA5B,aAAC,GAAGglB,GAAG,GAAGT,EAAV;AACAlmB,eAAG,GAAG,8DAAM2B,CAAC,GAAG,KAAKR,CAAf,EAAkByL,EAAlB,EAAsB9J,EAAtB,EAA0B+J,EAA1B,EAA8BC,EAA9B,CAAN;AACA7M,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgB,CAAE,CAAF,GAAMsT,CAAC,CAACrT,CAAxB,CAAxB,CAAN;AACAqT,aAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,aAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,mBAAO4W,CAAP;AACD,WAVD,MAWK,IAAI/V,IAAI,CAACgK,GAAL,CAAS,KAAK2b,OAAL,GAAe,CAAxB,KAA8B,uDAAlC,EAAyC;AAC5C;AACAG,eAAG,GAAG,KAAKxlB,CAAL,GAAS,6DAAKyL,EAAL,EAAS9J,EAAT,EAAa+J,EAAb,EAAiBC,EAAjB,EAAqB,yDAArB,CAAf;AACAoZ,cAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;AACA5B,aAAC,GAAGukB,EAAE,GAAGS,GAAT;AAEA3mB,eAAG,GAAG,8DAAM2B,CAAC,GAAG,KAAKR,CAAf,EAAkByL,EAAlB,EAAsB9J,EAAtB,EAA0B+J,EAA1B,EAA8BC,EAA9B,CAAN;AACA7M,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgBsT,CAAC,CAACrT,CAAlB,CAAxB,CAAN;AACAqT,aAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,aAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,mBAAO4W,CAAP;AACD,WAXI,MAYA;AACH;AACAsP,cAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;AACA0jB,cAAE,GAAGpmB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgBsT,CAAC,CAACrT,CAAlB,CAAL;AACAR,cAAE,GAAG,2DAAG,KAAK5B,CAAR,EAAW,KAAKuF,CAAhB,EAAmB,KAAK8f,OAAxB,CAAL;AACAuB,iBAAK,GAAGlnB,IAAI,CAACuB,GAAL,CAAS6kB,EAAT,CAAR;AACAe,eAAG,GAAG,KAAKthB,CAAL,GAAS,KAAK+f,OAAd,GAAwBsB,KAA9B;AACA3oB,aAAC,GAAG,CAAC4oB,GAAD,GAAOA,GAAP,IAAc,IAAI,KAAKve,EAAvB,CAAJ;AACA0C,aAAC,GAAG,IAAI,KAAK1C,EAAT,IAAe,IAAIrK,CAAnB,IAAwB,KAAKonB,OAA7B,GAAuC,KAAKC,OAA5C,GAAsDsB,KAAtD,IAA+D,IAAI,KAAKte,EAAxE,CAAJ;AACAtG,aAAC,GAAG+iB,EAAE,GAAGnjB,EAAT;AACAklB,cAAE,GAAG9kB,CAAC,GAAG/D,CAAC,IAAI,IAAIA,CAAR,CAAD,GAAcyB,IAAI,CAAC2C,GAAL,CAASL,CAAT,EAAY,CAAZ,CAAd,GAA+B,CAAnC,GAAuCgJ,CAAC,IAAI,IAAI,IAAI/M,CAAZ,CAAD,GAAkByB,IAAI,CAAC2C,GAAL,CAASL,CAAT,EAAY,CAAZ,CAAlB,GAAmC,EAA/E;AACA+kB,aAAC,GAAG,IAAI9oB,CAAC,GAAG6oB,EAAJ,GAASA,EAAT,GAAc,CAAlB,GAAsB9kB,CAAC,GAAG8kB,EAAJ,GAASA,EAAT,GAAcA,EAAd,GAAmB,CAA7C;AACAjB,eAAG,GAAGnmB,IAAI,CAACkK,IAAL,CAAU,KAAKyb,OAAL,GAAe3lB,IAAI,CAACuB,GAAL,CAAS6lB,EAAT,CAAf,GAA8B,KAAKxB,OAAL,GAAe5lB,IAAI,CAACqB,GAAL,CAAS+lB,EAAT,CAAf,GAA8BF,KAAtE,CAAN;AACA9nB,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACqB,GAAL,CAAS+kB,EAAT,IAAepmB,IAAI,CAACqB,GAAL,CAAS+lB,EAAT,CAAf,GAA8BpnB,IAAI,CAACuB,GAAL,CAAS4kB,GAAT,CAAxC,CAAxB,CAAN;AACAmB,kBAAM,GAAGtnB,IAAI,CAACqB,GAAL,CAAS8kB,GAAT,CAAT;AACAhnB,eAAG,GAAGa,IAAI,CAAC2X,KAAL,CAAW,CAAC2P,MAAM,GAAG,KAAK1e,EAAL,GAAUye,CAAV,GAAc,KAAK1B,OAA7B,IAAwC3lB,IAAI,CAACsB,GAAL,CAAS6kB,GAAT,CAAnD,EAAkEmB,MAAM,IAAI,IAAI,KAAK1e,EAAb,CAAxE,CAAN;AACAmN,aAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,aAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,mBAAO4W,CAAP;AACD;AACF;AAEF;;AAEM,UAAIsO,KAAK,GAAG,CAAC,uBAAD,EAA0B,MAA1B,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC1Mf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWO,eAASvb,IAAT,GAAgB;AACrB,YAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,eAAKyD,EAAL,GAAU,6DAAK,KAAKnD,EAAV,CAAV;AACA,eAAK3G,EAAL,GAAU,6DAAK,KAAK2G,EAAV,CAAV;AACA,eAAKoD,EAAL,GAAU,6DAAK,KAAKpD,EAAV,CAAV;AACA,eAAKqD,EAAL,GAAU,6DAAK,KAAKrD,EAAV,CAAV;AACA,eAAK2e,GAAL,GAAW,KAAKjnB,CAAL,GAAS,6DAAK,KAAKyL,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC,KAAK/D,IAA9C,CAApB;AACD;AACF;AAED;;;;AAEO,eAAStJ,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB;;AAEA,YAAItT,CAAJ,EAAOC,CAAP;AACA,YAAI8kB,GAAG,GAAGzR,CAAC,CAACtT,CAAZ;AACA,YAAImJ,GAAG,GAAGmK,CAAC,CAACrT,CAAZ;AACA8kB,WAAG,GAAG,mEAAWA,GAAG,GAAG,KAAK5E,KAAtB,CAAN;;AAEA,YAAI,KAAKta,MAAT,EAAiB;AACf7F,WAAC,GAAG,KAAKnC,CAAL,GAASN,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAASqK,GAAT,IAAgB5L,IAAI,CAACqB,GAAL,CAASmmB,GAAT,CAA1B,CAAb;AACA9kB,WAAC,GAAG,KAAKpC,CAAL,IAAUN,IAAI,CAAC2X,KAAL,CAAW3X,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAAX,EAA0B5L,IAAI,CAACuB,GAAL,CAASimB,GAAT,CAA1B,IAA2C,KAAKtf,IAA1D,CAAJ;AACD,SAHD,MAIK;AACH;AACA,cAAIkD,MAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAb;AACA,cAAIa,MAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAb;AACA,cAAI6b,EAAE,GAAG,2DAAG,KAAKnnB,CAAR,EAAW,KAAKuF,CAAhB,EAAmBuF,MAAnB,CAAT;AACA,cAAIsc,EAAE,GAAG1nB,IAAI,CAACsB,GAAL,CAASsK,GAAT,IAAgB5L,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAAzB;AACA,cAAI+b,EAAE,GAAGH,GAAG,GAAGxnB,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAf;AACA,cAAIgc,GAAG,GAAGD,EAAE,GAAGA,EAAf;AACA,cAAIE,EAAE,GAAG,KAAKjf,EAAL,GAAU6D,MAAV,GAAmBA,MAAnB,IAA6B,IAAI,KAAK7D,EAAtC,CAAT;AACA,cAAIkD,EAAE,GAAG,KAAKxL,CAAL,GAAS,6DAAK,KAAKyL,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyCL,GAAzC,CAAlB;AAEAnJ,WAAC,GAAGglB,EAAE,GAAGE,EAAL,IAAW,IAAIC,GAAG,GAAGF,EAAN,IAAY,IAAI,CAAJ,GAAQ,CAAC,IAAIA,EAAJ,GAAS,IAAIG,EAAd,IAAoBD,GAApB,GAA0B,GAA9C,CAAf,CAAJ;AACAllB,WAAC,GAAGoJ,EAAE,GAAG,KAAKyb,GAAV,GAAgBE,EAAE,GAAGrc,MAAL,GAAcqB,MAAd,GAAuBmb,GAAvB,IAA8B,MAAM,CAAC,IAAIF,EAAJ,GAAS,IAAIG,EAAd,IAAoBD,GAApB,GAA0B,EAA9D,CAApB;AAGD;;AAED7R,SAAC,CAACtT,CAAF,GAAMA,CAAC,GAAG,KAAK8gB,EAAf;AACAxN,SAAC,CAACrT,CAAF,GAAMA,CAAC,GAAG,KAAK+gB,EAAf;AACA,eAAO1N,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA,YAAIhhB,CAAC,GAAGsT,CAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAnB;AACA,YAAIoC,CAAC,GAAGqT,CAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAnB;AACA,YAAIsL,GAAJ,EAAS4b,GAAT;;AAEA,YAAI,KAAKlf,MAAT,EAAiB;AACf,cAAIwf,EAAE,GAAGplB,CAAC,GAAG,KAAKwF,IAAlB;AACA0D,aAAG,GAAG5L,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACqB,GAAL,CAASymB,EAAT,IAAe9nB,IAAI,CAACuB,GAAL,CAASkB,CAAT,CAAzB,CAAN;AACA+kB,aAAG,GAAGxnB,IAAI,CAAC2X,KAAL,CAAW3X,IAAI,CAACsB,GAAL,CAASmB,CAAT,CAAX,EAAwBzC,IAAI,CAACuB,GAAL,CAASumB,EAAT,CAAxB,CAAN;AACD,SAJD,MAKK;AACH;AACA,cAAIC,GAAG,GAAG,KAAKR,GAAL,GAAW,KAAKjnB,CAAhB,GAAoBoC,CAA9B;AACA,cAAIslB,IAAI,GAAG,8DAAMD,GAAN,EAAW,KAAKhc,EAAhB,EAAoB,KAAK9J,EAAzB,EAA6B,KAAK+J,EAAlC,EAAsC,KAAKC,EAA3C,CAAX;;AACA,cAAIjM,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAASge,IAAT,IAAiB,yDAA1B,KAAsC,uDAA1C,EAAiD;AAC/CjS,aAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAX;AACA7M,aAAC,CAACrT,CAAF,GAAM,yDAAN;;AACA,gBAAIA,CAAC,GAAG,CAAR,EAAW;AACTqT,eAAC,CAACrT,CAAF,IAAO,CAAC,CAAR;AACD;;AACD,mBAAOqT,CAAP;AACD;;AACD,cAAIkS,GAAG,GAAG,2DAAG,KAAK3nB,CAAR,EAAW,KAAKuF,CAAhB,EAAmB7F,IAAI,CAACqB,GAAL,CAAS2mB,IAAT,CAAnB,CAAV;AAEA,cAAIE,GAAG,GAAGD,GAAG,GAAGA,GAAN,GAAYA,GAAZ,GAAkB,KAAK3nB,CAAvB,GAA2B,KAAKA,CAAhC,IAAqC,IAAI,KAAKsI,EAA9C,CAAV;AACA,cAAIuf,GAAG,GAAGnoB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS0mB,IAAT,CAAT,EAAyB,CAAzB,CAAV;AACA,cAAII,EAAE,GAAG3lB,CAAC,GAAG,KAAKnC,CAAT,GAAa2nB,GAAtB;AACA,cAAII,GAAG,GAAGD,EAAE,GAAGA,EAAf;AACAxc,aAAG,GAAGoc,IAAI,GAAGC,GAAG,GAAGjoB,IAAI,CAACsB,GAAL,CAAS0mB,IAAT,CAAN,GAAuBE,GAAvB,GAA6BE,EAA7B,GAAkCA,EAAlC,IAAwC,MAAM,CAAC,IAAI,IAAID,GAAT,IAAgBC,EAAhB,GAAqBA,EAArB,GAA0B,EAAxE,CAAb;AACAZ,aAAG,GAAGY,EAAE,IAAI,IAAIC,GAAG,IAAIF,GAAG,GAAG,CAAN,GAAU,CAAC,IAAI,IAAIA,GAAT,IAAgBA,GAAhB,GAAsBE,GAAtB,GAA4B,EAA1C,CAAX,CAAF,GAA8DroB,IAAI,CAACuB,GAAL,CAASymB,IAAT,CAApE;AAED;;AAEDjS,SAAC,CAACtT,CAAF,GAAM,mEAAW+kB,GAAG,GAAG,KAAK5E,KAAtB,CAAN;AACA7M,SAAC,CAACrT,CAAF,GAAM,mEAAWkJ,GAAX,CAAN;AACA,eAAOmK,CAAP;AAED;;AAEM,UAAIsO,KAAK,GAAG,CAAC,SAAD,EAAY,iBAAZ,EAA+B,MAA/B,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACtGf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;;AAMO,eAASvb,IAAT,GAAgB;AACrB;AACA,YAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,eAAK9H,EAAL,GAAU,8DAAM,KAAKqF,CAAX,EAAc7F,IAAI,CAACqB,GAAL,CAAS,KAAKqhB,MAAd,CAAd,EAAqC1iB,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAArC,CAAV;AACD;AACF;AAED;;;;AAEO,eAAS9jB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAID,CAAJ,EAAOC,CAAP;AACA;;;AAEA,YAAImjB,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;;AACA,YAAI,KAAKta,MAAT,EAAiB;AACf7F,WAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAASulB,IAAT,GAAgB7lB,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAA9B;AACAhgB,WAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAASN,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAT,GAAyBa,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAAvC;AACD,SAHD,MAIK;AACH,cAAI4C,EAAE,GAAG,8DAAM,KAAKzf,CAAX,EAAc7F,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAd,CAAT;AACAsD,WAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAAS,KAAKE,EAAd,GAAmBqlB,IAAjC;AACAnjB,WAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAASglB,EAAT,GAAc,GAAd,GAAoB,KAAK9kB,EAAvC;AACD;;AAEDuV,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA,YAAIrkB,GAAJ,EAASD,GAAT;;AAEA,YAAI,KAAKmJ,MAAT,EAAiB;AACflJ,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAc7M,CAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAZ,GAAiBN,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAAzC,CAAN;AACAvjB,aAAG,GAAGa,IAAI,CAACkK,IAAL,CAAW6L,CAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAZ,GAAiBN,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAA3B,CAAN;AACD,SAHD,MAIK;AACHvjB,aAAG,GAAG,+DAAO,KAAK0G,CAAZ,EAAe,IAAIkQ,CAAC,CAACrT,CAAN,GAAU,KAAKlC,EAAf,GAAoB,KAAKF,CAAxC,CAAN;AACAlB,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa7M,CAAC,CAACtT,CAAF,IAAO,KAAKnC,CAAL,GAAS,KAAKE,EAArB,CAAxB,CAAN;AACD;;AAEDuV,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,KAAD,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AChEf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,eAASvb,IAAT,GAAgB;AAErB,aAAKya,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKvb,IAAL,GAAY,KAAKA,IAAL,IAAa,CAAzB;AACA,aAAK0a,KAAL,GAAa,KAAKA,KAAL,IAAc,CAA3B;AACA,aAAKF,MAAL,GAAc,KAAKA,MAAL,IAAe,CAA7B;AACA,aAAK4F,KAAL,GAAa,KAAKA,KAAL,IAAc,uCAA3B;AAEA,aAAKC,EAAL,GAAUvoB,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAAV;AACD,O,CAED;AACA;;;AACO,eAAS9jB,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA,YAAImjB,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;AACA,YAAI4F,IAAI,GAAG,mEAAWrpB,GAAG,GAAG,KAAK+I,IAAtB,CAAX;AACA6N,SAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAW,KAAKjjB,CAAL,GAASulB,IAAT,GAAgB,KAAK0C,EAAtC;AACAxS,SAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAW,KAAKnjB,CAAL,GAASkoB,IAA1B;AACA,eAAOzS,CAAP;AACD,O,CAED;AACA;;;AACO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AAEzB,YAAItT,CAAC,GAAGsT,CAAC,CAACtT,CAAV;AACA,YAAIC,CAAC,GAAGqT,CAAC,CAACrT,CAAV;AAEAqT,SAAC,CAACtT,CAAF,GAAM,mEAAW,KAAKmgB,KAAL,GAAc,CAACngB,CAAC,GAAG,KAAK8gB,EAAV,KAAiB,KAAKjjB,CAAL,GAAS,KAAKioB,EAA/B,CAAzB,CAAN;AACAxS,SAAC,CAACrT,CAAF,GAAM,mEAAW,KAAKwF,IAAL,GAAa,CAACxF,CAAC,GAAG,KAAK+gB,EAAV,IAAiB,KAAKnjB,CAA9C,CAAN;AACA,eAAOyV,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,iBAAD,EAAoB,yBAApB,EAA+C,KAA/C,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC1Cf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWO,eAASvb,IAAT,GAAgB;AAErB;;AAEA;AACA,YAAI9I,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C;AACD;;AACD,aAAKA,IAAL,GAAY,KAAKA,IAAL,IAAa,KAAKxa,IAA9B;AACA,aAAKkD,IAAL,GAAY,KAAK/C,CAAL,GAAS,KAAK9H,CAA1B;AACA,aAAKsI,EAAL,GAAU,IAAI5I,IAAI,CAAC2C,GAAL,CAAS,KAAKwI,IAAd,EAAoB,CAApB,CAAd;AACA,aAAKtF,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,KAAKwH,EAAf,CAAT;AACA,aAAKmD,EAAL,GAAU,6DAAK,KAAKnD,EAAV,CAAV;AACA,aAAK3G,EAAL,GAAU,6DAAK,KAAK2G,EAAV,CAAV;AACA,aAAKoD,EAAL,GAAU,6DAAK,KAAKpD,EAAV,CAAV;AACA,aAAKqD,EAAL,GAAU,6DAAK,KAAKrD,EAAV,CAAV;AAEA,aAAKwC,MAAL,GAAcpL,IAAI,CAACqB,GAAL,CAAS,KAAK4G,IAAd,CAAd;AACA,aAAKwE,MAAL,GAAczM,IAAI,CAACuB,GAAL,CAAS,KAAK0G,IAAd,CAAd;AAEA,aAAK2c,GAAL,GAAW,8DAAM,KAAK/e,CAAX,EAAc,KAAKuF,MAAnB,EAA2B,KAAKqB,MAAhC,CAAX;AACA,aAAKsb,GAAL,GAAW,6DAAK,KAAKhc,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC,KAAKhE,IAA9C,CAAX;;AAEA,YAAIjI,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C,eAAKgG,EAAL,GAAU,KAAKrd,MAAf;AACD,SAFD,MAGK;AACH,eAAKA,MAAL,GAAcpL,IAAI,CAACqB,GAAL,CAAS,KAAKohB,IAAd,CAAd;AACA,eAAKhW,MAAL,GAAczM,IAAI,CAACuB,GAAL,CAAS,KAAKkhB,IAAd,CAAd;AACA,eAAKsC,GAAL,GAAW,8DAAM,KAAKlf,CAAX,EAAc,KAAKuF,MAAnB,EAA2B,KAAKqB,MAAhC,CAAX;AACA,eAAKic,GAAL,GAAW,6DAAK,KAAK3c,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC,KAAKwW,IAA9C,CAAX;AACA,eAAKgG,EAAL,GAAU,CAAC,KAAK7D,GAAL,GAAW,KAAKG,GAAjB,KAAyB,KAAK2D,GAAL,GAAW,KAAKX,GAAzC,CAAV;AACD;;AACD,aAAKY,CAAL,GAAS,KAAKZ,GAAL,GAAW,KAAKnD,GAAL,GAAW,KAAK6D,EAApC;AACA,aAAKlB,GAAL,GAAW,6DAAK,KAAKxb,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC,KAAK/D,IAA9C,CAAX;AACA,aAAKmd,EAAL,GAAU,KAAK/kB,CAAL,IAAU,KAAKqoB,CAAL,GAAS,KAAKpB,GAAxB,CAAV;AACD;AAED;;;;AAEO,eAAS3oB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAI6iB,GAAJ;AAEA;;;AAEA,YAAI,KAAKjd,MAAT,EAAiB;AACfid,aAAG,GAAG,KAAKjlB,CAAL,IAAU,KAAKqoB,CAAL,GAASxpB,GAAnB,CAAN;AACD,SAFD,MAGK;AACH,cAAI2M,EAAE,GAAG,6DAAK,KAAKC,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC9M,GAAzC,CAAT;AACAomB,aAAG,GAAG,KAAKjlB,CAAL,IAAU,KAAKqoB,CAAL,GAAS7c,EAAnB,CAAN;AACD;;AACD,YAAI0Z,KAAK,GAAG,KAAKiD,EAAL,GAAU,mEAAWrpB,GAAG,GAAG,KAAKwjB,KAAtB,CAAtB;AACA,YAAIngB,CAAC,GAAG,KAAK8gB,EAAL,GAAUgC,GAAG,GAAGvlB,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAxB;AACA,YAAI9iB,CAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAK4B,EAAf,GAAoBE,GAAG,GAAGvlB,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAlC;AACAzP,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,GAAM,KAAK2iB,EAAL,GAAUtP,CAAC,CAACrT,CAAZ,GAAgB,KAAK+gB,EAA3B;AACA,YAAIjX,GAAJ,EAAS+Y,GAAT,EAAcpmB,GAAd,EAAmBC,GAAnB;;AACA,YAAI,KAAKqpB,EAAL,IAAW,CAAf,EAAkB;AAChBlD,aAAG,GAAGvlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAN;AACA8J,aAAG,GAAG,CAAN;AACD,SAHD,MAIK;AACH+Y,aAAG,GAAG,CAACvlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAP;AACA8J,aAAG,GAAG,CAAC,CAAP;AACD;;AACD,YAAIgZ,KAAK,GAAG,CAAZ;;AACA,YAAID,GAAG,KAAK,CAAZ,EAAe;AACbC,eAAK,GAAGxlB,IAAI,CAAC2X,KAAL,CAAWnL,GAAG,GAAGuJ,CAAC,CAACtT,CAAnB,EAAsB+J,GAAG,GAAGuJ,CAAC,CAACrT,CAA9B,CAAR;AACD;;AAED,YAAI,KAAK4F,MAAT,EAAiB;AACflJ,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa4C,KAAK,GAAG,KAAKiD,EAArC,CAAN;AACAtpB,aAAG,GAAG,mEAAW,KAAKwpB,CAAL,GAASpD,GAAG,GAAG,KAAKjlB,CAA/B,CAAN;AACAyV,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD,SAND,MAOK;AACH,cAAIjK,EAAE,GAAG,KAAK6c,CAAL,GAASpD,GAAG,GAAG,KAAKjlB,CAA7B;AACAnB,aAAG,GAAG,8DAAM2M,EAAN,EAAU,KAAKC,EAAf,EAAmB,KAAK9J,EAAxB,EAA4B,KAAK+J,EAAjC,EAAqC,KAAKC,EAA1C,CAAN;AACA7M,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa4C,KAAK,GAAG,KAAKiD,EAArC,CAAN;AACA1S,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD;AAEF;;AAEM,UAAIsO,KAAK,GAAG,CAAC,mBAAD,EAAsB,MAAtB,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC/Gf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAAA;AACA;;;AAWO,eAASvb,IAAT,GAAgB;AACrB,YAAI,CAAC,KAAKqb,MAAN,KAAiB/J,KAAK,CAAC,KAAKxR,EAAN,CAAL,IAAkB,KAAKA,EAAL,IAAW,CAA9C,CAAJ,EAAsD;AACpD,gBAAM,IAAIggB,KAAJ,CAAU,oIAAV,CAAN;AACD;;AACD,YAAI,KAAKzE,MAAT,EAAiB;AACf;AACA,qEAAMrb,IAAN,CAAW8S,KAAX,CAAiB,IAAjB;;AACA,eAAKhd,OAAL,GAAe,2DAAMA,OAArB;AACA,eAAKC,OAAL,GAAe,2DAAMA,OAArB;AACD;;AAED,aAAK0kB,EAAL,GAAU,KAAKA,EAAL,KAAY/Z,SAAZ,GAAwB,KAAK+Z,EAA7B,GAAkC,CAA5C;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,KAAYja,SAAZ,GAAwB,KAAKia,EAA7B,GAAkC,CAA5C;AACA,aAAKb,KAAL,GAAa,KAAKA,KAAL,KAAepZ,SAAf,GAA2B,KAAKoZ,KAAhC,GAAwC,CAArD;AACA,aAAK1a,IAAL,GAAY,KAAKA,IAAL,KAAcsB,SAAd,GAA0B,KAAKtB,IAA/B,GAAsC,CAAlD;AAEA,aAAK2gB,GAAL,GAAW,EAAX;AACA,aAAKC,GAAL,GAAW,EAAX;AACA,aAAKC,GAAL,GAAW,EAAX;AACA,aAAKC,GAAL,GAAW,EAAX;AAEA,YAAIC,CAAC,GAAG,KAAKrgB,EAAL,IAAW,IAAI5I,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAnB,CAAf,CAAR;AACA,YAAI3C,CAAC,GAAGgjB,CAAC,IAAI,IAAIA,CAAR,CAAT;AACA,YAAIC,EAAE,GAAGjjB,CAAT;AAEA,aAAK4iB,GAAL,CAAS,CAAT,IAAc5iB,CAAC,IAAI,IAAIA,CAAC,IAAI,CAAC,CAAD,GAAK,CAAL,GAASA,CAAC,IAAI,CAAC,CAAD,GAAKA,CAAC,IAAI,MAAM,EAAN,GAAWA,CAAC,IAAI,KAAK,EAAL,GAAUA,CAAC,IAAI,CAAC,IAAD,GAAQ,GAAZ,CAAf,CAAhB,CAAV,CAAd,CAAT,CAAf;AACA,aAAK6iB,GAAL,CAAS,CAAT,IAAc7iB,CAAC,IAAI,CAAC,CAAD,GAAKA,CAAC,IAAK,IAAI,CAAJ,GAAQA,CAAC,IAAK,IAAI,CAAJ,GAAQA,CAAC,IAAI,CAAC,EAAD,GAAM,EAAN,GAAWA,CAAC,IAAI,KAAK,EAAL,GAAUA,CAAC,IAAI,OAAO,IAAX,CAAf,CAAhB,CAAd,CAAd,CAAV,CAAf;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK4iB,GAAL,CAAS,CAAT,IAAcK,EAAE,IAAI,IAAI,CAAJ,GAAQjjB,CAAC,IAAI,CAAC,CAAD,GAAK,CAAL,GAASA,CAAC,IAAI,CAAC,GAAD,GAAO,EAAP,GAAYA,CAAC,IAAI,OAAO,GAAP,GAAaA,CAAC,IAAI,OAAO,GAAX,CAAlB,CAAjB,CAAd,CAAb,CAAhB;AACA,aAAK6iB,GAAL,CAAS,CAAT,IAAcI,EAAE,IAAI,IAAI,CAAJ,GAAQjjB,CAAC,IAAI,CAAC,EAAD,GAAM,EAAN,GAAWA,CAAC,IAAK,CAAC,EAAD,GAAM,CAAN,GAAUA,CAAC,IAAI,MAAM,GAAN,GAAYA,CAAC,IAAI,CAAC,IAAD,GAAQ,GAAZ,CAAjB,CAAhB,CAAhB,CAAb,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK4iB,GAAL,CAAS,CAAT,IAAcK,EAAE,IAAI,KAAK,EAAL,GAAUjjB,CAAC,IAAI,CAAC,GAAD,GAAO,EAAP,GAAYA,CAAC,IAAI,CAAC,IAAD,GAAQ,GAAR,GAAcA,CAAC,IAAI,QAAQ,IAAZ,CAAnB,CAAjB,CAAf,CAAhB;AACA,aAAK6iB,GAAL,CAAS,CAAT,IAAcI,EAAE,IAAI,CAAC,EAAD,GAAM,EAAN,GAAWjjB,CAAC,IAAI,KAAK,EAAL,GAAUA,CAAC,IAAI,IAAI,CAAJ,GAAQA,CAAC,IAAI,CAAC,KAAD,GAAS,IAAb,CAAb,CAAf,CAAhB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK4iB,GAAL,CAAS,CAAT,IAAcK,EAAE,IAAI,OAAO,GAAP,GAAajjB,CAAC,IAAI,CAAC,GAAD,GAAO,EAAP,GAAYA,CAAC,IAAI,CAAC,MAAD,GAAU,KAAd,CAAjB,CAAlB,CAAhB;AACA,aAAK6iB,GAAL,CAAS,CAAT,IAAcI,EAAE,IAAI,OAAO,GAAP,GAAajjB,CAAC,IAAI,CAAC,EAAD,GAAM,CAAN,GAAUA,CAAC,IAAK,CAAC,KAAD,GAAS,KAAd,CAAf,CAAlB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK4iB,GAAL,CAAS,CAAT,IAAcK,EAAE,IAAI,OAAO,GAAP,GAAajjB,CAAC,IAAI,CAAC,MAAD,GAAU,IAAd,CAAlB,CAAhB;AACA,aAAK6iB,GAAL,CAAS,CAAT,IAAcI,EAAE,IAAI,CAAC,GAAD,GAAO,GAAP,GAAajjB,CAAC,IAAI,SAAS,KAAb,CAAlB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK4iB,GAAL,CAAS,CAAT,IAAcK,EAAE,IAAI,SAAS,KAAb,CAAhB;AACA,aAAKJ,GAAL,CAAS,CAAT,IAAcI,EAAE,IAAI,SAAS,MAAb,CAAhB;AAEAA,UAAE,GAAGlpB,IAAI,CAAC2C,GAAL,CAASsD,CAAT,EAAY,CAAZ,CAAL;AACA,aAAKkjB,EAAL,GAAU,KAAK3oB,EAAL,IAAW,IAAIyF,CAAf,KAAqB,IAAIijB,EAAE,IAAI,IAAI,CAAJ,GAAQA,EAAE,IAAI,IAAI,EAAJ,GAASA,EAAE,GAAG,GAAlB,CAAd,CAA3B,CAAV;AAEA,aAAKH,GAAL,CAAS,CAAT,IAAc9iB,CAAC,IAAI,CAAC,GAAD,GAAOA,CAAC,IAAK,IAAI,CAAJ,GAAQA,CAAC,IAAI,CAAC,EAAD,GAAM,EAAN,GAAWA,CAAC,IAAK,IAAI,GAAJ,GAAUA,CAAC,IAAI,KAAK,GAAL,GAAWA,CAAC,IAAI,CAAC,KAAD,GAAS,MAAb,CAAhB,CAAhB,CAAhB,CAAd,CAAZ,CAAf;AACA,aAAK+iB,GAAL,CAAS,CAAT,IAAc/iB,CAAC,IAAI,MAAMA,CAAC,IAAI,CAAC,CAAD,GAAK,CAAL,GAASA,CAAC,IAAI,IAAI,EAAJ,GAASA,CAAC,IAAI,KAAK,GAAL,GAAWA,CAAC,IAAI,CAAC,GAAD,GAAO,GAAP,GAAaA,CAAC,IAAI,OAAO,KAAX,CAAlB,CAAhB,CAAd,CAAd,CAAX,CAAf;AAEA,aAAK8iB,GAAL,CAAS,CAAT,IAAcG,EAAE,IAAI,CAAC,CAAD,GAAK,EAAL,GAAUjjB,CAAC,IAAI,CAAC,CAAD,GAAK,EAAL,GAAUA,CAAC,IAAI,MAAM,IAAN,GAAaA,CAAC,IAAI,CAAC,EAAD,GAAM,GAAN,GAAYA,CAAC,IAAI,UAAU,OAAd,CAAjB,CAAlB,CAAf,CAAf,CAAhB;AACA,aAAK+iB,GAAL,CAAS,CAAT,IAAcE,EAAE,IAAI,KAAK,EAAL,GAAUjjB,CAAC,IAAI,CAAC,CAAD,GAAK,CAAL,GAASA,CAAC,IAAI,MAAM,IAAN,GAAaA,CAAC,IAAI,MAAM,GAAN,GAAYA,CAAC,IAAI,CAAC,OAAD,GAAW,OAAf,CAAjB,CAAlB,CAAd,CAAf,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK8iB,GAAL,CAAS,CAAT,IAAcG,EAAE,IAAI,CAAC,EAAD,GAAM,GAAN,GAAYjjB,CAAC,IAAI,KAAK,GAAL,GAAWA,CAAC,IAAI,MAAM,IAAN,GAAaA,CAAC,IAAI,CAAC,IAAD,GAAQ,KAAZ,CAAlB,CAAhB,CAAjB,CAAhB;AACA,aAAK+iB,GAAL,CAAS,CAAT,IAAcE,EAAE,IAAI,KAAK,GAAL,GAAWjjB,CAAC,IAAI,CAAC,GAAD,GAAO,GAAP,GAAaA,CAAC,IAAI,QAAQ,KAAR,GAAgBA,CAAC,IAAI,SAAS,MAAb,CAArB,CAAlB,CAAhB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK8iB,GAAL,CAAS,CAAT,IAAcG,EAAE,IAAI,CAAC,IAAD,GAAQ,MAAR,GAAiBjjB,CAAC,IAAI,KAAK,GAAL,GAAWA,CAAC,IAAI,SAAS,OAAb,CAAhB,CAAtB,CAAhB;AACA,aAAK+iB,GAAL,CAAS,CAAT,IAAcE,EAAE,IAAI,QAAQ,MAAR,GAAiBjjB,CAAC,IAAI,CAAC,GAAD,GAAO,GAAP,GAAaA,CAAC,IAAI,UAAU,OAAd,CAAlB,CAAtB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK8iB,GAAL,CAAS,CAAT,IAAcG,EAAE,IAAI,CAAC,IAAD,GAAQ,MAAR,GAAiBjjB,CAAC,IAAI,SAAS,OAAb,CAAtB,CAAhB;AACA,aAAK+iB,GAAL,CAAS,CAAT,IAAcE,EAAE,IAAI,QAAQ,KAAR,GAAgBjjB,CAAC,IAAI,CAAC,OAAD,GAAW,OAAf,CAArB,CAAhB;AAEAijB,UAAE,GAAGA,EAAE,GAAGjjB,CAAV;AACA,aAAK8iB,GAAL,CAAS,CAAT,IAAcG,EAAE,IAAI,CAAC,QAAD,GAAY,SAAhB,CAAhB;AACA,aAAKF,GAAL,CAAS,CAAT,IAAcE,EAAE,IAAI,YAAY,SAAhB,CAAhB;AAEA,YAAIvqB,CAAC,GAAG,6DAAK,KAAKmqB,GAAV,EAAe,KAAK5gB,IAApB,CAAR;AACA,aAAKkhB,EAAL,GAAU,CAAC,KAAKD,EAAN,IAAYxqB,CAAC,GAAG,8DAAM,KAAKqqB,GAAX,EAAgB,IAAIrqB,CAApB,CAAhB,CAAV;AACD;;AAEM,eAASC,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAIsT,EAAE,GAAG,mEAAWtT,CAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAtB,CAAT;AACA,YAAI0G,EAAE,GAAGvT,CAAC,CAACrT,CAAX;AAEA4mB,UAAE,GAAG,6DAAK,KAAKR,GAAV,EAAeQ,EAAf,CAAL;AACA,YAAIC,MAAM,GAAGvpB,IAAI,CAACqB,GAAL,CAASioB,EAAT,CAAb;AACA,YAAIE,MAAM,GAAGxpB,IAAI,CAACuB,GAAL,CAAS+nB,EAAT,CAAb;AACA,YAAIG,MAAM,GAAGzpB,IAAI,CAACqB,GAAL,CAASgoB,EAAT,CAAb;AACA,YAAIK,MAAM,GAAG1pB,IAAI,CAACuB,GAAL,CAAS8nB,EAAT,CAAb;AAEAC,UAAE,GAAGtpB,IAAI,CAAC2X,KAAL,CAAW4R,MAAX,EAAmBG,MAAM,GAAGF,MAA5B,CAAL;AACAH,UAAE,GAAGrpB,IAAI,CAAC2X,KAAL,CAAW8R,MAAM,GAAGD,MAApB,EAA4B,8DAAMD,MAAN,EAAcC,MAAM,GAAGE,MAAvB,CAA5B,CAAL;AACAL,UAAE,GAAG,+DAAOrpB,IAAI,CAACsB,GAAL,CAAS+nB,EAAT,CAAP,CAAL;AAEA,YAAIlC,GAAG,GAAG,oEAAY,KAAK6B,GAAjB,EAAsB,IAAIM,EAA1B,EAA8B,IAAID,EAAlC,CAAV;AAEAC,UAAE,GAAGA,EAAE,GAAGnC,GAAG,CAAC,CAAD,CAAb;AACAkC,UAAE,GAAGA,EAAE,GAAGlC,GAAG,CAAC,CAAD,CAAb;AAEA,YAAI1kB,CAAJ;AACA,YAAIC,CAAJ;;AAEA,YAAI1C,IAAI,CAACgK,GAAL,CAASqf,EAAT,KAAgB,cAApB,EAAoC;AAClC5mB,WAAC,GAAG,KAAKnC,CAAL,IAAU,KAAK6oB,EAAL,GAAUE,EAApB,IAA0B,KAAK9F,EAAnC;AACA7gB,WAAC,GAAG,KAAKpC,CAAL,IAAU,KAAK6oB,EAAL,GAAUG,EAAV,GAAe,KAAKF,EAA9B,IAAoC,KAAK3F,EAA7C;AACD,SAHD,MAIK;AACHhhB,WAAC,GAAG8T,QAAJ;AACA7T,WAAC,GAAG6T,QAAJ;AACD;;AAEDR,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AAEA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIsT,EAAE,GAAG,CAACtT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,KAAmB,IAAI,KAAKjjB,CAA5B,CAAT;AACA,YAAIgpB,EAAE,GAAG,CAACvT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,KAAmB,IAAI,KAAKnjB,CAA5B,CAAT;AAEAgpB,UAAE,GAAG,CAACA,EAAE,GAAG,KAAKF,EAAX,IAAiB,KAAKD,EAA3B;AACAE,UAAE,GAAGA,EAAE,GAAG,KAAKF,EAAf;AAEA,YAAI/pB,GAAJ;AACA,YAAID,GAAJ;;AAEA,YAAIa,IAAI,CAACgK,GAAL,CAASqf,EAAT,KAAgB,cAApB,EAAoC;AAClC,cAAIlC,GAAG,GAAG,oEAAY,KAAK4B,GAAjB,EAAsB,IAAIO,EAA1B,EAA8B,IAAID,EAAlC,CAAV;AAEAC,YAAE,GAAGA,EAAE,GAAGnC,GAAG,CAAC,CAAD,CAAb;AACAkC,YAAE,GAAGA,EAAE,GAAGlC,GAAG,CAAC,CAAD,CAAb;AACAkC,YAAE,GAAGrpB,IAAI,CAAC2M,IAAL,CAAU,6DAAK0c,EAAL,CAAV,CAAL;AAEA,cAAIE,MAAM,GAAGvpB,IAAI,CAACqB,GAAL,CAASioB,EAAT,CAAb;AACA,cAAIE,MAAM,GAAGxpB,IAAI,CAACuB,GAAL,CAAS+nB,EAAT,CAAb;AACA,cAAIG,MAAM,GAAGzpB,IAAI,CAACqB,GAAL,CAASgoB,EAAT,CAAb;AACA,cAAIK,MAAM,GAAG1pB,IAAI,CAACuB,GAAL,CAAS8nB,EAAT,CAAb;AAEAC,YAAE,GAAGtpB,IAAI,CAAC2X,KAAL,CAAW4R,MAAM,GAAGG,MAApB,EAA4B,8DAAMD,MAAN,EAAcC,MAAM,GAAGF,MAAvB,CAA5B,CAAL;AACAH,YAAE,GAAGrpB,IAAI,CAAC2X,KAAL,CAAW8R,MAAX,EAAmBC,MAAM,GAAGF,MAA5B,CAAL;AAEApqB,aAAG,GAAG,mEAAWiqB,EAAE,GAAG,KAAKzG,KAArB,CAAN;AACAzjB,aAAG,GAAG,6DAAK,KAAK0pB,GAAV,EAAeS,EAAf,CAAN;AACD,SAjBD,MAkBK;AACHlqB,aAAG,GAAGmX,QAAN;AACApX,aAAG,GAAGoX,QAAN;AACD;;AAEDR,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AAEA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,8BAAD,EAAiC,8BAAjC,EAAiE,QAAjE,EAA2E,qBAA3E,EAAkG,qBAAlG,EAAyH,OAAzH,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACtKf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACA,UAAI3W,QAAQ,GAAG,EAAf;;AAGO,eAAS5E,IAAT,GAAgB;AACrB,YAAIiF,IAAI,GAAG/N,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAX;AACA,YAAI4F,IAAI,GAAG9N,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAX;AACA4F,YAAI,IAAIA,IAAR;AACA,aAAKya,EAAL,GAAUvoB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAnB,KAA0B,IAAI,KAAKA,EAAL,GAAUmF,IAAV,GAAiBA,IAA/C,CAAV;AACA,aAAKlN,CAAL,GAASb,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAUkF,IAAV,GAAiBA,IAAjB,IAAyB,IAAI,KAAKlF,EAAlC,CAAd,CAAT;AACA,aAAK+gB,KAAL,GAAa3pB,IAAI,CAACkK,IAAL,CAAU6D,IAAI,GAAG,KAAKlN,CAAtB,CAAb;AACA,aAAK+oB,MAAL,GAAc,MAAM,KAAK/oB,CAAX,GAAe,KAAKgF,CAAlC;AACA,aAAKgkB,CAAL,GAAS7pB,IAAI,CAACsB,GAAL,CAAS,MAAM,KAAKqoB,KAAX,GAAmB,wDAA5B,KAAuC3pB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS,MAAM,KAAK4G,IAAX,GAAkB,wDAA3B,CAAT,EAA6C,KAAKrH,CAAlD,IAAuD,6DAAK,KAAKgF,CAAL,GAASkI,IAAd,EAAoB,KAAK6b,MAAzB,CAA9F,CAAT;AACD;;AAEM,eAAShrB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEAqT,SAAC,CAACrT,CAAF,GAAM,IAAI1C,IAAI,CAAC2M,IAAL,CAAU,KAAKkd,CAAL,GAAS7pB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS,MAAMnC,GAAN,GAAY,wDAArB,CAAT,EAAuC,KAAK0B,CAA5C,CAAT,GAA0D,6DAAK,KAAKgF,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAd,EAA6B,KAAKyqB,MAAlC,CAApE,CAAJ,GAAqH,yDAA3H;AACA7T,SAAC,CAACtT,CAAF,GAAM,KAAK5B,CAAL,GAASzB,GAAf;AACA,eAAO2W,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI+T,OAAO,GAAG,KAAd;AACA,YAAI1qB,GAAG,GAAG2W,CAAC,CAACtT,CAAF,GAAM,KAAK5B,CAArB;AACA,YAAI1B,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAIkH,GAAG,GAAG5J,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS,MAAMnC,GAAN,GAAY,wDAArB,IAA+B,KAAK0qB,CAA7C,EAAgD,IAAI,KAAKhpB,CAAzD,CAAV;;AACA,aAAK,IAAI4C,CAAC,GAAGiK,QAAb,EAAuBjK,CAAC,GAAG,CAA3B,EAA8B,EAAEA,CAAhC,EAAmC;AACjCtE,aAAG,GAAG,IAAIa,IAAI,CAAC2M,IAAL,CAAU/C,GAAG,GAAG,6DAAK,KAAK/D,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAd,EAA6B,CAAE,GAAF,GAAQ,KAAKmD,CAA1C,CAAhB,CAAJ,GAAoE,yDAA1E;;AACA,cAAI7F,IAAI,CAACgK,GAAL,CAAS7K,GAAG,GAAG4W,CAAC,CAACrT,CAAjB,IAAsBonB,OAA1B,EAAmC;AACjC;AACD;;AACD/T,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACD;AACD;;;AACA,YAAI,CAACsE,CAAL,EAAQ;AACN,iBAAO,IAAP;AACD;;AACDsS,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,OAAD,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC9Cf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKO,eAASvb,IAAT,GAAgB;AACnB,aAAK2L,IAAL,GAAY,SAAZ;AAEH;;AAEM,eAAS7V,OAAT,CAAiBmX,CAAjB,EAAoB;AACvB,YAAI9M,KAAK,GAAG,yEAAqB8M,CAArB,EAAwB,KAAKnN,EAA7B,EAAiC,KAAKtI,CAAtC,CAAZ;AACA,eAAO2I,KAAP;AACH;;AAEM,eAASpK,OAAT,CAAiBkX,CAAjB,EAAoB;AACvB,YAAI9M,KAAK,GAAG,yEAAqB8M,CAArB,EAAwB,KAAKnN,EAA7B,EAAiC,KAAKtI,CAAtC,EAAyC,KAAK8H,CAA9C,CAAZ;AACA,eAAOa,KAAP;AACH;;AAEM,UAAIob,KAAK,GAAG,CAAC,YAAD,EAAe,YAAf,EAA6B,SAA7B,EAAwC,SAAxC,CAAZ;AACQ;;AAAA;AACXvb,YAAI,EAAEA,IADK;AAEXlK,eAAO,EAAEA,OAFE;AAGXC,eAAO,EAAEA,OAHE;AAIXwlB,aAAK,EAAEA;AAJI;;;;;;;;;;;;;;;;ACrBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;AAMO,eAASvb,IAAT,GAAgB;AAErB;;AAEA,aAAKihB,OAAL,GAAe/pB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAf;AACA,aAAK8hB,OAAL,GAAehqB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAf,CALqB,CAMrB;;AACA,aAAK+hB,aAAL,GAAqB,OAAO,KAAK3pB,CAAjC;AACA,aAAKioB,EAAL,GAAU,CAAV;AACD;AAED;;;;AAEO,eAAS3pB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3K,MAAJ,EAAYqB,MAAZ;AAAoB;;AACpB,YAAIoZ,IAAJ;AAAU;;AACV,YAAIqE,MAAJ;AAAY;;AACZ,YAAIC,GAAJ;AAAS;;AACT,YAAIxB,CAAJ;AACA,YAAIlmB,CAAJ,EAAOC,CAAP;AACA,YAAItD,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA;;;AAEAmjB,YAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAP;AAEAxX,cAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAT;AACAsN,cAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAT;AAEA+qB,cAAM,GAAGlqB,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAT;AACA8C,SAAC,GAAG,KAAKoB,OAAL,GAAe3e,MAAf,GAAwB,KAAK4e,OAAL,GAAevd,MAAf,GAAwByd,MAApD;AACAC,WAAG,GAAG,CAAN;;AACA,YAAKxB,CAAC,GAAG,CAAL,IAAY3oB,IAAI,CAACgK,GAAL,CAAS2e,CAAT,KAAe,uDAA/B,EAAuC;AACrClmB,WAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAAS6pB,GAAT,GAAe1d,MAAf,GAAwBzM,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAAxB,GAAyC8C,CAAvD;AACAjmB,WAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAAS6pB,GAAT,IAAgB,KAAKH,OAAL,GAAe5e,MAAf,GAAwB,KAAK2e,OAAL,GAAetd,MAAf,GAAwByd,MAAhE,IAA0EvB,CAAxF;AACD,SAHD,MAIK;AAEH;AACA;AACA;AACA;AACA;AACA;AAEAlmB,WAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAK0G,aAAL,GAAqBxd,MAArB,GAA8BzM,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA5C;AACAnjB,WAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKwG,aAAL,IAAsB,KAAKD,OAAL,GAAe5e,MAAf,GAAwB,KAAK2e,OAAL,GAAetd,MAAf,GAAwByd,MAAtE,CAAd;AAED;;AACDnU,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIsP,EAAJ;AAAQ;;AACR,YAAI+E,IAAJ,EAAUC,IAAV;AACA,YAAIjF,CAAJ;AACA,YAAIhmB,GAAJ,EAASD,GAAT;AAEA;;;AAEA4W,SAAC,CAACtT,CAAF,GAAM,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,IAAkB,KAAKjjB,CAA7B;AACAyV,SAAC,CAACrT,CAAF,GAAM,CAACqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,IAAkB,KAAKnjB,CAA7B;AAEAyV,SAAC,CAACtT,CAAF,IAAO,KAAKjC,EAAZ;AACAuV,SAAC,CAACrT,CAAF,IAAO,KAAKlC,EAAZ;;AAEA,YAAK6kB,EAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAV,EAA6C;AAC3C0iB,WAAC,GAAGplB,IAAI,CAAC2X,KAAL,CAAW0N,EAAX,EAAe,KAAKkD,EAApB,CAAJ;AACA6B,cAAI,GAAGpqB,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAAP;AACAiF,cAAI,GAAGrqB,IAAI,CAACuB,GAAL,CAAS6jB,CAAT,CAAP;AAEAjmB,aAAG,GAAG,8DAAMkrB,IAAI,GAAG,KAAKN,OAAZ,GAAuBhU,CAAC,CAACrT,CAAF,GAAM0nB,IAAN,GAAa,KAAKJ,OAAnB,GAA8B3E,EAA1D,CAAN;AACAjmB,aAAG,GAAGY,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAF,GAAM2nB,IAAjB,EAAuB/E,EAAE,GAAG,KAAK2E,OAAV,GAAoBK,IAApB,GAA2BtU,CAAC,CAACrT,CAAF,GAAM,KAAKqnB,OAAX,GAAqBK,IAAvE,CAAN;AACAhrB,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAaxjB,GAAxB,CAAN;AACD,SARD,MASK;AACHD,aAAG,GAAG,KAAKwqB,KAAX;AACAvqB,aAAG,GAAG,CAAN;AACD;;AAED2W,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,MAAD,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AClGf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,eAASvb,IAAT,GAAgB;AACrB,aAAKxI,CAAL,GAAS,WAAT;AACA,aAAKsI,EAAL,GAAU,iBAAV;AACA,aAAK/C,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,KAAKwH,EAAf,CAAT;;AACA,YAAI,CAAC,KAAKV,IAAV,EAAgB;AACd,eAAKA,IAAL,GAAY,iBAAZ;AACD;;AACD,YAAI,CAAC,KAAK0a,KAAV,EAAiB;AACf,eAAKA,KAAL,GAAa,qBAAqB,iBAAlC;AACD;AACD;;;AACA,YAAI,CAAC,KAAKpiB,EAAV,EAAc;AACZ,eAAKA,EAAL,GAAU,MAAV;AACD;;AACD,aAAK8pB,GAAL,GAAW,iBAAX;AAA8B;;AAC9B,aAAKC,GAAL,GAAW,IAAI,KAAKD,GAApB;AACA,aAAKE,GAAL,GAAW,KAAKtiB,IAAhB;AACA,aAAK8D,EAAL,GAAU,KAAKpD,EAAf;AACA,aAAK/C,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,KAAK4K,EAAf,CAAT;AACA,aAAKye,IAAL,GAAYzqB,IAAI,CAACoB,IAAL,CAAU,IAAK,KAAK4K,EAAL,GAAUhM,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACuB,GAAL,CAAS,KAAKipB,GAAd,CAAT,EAA6B,CAA7B,CAAX,IAA+C,IAAI,KAAKxe,EAAxD,CAAd,CAAZ;AACA,aAAK0e,EAAL,GAAU,gBAAV;AACA,aAAKC,EAAL,GAAU3qB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACqB,GAAL,CAAS,KAAKmpB,GAAd,IAAqB,KAAKC,IAApC,CAAV;AACA,aAAK9B,CAAL,GAAS3oB,IAAI,CAAC2C,GAAL,CAAS,CAAC,IAAI,KAAKkD,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS,KAAKmpB,GAAd,CAAd,KAAqC,IAAI,KAAK3kB,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS,KAAKmpB,GAAd,CAAlD,CAAT,EAAgF,KAAKC,IAAL,GAAY,KAAK5kB,CAAjB,GAAqB,CAArG,CAAT;AACA,aAAK8H,CAAL,GAAS3N,IAAI,CAACsB,GAAL,CAAS,KAAKqpB,EAAL,GAAU,CAAV,GAAc,KAAKL,GAA5B,IAAmCtqB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS,KAAKkpB,GAAL,GAAW,CAAX,GAAe,KAAKF,GAA7B,CAAT,EAA4C,KAAKG,IAAjD,CAAnC,GAA4F,KAAK9B,CAA1G;AACA,aAAKiC,EAAL,GAAU,KAAKpqB,EAAf;AACA,aAAKqqB,EAAL,GAAU,KAAKvqB,CAAL,GAASN,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAK4K,EAAnB,CAAT,IAAmC,IAAI,KAAKA,EAAL,GAAUhM,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACqB,GAAL,CAAS,KAAKmpB,GAAd,CAAT,EAA6B,CAA7B,CAAjD,CAAV;AACA,aAAKM,EAAL,GAAU,gBAAV;AACA,aAAK7kB,CAAL,GAASjG,IAAI,CAACqB,GAAL,CAAS,KAAKypB,EAAd,CAAT;AACA,aAAKC,GAAL,GAAW,KAAKH,EAAL,GAAU,KAAKC,EAAf,GAAoB7qB,IAAI,CAACsB,GAAL,CAAS,KAAKwpB,EAAd,CAA/B;AACA,aAAKE,EAAL,GAAU,KAAKT,GAAL,GAAW,KAAKG,EAA1B;AACD;AAED;;AACA;;AACA;;;AACO,eAAS9rB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAIkV,GAAJ,EAASC,CAAT,EAAYC,MAAZ,EAAoBtd,CAApB,EAAuBud,CAAvB,EAA0BC,GAA1B,EAA+BC,EAA/B;AACA,YAAIlsB,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAI6oB,SAAS,GAAG,mEAAWnsB,GAAG,GAAG,KAAKwjB,KAAtB,CAAhB;AACA;;AACAqI,WAAG,GAAGjrB,IAAI,CAAC2C,GAAL,CAAU,CAAC,IAAI,KAAKkD,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAd,KAAgC,IAAI,KAAK0G,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAA7C,CAAV,EAAyE,KAAKsrB,IAAL,GAAY,KAAK5kB,CAAjB,GAAqB,CAA9F,CAAN;AACAqlB,SAAC,GAAG,KAAKlrB,IAAI,CAAC2M,IAAL,CAAU,KAAKgB,CAAL,GAAS3N,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAASnC,GAAG,GAAG,CAAN,GAAU,KAAKmrB,GAAxB,CAAT,EAAuC,KAAKG,IAA5C,CAAT,GAA6DQ,GAAvE,IAA8E,KAAKX,GAAxF,CAAJ;AACAa,cAAM,GAAG,CAACI,SAAD,GAAa,KAAKd,IAA3B;AACA5c,SAAC,GAAG7N,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS,KAAKypB,EAAd,IAAoBhrB,IAAI,CAACqB,GAAL,CAAS6pB,CAAT,CAApB,GAAkClrB,IAAI,CAACqB,GAAL,CAAS,KAAK2pB,EAAd,IAAoBhrB,IAAI,CAACuB,GAAL,CAAS2pB,CAAT,CAApB,GAAkClrB,IAAI,CAACuB,GAAL,CAAS4pB,MAAT,CAA9E,CAAJ;AACAC,SAAC,GAAGprB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS2pB,CAAT,IAAclrB,IAAI,CAACqB,GAAL,CAAS8pB,MAAT,CAAd,GAAiCnrB,IAAI,CAACuB,GAAL,CAASsM,CAAT,CAA3C,CAAJ;AACAwd,WAAG,GAAG,KAAKplB,CAAL,GAASmlB,CAAf;AACAE,UAAE,GAAG,KAAKP,GAAL,GAAW/qB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS,KAAKwpB,EAAL,GAAU,CAAV,GAAc,KAAKR,GAA5B,CAAT,EAA2C,KAAKrkB,CAAhD,CAAX,GAAgEjG,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAASuM,CAAC,GAAG,CAAJ,GAAQ,KAAKyc,GAAtB,CAAT,EAAqC,KAAKrkB,CAA1C,CAArE;AACA8P,SAAC,CAACrT,CAAF,GAAM4oB,EAAE,GAAGtrB,IAAI,CAACuB,GAAL,CAAS8pB,GAAT,CAAL,GAAqB,CAA3B;AACAtV,SAAC,CAACtT,CAAF,GAAM6oB,EAAE,GAAGtrB,IAAI,CAACqB,GAAL,CAASgqB,GAAT,CAAL,GAAqB,CAA3B;;AAEA,YAAI,CAAC,KAAKG,KAAV,EAAiB;AACfzV,WAAC,CAACrT,CAAF,IAAO,CAAC,CAAR;AACAqT,WAAC,CAACtT,CAAF,IAAO,CAAC,CAAR;AACD;;AACD,eAAQsT,CAAR;AACD;AAED;;;AACO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAImV,CAAJ,EAAOC,MAAP,EAAetd,CAAf,EAAkBud,CAAlB,EAAqBC,GAArB,EAA0BC,EAA1B,EAA8BG,GAA9B;AACA,YAAIC,EAAJ;AAEA;;AACA;;AACA,YAAIvE,GAAG,GAAGpR,CAAC,CAACtT,CAAZ;AACAsT,SAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACrT,CAAR;AACAqT,SAAC,CAACrT,CAAF,GAAMykB,GAAN;;AACA,YAAI,CAAC,KAAKqE,KAAV,EAAiB;AACfzV,WAAC,CAACrT,CAAF,IAAO,CAAC,CAAR;AACAqT,WAAC,CAACtT,CAAF,IAAO,CAAC,CAAR;AACD;;AACD6oB,UAAE,GAAGtrB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;AACA2oB,WAAG,GAAGrrB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACrT,CAAb,EAAgBqT,CAAC,CAACtT,CAAlB,CAAN;AACA2oB,SAAC,GAAGC,GAAG,GAAGrrB,IAAI,CAACqB,GAAL,CAAS,KAAKypB,EAAd,CAAV;AACAjd,SAAC,GAAG,KAAK7N,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAAC2C,GAAL,CAAS,KAAKooB,GAAL,GAAWO,EAApB,EAAwB,IAAI,KAAKrlB,CAAjC,IAAsCjG,IAAI,CAACsB,GAAL,CAAS,KAAKwpB,EAAL,GAAU,CAAV,GAAc,KAAKR,GAA5B,CAAhD,IAAoF,KAAKA,GAA9F,CAAJ;AACAY,SAAC,GAAGlrB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS,KAAKypB,EAAd,IAAoBhrB,IAAI,CAACqB,GAAL,CAASwM,CAAT,CAApB,GAAkC7N,IAAI,CAACqB,GAAL,CAAS,KAAK2pB,EAAd,IAAoBhrB,IAAI,CAACuB,GAAL,CAASsM,CAAT,CAApB,GAAkC7N,IAAI,CAACuB,GAAL,CAAS6pB,CAAT,CAA9E,CAAJ;AACAD,cAAM,GAAGnrB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAASsM,CAAT,IAAc7N,IAAI,CAACqB,GAAL,CAAS+pB,CAAT,CAAd,GAA4BprB,IAAI,CAACuB,GAAL,CAAS2pB,CAAT,CAAtC,CAAT;AACAnV,SAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAL,GAAauI,MAAM,GAAG,KAAKV,IAAjC;AACAgB,WAAG,GAAGP,CAAN;AACAQ,UAAE,GAAG,CAAL;AACA,YAAIlU,IAAI,GAAG,CAAX;;AACA,WAAG;AACDzB,WAAC,CAACrT,CAAF,GAAM,KAAK1C,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAAC2C,GAAL,CAAS,KAAKgL,CAAd,EAAiB,CAAE,CAAF,GAAM,KAAK8c,IAA5B,IAAoCzqB,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACsB,GAAL,CAAS4pB,CAAC,GAAG,CAAJ,GAAQ,KAAKZ,GAAtB,CAAT,EAAqC,IAAI,KAAKG,IAA9C,CAApC,GAA0FzqB,IAAI,CAAC2C,GAAL,CAAS,CAAC,IAAI,KAAKkD,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASoqB,GAAT,CAAd,KAAgC,IAAI,KAAK5lB,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASoqB,GAAT,CAA7C,CAAT,EAAsE,KAAK5lB,CAAL,GAAS,CAA/E,CAApG,IAAyL,KAAKykB,GAAnM,CAAN;;AACA,cAAItqB,IAAI,CAACgK,GAAL,CAASyhB,GAAG,GAAG1V,CAAC,CAACrT,CAAjB,IAAsB,YAA1B,EAAwC;AACtCgpB,cAAE,GAAG,CAAL;AACD;;AACDD,aAAG,GAAG1V,CAAC,CAACrT,CAAR;AACA8U,cAAI,IAAI,CAAR;AACD,SAPD,QAOSkU,EAAE,KAAK,CAAP,IAAYlU,IAAI,GAAG,EAP5B;;AAQA,YAAIA,IAAI,IAAI,EAAZ,EAAgB;AACd,iBAAO,IAAP;AACD;;AAED,eAAQzB,CAAR;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Ff;;;;;;;AAMO,UAAIsH,MAAM,GAAG,CAAb;AAEA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAG,CAAZ;AAEP;;;AAEO,eAAShjB,IAAT,GAAgB;AACrB,YAAIO,CAAC,GAAGrJ,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,CAAR;;AACA,YAAIlI,IAAI,CAACgK,GAAL,CAASX,CAAC,GAAG,yDAAb,IAAwB,uDAA5B,EAAmC;AACjC,eAAK0iB,IAAL,GAAY,KAAK7jB,IAAL,GAAY,CAAZ,GAAgB,KAAKyjB,MAArB,GAA8B,KAAKC,MAA/C;AACD,SAFD,MAGK,IAAI5rB,IAAI,CAACgK,GAAL,CAASX,CAAT,IAAc,uDAAlB,EAAyB;AAC5B,eAAK0iB,IAAL,GAAY,KAAKF,KAAjB;AACD,SAFI,MAGA;AACH,eAAKE,IAAL,GAAY,KAAKD,KAAjB;AACD;;AACD,YAAI,KAAKljB,EAAL,GAAU,CAAd,EAAiB;AACf,cAAIwC,MAAJ;AAEA,eAAK4gB,EAAL,GAAU,8DAAM,KAAKnmB,CAAX,EAAc,CAAd,CAAV;AACA,eAAKomB,GAAL,GAAW,OAAO,IAAI,KAAKrjB,EAAhB,CAAX;AACA,eAAKsjB,GAAL,GAAWC,OAAO,CAAC,KAAKvjB,EAAN,CAAlB;;AACA,kBAAQ,KAAKmjB,IAAb;AACA,iBAAK,KAAKH,MAAV;AACE,mBAAK9D,EAAL,GAAU,CAAV;AACA;;AACF,iBAAK,KAAK6D,MAAV;AACE,mBAAK7D,EAAL,GAAU,CAAV;AACA;;AACF,iBAAK,KAAK+D,KAAV;AACE,mBAAKO,EAAL,GAAUpsB,IAAI,CAACoB,IAAL,CAAU,MAAM,KAAK4qB,EAArB,CAAV;AACA,mBAAKlE,EAAL,GAAU,IAAI,KAAKsE,EAAnB;AACA,mBAAKC,GAAL,GAAW,CAAX;AACA,mBAAKC,GAAL,GAAW,MAAM,KAAKN,EAAtB;AACA;;AACF,iBAAK,KAAKF,KAAV;AACE,mBAAKM,EAAL,GAAUpsB,IAAI,CAACoB,IAAL,CAAU,MAAM,KAAK4qB,EAArB,CAAV;AACA5gB,oBAAM,GAAGpL,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAT;AACA,mBAAKqkB,KAAL,GAAa,8DAAM,KAAK1mB,CAAX,EAAcuF,MAAd,IAAwB,KAAK4gB,EAA1C;AACA,mBAAKQ,KAAL,GAAaxsB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKmrB,KAAL,GAAa,KAAKA,KAAhC,CAAb;AACA,mBAAKzE,EAAL,GAAU9nB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,KAAuBlI,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAUwC,MAAV,GAAmBA,MAAjC,IAA2C,KAAKghB,EAAhD,GAAqD,KAAKI,KAAjF,CAAV;AACA,mBAAKF,GAAL,GAAW,CAAC,KAAKD,GAAL,GAAW,KAAKD,EAAjB,IAAuB,KAAKtE,EAAvC;AACA,mBAAKuE,GAAL,IAAY,KAAKvE,EAAjB;AACA;AArBF;AAuBD,SA7BD,MA8BK;AACH,cAAI,KAAKiE,IAAL,KAAc,KAAKD,KAAvB,EAA8B;AAC5B,iBAAKW,MAAL,GAAczsB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAd;AACA,iBAAKwkB,MAAL,GAAc1sB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAd;AACD;AACF;AACF;AAED;;;;AAEO,eAAStJ,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB;;AAEA,YAAItT,CAAJ,EAAOC,CAAP,EAAUiqB,MAAV,EAAkBC,MAAlB,EAA0BxhB,MAA1B,EAAkCiB,CAAlC,EAAqCwgB,IAArC,EAA2CC,IAA3C,EAAiD1kB,CAAjD,EAAoDqE,MAApD;AACA,YAAI+a,GAAG,GAAGzR,CAAC,CAACtT,CAAZ;AACA,YAAImJ,GAAG,GAAGmK,CAAC,CAACrT,CAAZ;AAEA8kB,WAAG,GAAG,mEAAWA,GAAG,GAAG,KAAK5E,KAAtB,CAAN;;AACA,YAAI,KAAKta,MAAT,EAAiB;AACf8C,gBAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAT;AACAa,gBAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAT;AACA+gB,gBAAM,GAAG3sB,IAAI,CAACuB,GAAL,CAASimB,GAAT,CAAT;;AACA,cAAI,KAAKuE,IAAL,KAAc,KAAKD,KAAnB,IAA4B,KAAKC,IAAL,KAAc,KAAKF,KAAnD,EAA0D;AACxDnpB,aAAC,GAAI,KAAKqpB,IAAL,KAAc,KAAKF,KAApB,GAA6B,IAAIpf,MAAM,GAAGkgB,MAA1C,GAAmD,IAAI,KAAKF,MAAL,GAAcrhB,MAAlB,GAA2B,KAAKshB,MAAL,GAAcjgB,MAAd,GAAuBkgB,MAAzG;;AACA,gBAAIjqB,CAAC,IAAI,uDAAT,EAAgB;AACd,qBAAO,IAAP;AACD;;AACDA,aAAC,GAAG1C,IAAI,CAACoB,IAAL,CAAU,IAAIsB,CAAd,CAAJ;AACAD,aAAC,GAAGC,CAAC,GAAG+J,MAAJ,GAAazM,IAAI,CAACqB,GAAL,CAASmmB,GAAT,CAAjB;AACA9kB,aAAC,IAAK,KAAKqpB,IAAL,KAAc,KAAKF,KAApB,GAA6BzgB,MAA7B,GAAsC,KAAKshB,MAAL,GAActhB,MAAd,GAAuB,KAAKqhB,MAAL,GAAchgB,MAAd,GAAuBkgB,MAAzF;AACD,WARD,MASK,IAAI,KAAKZ,IAAL,KAAc,KAAKH,MAAnB,IAA6B,KAAKG,IAAL,KAAc,KAAKJ,MAApD,EAA4D;AAC/D,gBAAI,KAAKI,IAAL,KAAc,KAAKH,MAAvB,EAA+B;AAC7Be,oBAAM,GAAG,CAACA,MAAV;AACD;;AACD,gBAAI3sB,IAAI,CAACgK,GAAL,CAAS4B,GAAG,GAAG,KAAK1D,IAApB,IAA4B,uDAAhC,EAAuC;AACrC,qBAAO,IAAP;AACD;;AACDxF,aAAC,GAAG,2DAASkJ,GAAG,GAAG,GAAnB;AACAlJ,aAAC,GAAG,KAAM,KAAKqpB,IAAL,KAAc,KAAKJ,MAApB,GAA8B3rB,IAAI,CAACuB,GAAL,CAASmB,CAAT,CAA9B,GAA4C1C,IAAI,CAACqB,GAAL,CAASqB,CAAT,CAAjD,CAAJ;AACAD,aAAC,GAAGC,CAAC,GAAG1C,IAAI,CAACqB,GAAL,CAASmmB,GAAT,CAAR;AACA9kB,aAAC,IAAIiqB,MAAL;AACD;AACF,SAzBD,MA0BK;AACHE,cAAI,GAAG,CAAP;AACAC,cAAI,GAAG,CAAP;AACA1kB,WAAC,GAAG,CAAJ;AACAukB,gBAAM,GAAG3sB,IAAI,CAACuB,GAAL,CAASimB,GAAT,CAAT;AACAoF,gBAAM,GAAG5sB,IAAI,CAACqB,GAAL,CAASmmB,GAAT,CAAT;AACApc,gBAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAT;AACAS,WAAC,GAAG,8DAAM,KAAKxG,CAAX,EAAcuF,MAAd,CAAJ;;AACA,cAAI,KAAK2gB,IAAL,KAAc,KAAKD,KAAnB,IAA4B,KAAKC,IAAL,KAAc,KAAKF,KAAnD,EAA0D;AACxDgB,gBAAI,GAAGxgB,CAAC,GAAG,KAAK2f,EAAhB;AACAc,gBAAI,GAAG9sB,IAAI,CAACoB,IAAL,CAAU,IAAIyrB,IAAI,GAAGA,IAArB,CAAP;AACD;;AACD,kBAAQ,KAAKd,IAAb;AACA,iBAAK,KAAKD,KAAV;AACE1jB,eAAC,GAAG,IAAI,KAAKmkB,KAAL,GAAaM,IAAjB,GAAwB,KAAKL,KAAL,GAAaM,IAAb,GAAoBH,MAAhD;AACA;;AACF,iBAAK,KAAKd,KAAV;AACEzjB,eAAC,GAAG,IAAI0kB,IAAI,GAAGH,MAAf;AACA;;AACF,iBAAK,KAAKf,MAAV;AACExjB,eAAC,GAAG,4DAAUwD,GAAd;AACAS,eAAC,GAAG,KAAK2f,EAAL,GAAU3f,CAAd;AACA;;AACF,iBAAK,KAAKsf,MAAV;AACEvjB,eAAC,GAAGwD,GAAG,GAAG,yDAAV;AACAS,eAAC,GAAG,KAAK2f,EAAL,GAAU3f,CAAd;AACA;AAdF;;AAgBA,cAAIrM,IAAI,CAACgK,GAAL,CAAS5B,CAAT,IAAc,uDAAlB,EAAyB;AACvB,mBAAO,IAAP;AACD;;AACD,kBAAQ,KAAK2jB,IAAb;AACA,iBAAK,KAAKD,KAAV;AACA,iBAAK,KAAKD,KAAV;AACEzjB,eAAC,GAAGpI,IAAI,CAACoB,IAAL,CAAU,IAAIgH,CAAd,CAAJ;;AACA,kBAAI,KAAK2jB,IAAL,KAAc,KAAKD,KAAvB,EAA8B;AAC5BppB,iBAAC,GAAG,KAAK4pB,GAAL,GAAWlkB,CAAX,IAAgB,KAAKokB,KAAL,GAAaK,IAAb,GAAoB,KAAKN,KAAL,GAAaO,IAAb,GAAoBH,MAAxD,CAAJ;AACD,eAFD,MAGK;AACHjqB,iBAAC,GAAG,CAAC0F,CAAC,GAAGpI,IAAI,CAACoB,IAAL,CAAU,KAAK,IAAI0rB,IAAI,GAAGH,MAAhB,CAAV,CAAL,IAA2CE,IAA3C,GAAkD,KAAKP,GAA3D;AACD;;AACD7pB,eAAC,GAAG,KAAK4pB,GAAL,GAAWjkB,CAAX,GAAe0kB,IAAf,GAAsBF,MAA1B;AACA;;AACF,iBAAK,KAAKhB,MAAV;AACA,iBAAK,KAAKD,MAAV;AACE,kBAAItf,CAAC,IAAI,CAAT,EAAY;AACV5J,iBAAC,GAAG,CAAC2F,CAAC,GAAGpI,IAAI,CAACoB,IAAL,CAAUiL,CAAV,CAAL,IAAqBugB,MAAzB;AACAlqB,iBAAC,GAAGiqB,MAAM,IAAK,KAAKZ,IAAL,KAAc,KAAKJ,MAApB,GAA8BvjB,CAA9B,GAAkC,CAACA,CAAvC,CAAV;AACD,eAHD,MAIK;AACH3F,iBAAC,GAAGC,CAAC,GAAG,CAAR;AACD;;AACD;AArBF;AAuBD;;AAEDqT,SAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAL,GAASmC,CAAT,GAAa,KAAK8gB,EAAxB;AACAxN,SAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAL,GAASoC,CAAT,GAAa,KAAK+gB,EAAxB;AACA,eAAO1N,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA,YAAIhhB,CAAC,GAAGsT,CAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAnB;AACA,YAAIoC,CAAC,GAAGqT,CAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAnB;AACA,YAAIknB,GAAJ,EAAS5b,GAAT,EAAcmhB,GAAd,EAAmBC,GAAnB,EAAwB3gB,CAAxB,EAA2B4gB,GAA3B,EAAgCC,EAAhC;;AACA,YAAI,KAAK5kB,MAAT,EAAiB;AACf,cAAI2e,IAAI,GAAG,CAAX;AAAA,cACE5B,EADF;AAAA,cACM2B,IAAI,GAAG,CADb;AAGA3B,YAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAUqB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAL;AACAkJ,aAAG,GAAGyZ,EAAE,GAAG,GAAX;;AACA,cAAIzZ,GAAG,GAAG,CAAV,EAAa;AACX,mBAAO,IAAP;AACD;;AACDA,aAAG,GAAG,IAAI5L,IAAI,CAACkK,IAAL,CAAU0B,GAAV,CAAV;;AACA,cAAI,KAAKmgB,IAAL,KAAc,KAAKD,KAAnB,IAA4B,KAAKC,IAAL,KAAc,KAAKF,KAAnD,EAA0D;AACxD7E,gBAAI,GAAGhnB,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAP;AACAqb,gBAAI,GAAGjnB,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAP;AACD;;AACD,kBAAQ,KAAKmgB,IAAb;AACA,iBAAK,KAAKF,KAAV;AACEjgB,iBAAG,GAAI5L,IAAI,CAACgK,GAAL,CAASqb,EAAT,KAAgB,uDAAjB,GAA0B,CAA1B,GAA8BrlB,IAAI,CAACkK,IAAL,CAAUxH,CAAC,GAAGskB,IAAJ,GAAW3B,EAArB,CAApC;AACA5iB,eAAC,IAAIukB,IAAL;AACAtkB,eAAC,GAAGukB,IAAI,GAAG5B,EAAX;AACA;;AACF,iBAAK,KAAKyG,KAAV;AACElgB,iBAAG,GAAI5L,IAAI,CAACgK,GAAL,CAASqb,EAAT,KAAgB,uDAAjB,GAA0B,KAAKnd,IAA/B,GAAsClI,IAAI,CAACkK,IAAL,CAAU+c,IAAI,GAAG,KAAKwF,MAAZ,GAAqB/pB,CAAC,GAAGskB,IAAJ,GAAW,KAAK0F,MAAhB,GAAyBrH,EAAxD,CAA5C;AACA5iB,eAAC,IAAIukB,IAAI,GAAG,KAAK0F,MAAjB;AACAhqB,eAAC,GAAG,CAACukB,IAAI,GAAGjnB,IAAI,CAACqB,GAAL,CAASuK,GAAT,IAAgB,KAAK6gB,MAA7B,IAAuCpH,EAA3C;AACA;;AACF,iBAAK,KAAKuG,MAAV;AACElpB,eAAC,GAAG,CAACA,CAAL;AACAkJ,iBAAG,GAAG,4DAAUA,GAAhB;AACA;;AACF,iBAAK,KAAK+f,MAAV;AACE/f,iBAAG,IAAI,yDAAP;AACA;AAjBF;;AAmBA4b,aAAG,GAAI9kB,CAAC,KAAK,CAAN,KAAY,KAAKqpB,IAAL,KAAc,KAAKF,KAAnB,IAA4B,KAAKE,IAAL,KAAc,KAAKD,KAA3D,CAAD,GAAsE,CAAtE,GAA0E9rB,IAAI,CAAC2X,KAAL,CAAWlV,CAAX,EAAcC,CAAd,CAAhF;AACD,SAlCD,MAmCK;AACHwqB,YAAE,GAAG,CAAL;;AACA,cAAI,KAAKnB,IAAL,KAAc,KAAKD,KAAnB,IAA4B,KAAKC,IAAL,KAAc,KAAKF,KAAnD,EAA0D;AACxDppB,aAAC,IAAI,KAAKqlB,EAAV;AACAplB,aAAC,IAAI,KAAKolB,EAAV;AACAmF,eAAG,GAAGjtB,IAAI,CAACoB,IAAL,CAAUqB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAN;;AACA,gBAAIuqB,GAAG,GAAG,uDAAV,EAAiB;AACflX,eAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAX;AACA7M,eAAC,CAACrT,CAAF,GAAM,KAAKwF,IAAX;AACA,qBAAO6N,CAAP;AACD;;AACDiX,eAAG,GAAG,IAAIhtB,IAAI,CAACkK,IAAL,CAAU,MAAM+iB,GAAN,GAAY,KAAKb,EAA3B,CAAV;AACAW,eAAG,GAAG/sB,IAAI,CAACuB,GAAL,CAASyrB,GAAT,CAAN;AACAvqB,aAAC,IAAKuqB,GAAG,GAAGhtB,IAAI,CAACqB,GAAL,CAAS2rB,GAAT,CAAZ;;AACA,gBAAI,KAAKjB,IAAL,KAAc,KAAKD,KAAvB,EAA8B;AAC5BoB,gBAAE,GAAGH,GAAG,GAAG,KAAKR,KAAX,GAAmB7pB,CAAC,GAAGsqB,GAAJ,GAAU,KAAKR,KAAf,GAAuBS,GAA/C;AACA5gB,eAAC,GAAG,KAAK2f,EAAL,GAAUkB,EAAd;AACAxqB,eAAC,GAAGuqB,GAAG,GAAG,KAAKT,KAAX,GAAmBO,GAAnB,GAAyBrqB,CAAC,GAAG,KAAK6pB,KAAT,GAAiBS,GAA9C;AACD,aAJD,MAKK;AACHE,gBAAE,GAAGxqB,CAAC,GAAGsqB,GAAJ,GAAUC,GAAf;AACA5gB,eAAC,GAAG,KAAK2f,EAAL,GAAUkB,EAAd;AACAxqB,eAAC,GAAGuqB,GAAG,GAAGF,GAAV;AACD;AACF,WAtBD,MAuBK,IAAI,KAAKhB,IAAL,KAAc,KAAKH,MAAnB,IAA6B,KAAKG,IAAL,KAAc,KAAKJ,MAApD,EAA4D;AAC/D,gBAAI,KAAKI,IAAL,KAAc,KAAKH,MAAvB,EAA+B;AAC7BlpB,eAAC,GAAG,CAACA,CAAL;AACD;;AACD2J,aAAC,GAAI5J,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAjB;;AACA,gBAAI,CAAC2J,CAAL,EAAQ;AACN0J,eAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAX;AACA7M,eAAC,CAACrT,CAAF,GAAM,KAAKwF,IAAX;AACA,qBAAO6N,CAAP;AACD;;AACDmX,cAAE,GAAG,IAAI7gB,CAAC,GAAG,KAAK2f,EAAlB;;AACA,gBAAI,KAAKD,IAAL,KAAc,KAAKJ,MAAvB,EAA+B;AAC7BuB,gBAAE,GAAG,CAACA,EAAN;AACD;AACF;;AACD1F,aAAG,GAAGxnB,IAAI,CAAC2X,KAAL,CAAWlV,CAAX,EAAcC,CAAd,CAAN;AACAkJ,aAAG,GAAGuhB,OAAO,CAACntB,IAAI,CAACkK,IAAL,CAAUgjB,EAAV,CAAD,EAAgB,KAAKhB,GAArB,CAAb;AACD;;AAEDnW,SAAC,CAACtT,CAAF,GAAM,mEAAW,KAAKmgB,KAAL,GAAa4E,GAAxB,CAAN;AACAzR,SAAC,CAACrT,CAAF,GAAMkJ,GAAN;AACA,eAAOmK,CAAP;AACD;AAED;;;AACA,UAAIqX,GAAG,GAAG,sBAAV;AAEA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;AACA,UAAIC,GAAG,GAAG,sBAAV;;AAEA,eAAStB,OAAT,CAAiBvjB,EAAjB,EAAqB;AACnB,YAAIS,CAAJ;AACA,YAAIqkB,GAAG,GAAG,EAAV;AACAA,WAAG,CAAC,CAAD,CAAH,GAAS9kB,EAAE,GAAGwkB,GAAd;AACA/jB,SAAC,GAAGT,EAAE,GAAGA,EAAT;AACA8kB,WAAG,CAAC,CAAD,CAAH,IAAUrkB,CAAC,GAAGgkB,GAAd;AACAK,WAAG,CAAC,CAAD,CAAH,GAASrkB,CAAC,GAAGkkB,GAAb;AACAlkB,SAAC,IAAIT,EAAL;AACA8kB,WAAG,CAAC,CAAD,CAAH,IAAUrkB,CAAC,GAAGikB,GAAd;AACAI,WAAG,CAAC,CAAD,CAAH,IAAUrkB,CAAC,GAAGmkB,GAAd;AACAE,WAAG,CAAC,CAAD,CAAH,GAASrkB,CAAC,GAAGokB,GAAb;AACA,eAAOC,GAAP;AACD;;AAED,eAASP,OAAT,CAAiBQ,IAAjB,EAAuBD,GAAvB,EAA4B;AAC1B,YAAIrkB,CAAC,GAAGskB,IAAI,GAAGA,IAAf;AACA,eAAQA,IAAI,GAAGD,GAAG,CAAC,CAAD,CAAH,GAAS1tB,IAAI,CAACqB,GAAL,CAASgI,CAAT,CAAhB,GAA8BqkB,GAAG,CAAC,CAAD,CAAH,GAAS1tB,IAAI,CAACqB,GAAL,CAASgI,CAAC,GAAGA,CAAb,CAAvC,GAAyDqkB,GAAG,CAAC,CAAD,CAAH,GAAS1tB,IAAI,CAACqB,GAAL,CAASgI,CAAC,GAAGA,CAAJ,GAAQA,CAAjB,CAA1E;AACD;;AAEM,UAAIgb,KAAK,GAAG,CAAC,8BAAD,EAAiC,8BAAjC,EAAiE,MAAjE,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA,KAJM;AAKbsH,cAAM,EAAEA,MALK;AAMbC,cAAM,EAAEA,MANK;AAObC,aAAK,EAAEA,KAPM;AAQbC,aAAK,EAAEA;AARM;;;;;;;;;;;;;;;;AChSf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMO,eAAShjB,IAAT,GAAgB;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,YAAI,CAAC,KAAK2Z,IAAV,EAAgB;AACd,eAAKA,IAAL,GAAY,KAAKxa,IAAjB;AACD,SAhBoB,CAgBnB;;;AACF,YAAI,CAAC,KAAKzH,EAAV,EAAc;AACZ,eAAKA,EAAL,GAAU,CAAV;AACD;;AACD,aAAK+iB,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB,CArBqB,CAsBrB;;AACA,YAAIzjB,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C;AACD;;AAED,YAAItX,IAAI,GAAG,KAAK/C,CAAL,GAAS,KAAK9H,CAAzB;AACA,aAAKuF,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,IAAI+J,IAAI,GAAGA,IAArB,CAAT;AAEA,YAAIyiB,IAAI,GAAG5tB,IAAI,CAACqB,GAAL,CAAS,KAAK4G,IAAd,CAAX;AACA,YAAI4lB,IAAI,GAAG7tB,IAAI,CAACuB,GAAL,CAAS,KAAK0G,IAAd,CAAX;AACA,YAAI2c,GAAG,GAAG,8DAAM,KAAK/e,CAAX,EAAc+nB,IAAd,EAAoBC,IAApB,CAAV;AACA,YAAIC,GAAG,GAAG,8DAAM,KAAKjoB,CAAX,EAAc,KAAKoC,IAAnB,EAAyB2lB,IAAzB,CAAV;AAEA,YAAIG,IAAI,GAAG/tB,IAAI,CAACqB,GAAL,CAAS,KAAKohB,IAAd,CAAX;AACA,YAAIuL,IAAI,GAAGhuB,IAAI,CAACuB,GAAL,CAAS,KAAKkhB,IAAd,CAAX;AACA,YAAIsC,GAAG,GAAG,8DAAM,KAAKlf,CAAX,EAAckoB,IAAd,EAAoBC,IAApB,CAAV;AACA,YAAIC,GAAG,GAAG,8DAAM,KAAKpoB,CAAX,EAAc,KAAK4c,IAAnB,EAAyBsL,IAAzB,CAAV;AAEA,YAAIG,GAAG,GAAG,8DAAM,KAAKroB,CAAX,EAAc,KAAKqC,IAAnB,EAAyBlI,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAzB,CAAV;;AAEA,YAAIlI,IAAI,CAACgK,GAAL,CAAS,KAAK/B,IAAL,GAAY,KAAKwa,IAA1B,IAAkC,uDAAtC,EAA6C;AAC3C,eAAKgG,EAAL,GAAUzoB,IAAI,CAACoM,GAAL,CAASwY,GAAG,GAAGG,GAAf,IAAsB/kB,IAAI,CAACoM,GAAL,CAAS0hB,GAAG,GAAGG,GAAf,CAAhC;AACD,SAFD,MAGK;AACH,eAAKxF,EAAL,GAAUmF,IAAV;AACD;;AACD,YAAIxT,KAAK,CAAC,KAAKqO,EAAN,CAAT,EAAoB;AAClB,eAAKA,EAAL,GAAUmF,IAAV;AACD;;AACD,aAAKO,EAAL,GAAUvJ,GAAG,IAAI,KAAK6D,EAAL,GAAUzoB,IAAI,CAAC2C,GAAL,CAASmrB,GAAT,EAAc,KAAKrF,EAAnB,CAAd,CAAb;AACA,aAAKpD,EAAL,GAAU,KAAK/kB,CAAL,GAAS,KAAK6tB,EAAd,GAAmBnuB,IAAI,CAAC2C,GAAL,CAASurB,GAAT,EAAc,KAAKzF,EAAnB,CAA7B;;AACA,YAAI,CAAC,KAAKH,KAAV,EAAiB;AACf,eAAKA,KAAL,GAAa,yBAAb;AACD;AACF,O,CAED;AACA;;;AACO,eAAS1pB,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ,CAHyB,CAKzB;;AACA,YAAI1C,IAAI,CAACgK,GAAL,CAAS,IAAIhK,IAAI,CAACgK,GAAL,CAAS7K,GAAT,CAAJ,GAAoBa,IAAI,CAACC,EAAlC,KAAyC,uDAA7C,EAAoD;AAClDd,aAAG,GAAG,6DAAKA,GAAL,KAAa,4DAAU,IAAI,uDAA3B,CAAN;AACD;;AAED,YAAIqN,GAAG,GAAGxM,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS7K,GAAT,IAAgB,yDAAzB,CAAV;AACA,YAAIyN,EAAJ,EAAQ2Y,GAAR;;AACA,YAAI/Y,GAAG,GAAG,uDAAV,EAAiB;AACfI,YAAE,GAAG,8DAAM,KAAK/G,CAAX,EAAc1G,GAAd,EAAmBa,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAnB,CAAL;AACAomB,aAAG,GAAG,KAAKjlB,CAAL,GAAS,KAAK6tB,EAAd,GAAmBnuB,IAAI,CAAC2C,GAAL,CAASiK,EAAT,EAAa,KAAK6b,EAAlB,CAAzB;AACD,SAHD,MAIK;AACHjc,aAAG,GAAGrN,GAAG,GAAG,KAAKspB,EAAjB;;AACA,cAAIjc,GAAG,IAAI,CAAX,EAAc;AACZ,mBAAO,IAAP;AACD;;AACD+Y,aAAG,GAAG,CAAN;AACD;;AACD,YAAIC,KAAK,GAAG,KAAKiD,EAAL,GAAU,mEAAWrpB,GAAG,GAAG,KAAKwjB,KAAtB,CAAtB;AACA7M,SAAC,CAACtT,CAAF,GAAM,KAAKjC,EAAL,IAAW+kB,GAAG,GAAGvlB,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAjB,IAAoC,KAAKjC,EAA/C;AACAxN,SAAC,CAACrT,CAAF,GAAM,KAAKlC,EAAL,IAAW,KAAK6kB,EAAL,GAAUE,GAAG,GAAGvlB,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAA3B,IAA8C,KAAK/B,EAAzD;AAEA,eAAO1N,CAAP;AACD,O,CAED;AACA;;;AACO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AAEzB,YAAIwP,GAAJ,EAAS/Y,GAAT,EAAcI,EAAd;AACA,YAAIzN,GAAJ,EAASC,GAAT;AACA,YAAIqD,CAAC,GAAG,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,IAAkB,KAAK/iB,EAA/B;AACA,YAAIkC,CAAC,GAAI,KAAK2iB,EAAL,GAAU,CAACtP,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,IAAkB,KAAKjjB,EAA1C;;AACA,YAAI,KAAKioB,EAAL,GAAU,CAAd,EAAiB;AACflD,aAAG,GAAGvlB,IAAI,CAACoB,IAAL,CAAUqB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAN;AACA8J,aAAG,GAAG,CAAN;AACD,SAHD,MAIK;AACH+Y,aAAG,GAAG,CAACvlB,IAAI,CAACoB,IAAL,CAAUqB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAP;AACA8J,aAAG,GAAG,CAAC,CAAP;AACD;;AACD,YAAIgZ,KAAK,GAAG,CAAZ;;AACA,YAAID,GAAG,KAAK,CAAZ,EAAe;AACbC,eAAK,GAAGxlB,IAAI,CAAC2X,KAAL,CAAYnL,GAAG,GAAG/J,CAAlB,EAAuB+J,GAAG,GAAG9J,CAA7B,CAAR;AACD;;AACD,YAAK6iB,GAAG,KAAK,CAAT,IAAgB,KAAKkD,EAAL,GAAU,CAA9B,EAAkC;AAChCjc,aAAG,GAAG,IAAI,KAAKic,EAAf;AACA7b,YAAE,GAAG5M,IAAI,CAAC2C,GAAL,CAAU4iB,GAAG,IAAI,KAAKjlB,CAAL,GAAS,KAAK6tB,EAAlB,CAAb,EAAqC3hB,GAArC,CAAL;AACArN,aAAG,GAAG,8DAAM,KAAK0G,CAAX,EAAc+G,EAAd,CAAN;;AACA,cAAIzN,GAAG,KAAK,CAAC,IAAb,EAAmB;AACjB,mBAAO,IAAP;AACD;AACF,SAPD,MAQK;AACHA,aAAG,GAAG,CAAC,yDAAP;AACD;;AACDC,WAAG,GAAG,mEAAWomB,KAAK,GAAG,KAAKiD,EAAb,GAAkB,KAAK7F,KAAlC,CAAN;AAEA7M,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CACjB,+CADiB,EAEjB,yBAFiB,EAGjB,6BAHiB,EAIjB,6BAJiB,EAKjB,KALiB,CAAZ;AAQQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC9If;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASvb,IAAT,GAAgB,CACrB;AACD;;AAED,eAASslB,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,eAAOA,EAAP;AACD;;AAGM,UAAIhK,KAAK,GAAG,CAAC,SAAD,EAAY,UAAZ,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEwvB,QAFI;AAGbvvB,eAAO,EAAEuvB,QAHI;AAIb/J,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACVf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMO,eAASvb,IAAT,GAAgB;AACrB,YAAI0D,GAAG,GAAG,KAAKpE,CAAL,GAAS,KAAK9H,CAAxB;AACA,aAAKsI,EAAL,GAAU,IAAI4D,GAAG,GAAGA,GAApB;;AACA,YAAG,EAAE,QAAQ,IAAV,CAAH,EAAmB;AACjB,eAAK+W,EAAL,GAAU,CAAV;AACD;;AACD,YAAG,EAAE,QAAQ,IAAV,CAAH,EAAmB;AACjB,eAAKE,EAAL,GAAU,CAAV;AACD;;AACD,aAAK5d,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,KAAKwH,EAAf,CAAT;;AACA,YAAI,KAAK8Z,MAAT,EAAiB;AACf,cAAI,KAAKpa,MAAT,EAAiB;AACf,iBAAK9H,EAAL,GAAUR,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAAV;AACD,WAFD,MAGK;AACH,iBAAKliB,EAAL,GAAU,8DAAM,KAAKqF,CAAX,EAAc7F,IAAI,CAACqB,GAAL,CAAS,KAAKqhB,MAAd,CAAd,EAAqC1iB,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAArC,CAAV;AACD;AACF,SAPD,MAQK;AACH,cAAI,CAAC,KAAKliB,EAAV,EAAc;AACZ,gBAAI,KAAKmN,CAAT,EAAY;AACV,mBAAKnN,EAAL,GAAU,KAAKmN,CAAf;AACD,aAFD,MAGK;AACH,mBAAKnN,EAAL,GAAU,CAAV;AACD;AACF;AACF;AACF;AAED;;;;AAGO,eAAS5B,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ,CAFyB,CAGzB;;AACA,YAAIvD,GAAG,GAAG,qDAAN,GAAY,EAAZ,IAAkBA,GAAG,GAAG,qDAAN,GAAY,CAAC,EAA/B,IAAqCC,GAAG,GAAG,qDAAN,GAAY,GAAjD,IAAwDA,GAAG,GAAG,qDAAN,GAAY,CAAC,GAAzE,EAA8E;AAC5E,iBAAO,IAAP;AACD;;AAED,YAAIqD,CAAJ,EAAOC,CAAP;;AACA,YAAI1C,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS7K,GAAT,IAAgB,yDAAzB,KAAqC,uDAAzC,EAAgD;AAC9C,iBAAO,IAAP;AACD,SAFD,MAGK;AACH,cAAI,KAAKmJ,MAAT,EAAiB;AACf7F,aAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAAS,KAAKE,EAAd,GAAmB,mEAAWpB,GAAG,GAAG,KAAKwjB,KAAtB,CAAjC;AACAlgB,aAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAAS,KAAKE,EAAd,GAAmBR,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAS,2DAAS,MAAMnC,GAAxB,CAAT,CAAjC;AACD,WAHD,MAIK;AACH,gBAAIiM,MAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAb;AACA,gBAAIyN,EAAE,GAAG,8DAAM,KAAK/G,CAAX,EAAc1G,GAAd,EAAmBiM,MAAnB,CAAT;AACA3I,aAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAAS,KAAKE,EAAd,GAAmB,mEAAWpB,GAAG,GAAG,KAAKwjB,KAAtB,CAAjC;AACAlgB,aAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAAS,KAAKE,EAAd,GAAmBR,IAAI,CAACoM,GAAL,CAASQ,EAAT,CAAjC;AACD;;AACDmJ,WAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,WAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,iBAAOqT,CAAP;AACD;AACF;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AAEzB,YAAItT,CAAC,GAAGsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAnB;AACA,YAAI7gB,CAAC,GAAGqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAnB;AACA,YAAIrkB,GAAJ,EAASD,GAAT;;AAEA,YAAI,KAAKmJ,MAAT,EAAiB;AACfnJ,aAAG,GAAG,4DAAU,IAAIa,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACkL,GAAL,CAAS,CAACxI,CAAD,IAAM,KAAKpC,CAAL,GAAS,KAAKE,EAApB,CAAT,CAAV,CAApB;AACD,SAFD,MAGK;AACH,cAAIoM,EAAE,GAAG5M,IAAI,CAACkL,GAAL,CAAS,CAACxI,CAAD,IAAM,KAAKpC,CAAL,GAAS,KAAKE,EAApB,CAAT,CAAT;AACArB,aAAG,GAAG,8DAAM,KAAK0G,CAAX,EAAc+G,EAAd,CAAN;;AACA,cAAIzN,GAAG,KAAK,CAAC,IAAb,EAAmB;AACjB,mBAAO,IAAP;AACD;AACF;;AACDC,WAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAangB,CAAC,IAAI,KAAKnC,CAAL,GAAS,KAAKE,EAAlB,CAAzB,CAAN;AAEAuV,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,UAAD,EAAa,uCAAb,EAAsD,cAAtD,EAAsE,2BAAtE,EAAmG,MAAnG,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC9Ff;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;AAOA;;;;AAEO,eAASvb,IAAT,GAAgB,CACrB;AACD;AAED;;;;AAEO,eAASlK,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA;;;AAEA,YAAImjB,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;AACA,YAAIngB,CAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAKjjB,CAAL,GAASulB,IAA3B;AACA,YAAInjB,CAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAASN,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAUtB,IAAI,CAACC,EAAL,GAAU,CAAX,GAAiBd,GAAG,GAAG,GAAhC,CAAT,CAAT,GAA2D,IAA7E;AAEA4W,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AAEA,YAAIrkB,GAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa7M,CAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAnC,CAAV;AACA,YAAInB,GAAG,GAAG,OAAOa,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACkL,GAAL,CAAS,MAAM6K,CAAC,CAACrT,CAAR,GAAY,KAAKpC,CAA1B,CAAV,IAA0CN,IAAI,CAACC,EAAL,GAAU,CAA3D,CAAV;AAEA8V,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,oBAAD,EAAuB,MAAvB,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC9Cf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AACO,eAASvb,IAAT,GAAgB,CAAE;AAEzB;;;;AAEO,eAASlK,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB;;AAEA,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA,YAAI6oB,SAAS,GAAG,mEAAWnsB,GAAG,GAAG,KAAKwjB,KAAtB,CAAhB;AACA,YAAI4C,KAAK,GAAGrmB,GAAZ;AACA,YAAIqN,GAAG,GAAGxM,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAApB;AAEA;;;AAEA,eAAO,IAAP,EAAa;AACX,cAAImvB,WAAW,GAAG,EAAE9I,KAAK,GAAGxlB,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAR,GAA0BhZ,GAA5B,KAAoC,IAAIxM,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAxC,CAAlB;AACAA,eAAK,IAAI8I,WAAT;;AACA,cAAItuB,IAAI,CAACgK,GAAL,CAASskB,WAAT,IAAwB,uDAA5B,EAAmC;AACjC;AACD;AACF;;AACD9I,aAAK,IAAI,CAAT;AAEA;;;;AAGA,YAAIxlB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAcD,IAAI,CAACgK,GAAL,CAAS7K,GAAT,CAAd,GAA8B,uDAAlC,EAAyC;AACvCosB,mBAAS,GAAG,CAAZ;AACD;;AACD,YAAI9oB,CAAC,GAAG,iBAAiB,KAAKnC,CAAtB,GAA0BirB,SAA1B,GAAsCvrB,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAtC,GAAwD,KAAKjC,EAArE;AACA,YAAI7gB,CAAC,GAAG,kBAAkB,KAAKpC,CAAvB,GAA2BN,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAA3B,GAA6C,KAAK/B,EAA1D;AAEA1N,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIyP,KAAJ;AACA,YAAI5X,GAAJ;AAEA;;;AAEAmI,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA7V,WAAG,GAAGmI,CAAC,CAACrT,CAAF,IAAO,kBAAkB,KAAKpC,CAA9B,CAAN;AAEA;;;;AAGA,YAAIN,IAAI,CAACgK,GAAL,CAAS4D,GAAT,IAAgB,cAApB,EAAoC;AAClCA,aAAG,GAAG,cAAN;AACD;;AACD4X,aAAK,GAAGxlB,IAAI,CAACkK,IAAL,CAAU0D,GAAV,CAAR;AACA,YAAIxO,GAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAc7M,CAAC,CAACtT,CAAF,IAAO,iBAAiB,KAAKnC,CAAtB,GAA0BN,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAjC,CAAzB,CAAV;;AACA,YAAIpmB,GAAG,GAAI,CAACY,IAAI,CAACC,EAAjB,EAAsB;AACpBb,aAAG,GAAG,CAACY,IAAI,CAACC,EAAZ;AACD;;AACD,YAAIb,GAAG,GAAGY,IAAI,CAACC,EAAf,EAAmB;AACjBb,aAAG,GAAGY,IAAI,CAACC,EAAX;AACD;;AACD2N,WAAG,GAAG,CAAC,IAAI4X,KAAJ,GAAYxlB,IAAI,CAACqB,GAAL,CAAS,IAAImkB,KAAb,CAAb,IAAoCxlB,IAAI,CAACC,EAA/C;;AACA,YAAID,IAAI,CAACgK,GAAL,CAAS4D,GAAT,IAAgB,CAApB,EAAuB;AACrBA,aAAG,GAAG,CAAN;AACD;;AACD,YAAIzO,GAAG,GAAGa,IAAI,CAACkK,IAAL,CAAU0D,GAAV,CAAV;AAEAmI,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,WAAD,EAAc,MAAd,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC7Ef;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;AAQA;;;;;;;;AAMO,UAAIkK,UAAU,GAAG,CAAjB;;AAEA,eAASzlB,IAAT,GAAgB;AACrB,aAAKvK,CAAL,GAAS,EAAT;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,YAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,YAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,WAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,UAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,SAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,SAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,SAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,QAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,OAAZ;AACA,aAAKA,CAAL,CAAO,EAAP,IAAa,CAAC,OAAd;AAEA,aAAKiwB,IAAL,GAAY,EAAZ;AACA,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,YAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,WAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,WAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,WAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,WAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,UAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,UAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,UAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAC,UAAhB;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,SAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAC,SAAhB;AAEA,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAKC,IAAL,GAAY,EAAZ;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,YAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,WAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAC,WAAhB;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,WAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,CAAC,WAAhB;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,CAAC,UAAhB;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,UAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,UAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,UAAf;AACA,aAAKD,IAAL,CAAU,CAAV,IAAe,SAAf;AACA,aAAKC,IAAL,CAAU,CAAV,IAAe,SAAf;AAEA,aAAKrsB,CAAL,GAAS,EAAT;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,YAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,YAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,UAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,SAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,SAAb;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,QAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,OAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,OAAZ;AACA,aAAKA,CAAL,CAAO,CAAP,IAAY,CAAC,MAAb;AACD;AAED;;;;;;AAIO,eAAS1D,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI9P,CAAJ;AACA,YAAI7G,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA,YAAIksB,SAAS,GAAGzvB,GAAG,GAAG,KAAK+I,IAA3B;AACA,YAAIqjB,SAAS,GAAGnsB,GAAG,GAAG,KAAKwjB,KAA3B,CANyB,CAQzB;AACA;;AACA,YAAIiM,KAAK,GAAGD,SAAS,GAAG,4DAAZ,GAAyB,IAArC;AACA,YAAIE,QAAQ,GAAGvD,SAAf;AACA,YAAIwD,OAAO,GAAG,CAAd,CAZyB,CAYR;;AAEjB,YAAIC,KAAK,GAAG,CAAZ;;AACA,aAAK/oB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACxB8oB,iBAAO,GAAGA,OAAO,GAAGF,KAApB;AACAG,eAAK,GAAGA,KAAK,GAAG,KAAKzwB,CAAL,CAAO0H,CAAP,IAAY8oB,OAA5B;AACD,SAlBwB,CAoBzB;;;AACA,YAAIE,KAAK,GAAGD,KAAZ;AACA,YAAIE,KAAK,GAAGJ,QAAZ,CAtByB,CAwBzB;;AACA,YAAIK,OAAO,GAAG,CAAd;AACA,YAAIC,OAAO,GAAG,CAAd,CA1ByB,CA0BR;;AACjB,YAAIC,QAAJ;AACA,YAAIC,QAAJ;AAEA,YAAIC,IAAI,GAAG,CAAX;AACA,YAAIC,IAAI,GAAG,CAAX;;AACA,aAAKvpB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvBopB,kBAAQ,GAAGF,OAAO,GAAGF,KAAV,GAAkBG,OAAO,GAAGF,KAAvC;AACAI,kBAAQ,GAAGF,OAAO,GAAGH,KAAV,GAAkBE,OAAO,GAAGD,KAAvC;AACAC,iBAAO,GAAGE,QAAV;AACAD,iBAAO,GAAGE,QAAV;AACAC,cAAI,GAAGA,IAAI,GAAG,KAAKf,IAAL,CAAUvoB,CAAV,IAAekpB,OAAtB,GAAgC,KAAKV,IAAL,CAAUxoB,CAAV,IAAempB,OAAtD;AACAI,cAAI,GAAGA,IAAI,GAAG,KAAKf,IAAL,CAAUxoB,CAAV,IAAekpB,OAAtB,GAAgC,KAAKX,IAAL,CAAUvoB,CAAV,IAAempB,OAAtD;AACD,SAvCwB,CAyCzB;;;AACArZ,SAAC,CAACtT,CAAF,GAAO+sB,IAAI,GAAG,KAAKlvB,CAAb,GAAkB,KAAKijB,EAA7B;AACAxN,SAAC,CAACrT,CAAF,GAAO6sB,IAAI,GAAG,KAAKjvB,CAAb,GAAkB,KAAKmjB,EAA7B;AAEA,eAAO1N,CAAP;AACD;AAED;;;;;AAGO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI9P,CAAJ;AACA,YAAIxD,CAAC,GAAGsT,CAAC,CAACtT,CAAV;AACA,YAAIC,CAAC,GAAGqT,CAAC,CAACrT,CAAV;AAEA,YAAI+sB,OAAO,GAAGhtB,CAAC,GAAG,KAAK8gB,EAAvB;AACA,YAAImM,OAAO,GAAGhtB,CAAC,GAAG,KAAK+gB,EAAvB,CANyB,CAQzB;;AACA,YAAI8L,IAAI,GAAGG,OAAO,GAAG,KAAKpvB,CAA1B;AACA,YAAIkvB,IAAI,GAAGC,OAAO,GAAG,KAAKnvB,CAA1B,CAVyB,CAYzB;;AACA,YAAIqvB,MAAM,GAAG,CAAb;AACA,YAAIC,MAAM,GAAG,CAAb,CAdyB,CAcT;;AAChB,YAAIC,OAAJ;AACA,YAAIC,OAAJ;AAEA,YAAIb,KAAK,GAAG,CAAZ;AACA,YAAIC,KAAK,GAAG,CAAZ;;AACA,aAAKjpB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvB4pB,iBAAO,GAAGF,MAAM,GAAGJ,IAAT,GAAgBK,MAAM,GAAGJ,IAAnC;AACAM,iBAAO,GAAGF,MAAM,GAAGL,IAAT,GAAgBI,MAAM,GAAGH,IAAnC;AACAG,gBAAM,GAAGE,OAAT;AACAD,gBAAM,GAAGE,OAAT;AACAb,eAAK,GAAGA,KAAK,GAAG,KAAKP,IAAL,CAAUzoB,CAAV,IAAe0pB,MAAvB,GAAgC,KAAKhB,IAAL,CAAU1oB,CAAV,IAAe2pB,MAAvD;AACAV,eAAK,GAAGA,KAAK,GAAG,KAAKP,IAAL,CAAU1oB,CAAV,IAAe0pB,MAAvB,GAAgC,KAAKjB,IAAL,CAAUzoB,CAAV,IAAe2pB,MAAvD;AACD,SA3BwB,CA6BzB;AACA;AACA;AACA;;;AACA,aAAK,IAAInsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK8qB,UAAzB,EAAqC9qB,CAAC,EAAtC,EAA0C;AACxC,cAAI0rB,OAAO,GAAGF,KAAd;AACA,cAAIG,OAAO,GAAGF,KAAd;AACA,cAAIG,QAAJ;AACA,cAAIC,QAAJ;AAEA,cAAIS,MAAM,GAAGR,IAAb;AACA,cAAIS,MAAM,GAAGR,IAAb;;AACA,eAAKvpB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvBopB,oBAAQ,GAAGF,OAAO,GAAGF,KAAV,GAAkBG,OAAO,GAAGF,KAAvC;AACAI,oBAAQ,GAAGF,OAAO,GAAGH,KAAV,GAAkBE,OAAO,GAAGD,KAAvC;AACAC,mBAAO,GAAGE,QAAV;AACAD,mBAAO,GAAGE,QAAV;AACAS,kBAAM,GAAGA,MAAM,GAAG,CAAC9pB,CAAC,GAAG,CAAL,KAAW,KAAKuoB,IAAL,CAAUvoB,CAAV,IAAekpB,OAAf,GAAyB,KAAKV,IAAL,CAAUxoB,CAAV,IAAempB,OAAnD,CAAlB;AACAY,kBAAM,GAAGA,MAAM,GAAG,CAAC/pB,CAAC,GAAG,CAAL,KAAW,KAAKwoB,IAAL,CAAUxoB,CAAV,IAAekpB,OAAf,GAAyB,KAAKX,IAAL,CAAUvoB,CAAV,IAAempB,OAAnD,CAAlB;AACD;;AAEDD,iBAAO,GAAG,CAAV;AACAC,iBAAO,GAAG,CAAV;AACA,cAAIa,MAAM,GAAG,KAAKzB,IAAL,CAAU,CAAV,CAAb;AACA,cAAI0B,MAAM,GAAG,KAAKzB,IAAL,CAAU,CAAV,CAAb;;AACA,eAAKxoB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvBopB,oBAAQ,GAAGF,OAAO,GAAGF,KAAV,GAAkBG,OAAO,GAAGF,KAAvC;AACAI,oBAAQ,GAAGF,OAAO,GAAGH,KAAV,GAAkBE,OAAO,GAAGD,KAAvC;AACAC,mBAAO,GAAGE,QAAV;AACAD,mBAAO,GAAGE,QAAV;AACAW,kBAAM,GAAGA,MAAM,GAAGhqB,CAAC,IAAI,KAAKuoB,IAAL,CAAUvoB,CAAV,IAAekpB,OAAf,GAAyB,KAAKV,IAAL,CAAUxoB,CAAV,IAAempB,OAA5C,CAAnB;AACAc,kBAAM,GAAGA,MAAM,GAAGjqB,CAAC,IAAI,KAAKwoB,IAAL,CAAUxoB,CAAV,IAAekpB,OAAf,GAAyB,KAAKX,IAAL,CAAUvoB,CAAV,IAAempB,OAA5C,CAAnB;AACD,WA5BuC,CA8BxC;;;AACA,cAAIe,IAAI,GAAGF,MAAM,GAAGA,MAAT,GAAkBC,MAAM,GAAGA,MAAtC;AACAjB,eAAK,GAAG,CAACc,MAAM,GAAGE,MAAT,GAAkBD,MAAM,GAAGE,MAA5B,IAAsCC,IAA9C;AACAjB,eAAK,GAAG,CAACc,MAAM,GAAGC,MAAT,GAAkBF,MAAM,GAAGG,MAA5B,IAAsCC,IAA9C;AACD,SAnEwB,CAqEzB;;;AACA,YAAInB,KAAK,GAAGC,KAAZ;AACA,YAAIH,QAAQ,GAAGI,KAAf;AACA,YAAIkB,OAAO,GAAG,CAAd,CAxEyB,CAwER;;AAEjB,YAAIvB,KAAK,GAAG,CAAZ;;AACA,aAAK5oB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACvBmqB,iBAAO,GAAGA,OAAO,GAAGpB,KAApB;AACAH,eAAK,GAAGA,KAAK,GAAG,KAAKvsB,CAAL,CAAO2D,CAAP,IAAYmqB,OAA5B;AACD,SA9EwB,CAgFzB;AACA;;;AACA,YAAIjxB,GAAG,GAAG,KAAK+I,IAAL,GAAa2mB,KAAK,GAAG,4DAAR,GAAqB,GAA5C;AACA,YAAIzvB,GAAG,GAAG,KAAKwjB,KAAL,GAAakM,QAAvB;AAEA/Y,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AAEA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,sBAAD,EAAyB,MAAzB,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC5Nf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAIgM,GAAG,GAAG,IAAV;;AAEA,eAASC,OAAT,CAAiB1Z,CAAjB,EAAoB;AAClB,YAAI2Z,gBAAgB,GAAG,CAAC,yBAAD,EAA2B,gDAA3B,CAAvB;AACA,YAAIC,cAAc,GAAG,OAAO5Z,CAAC,CAAC6Z,UAAT,KAAwB,QAAxB,GAAmC7b,MAAM,CAACJ,IAAP,CAAYoC,CAAC,CAAC6Z,UAAd,EAA0B,CAA1B,CAAnC,GAAkE7Z,CAAC,CAAC6Z,UAAzF;AAEA,eAAO,aAAa7Z,CAAb,IAAkB,YAAYA,CAA9B,IAAmC2Z,gBAAgB,CAAC9mB,OAAjB,CAAyB+mB,cAAzB,MAA6C,CAAC,CAAxF;AACD;AAGD;;;;AAEO,eAAS1nB,IAAT,GAAgB;AACrB,YAAI0D,GAAJ;AAAA,YAAS2B,GAAT;AAAA,YAAcue,MAAd;AAAA,YAAsBpqB,CAAtB;AAAA,YAAyB+kB,CAAzB;AAAA,YAA4Bf,CAA5B;AAAA,YAA+BoK,CAA/B;AAAA,YAAkCjE,MAAlC;AAAA,YAA0C1W,CAA1C;AAAA,YAA6C4a,CAA7C;AAAA,YAAgDzN,KAAK,GAAG,CAAxD;AAAA,YACE0N,MADF;AAAA,YACUC,IAAI,GAAG,CADjB;AAAA,YACoBC,IAAI,GAAG,CAD3B;AAAA,YAC8BC,IAAI,GAAG,CADrC;AAAA,YACwC/I,IAAI,GAAG,CAD/C;AAAA,YACkDgJ,IAAI,GAAG,CADzD;AAAA,YAC4DC,OAAO,GAAG,CADtE;AAAA,YACyEC,EADzE,CADqB,CAIrB;AACA;;AACA,aAAKC,MAAL,GAAcb,OAAO,CAAC,IAAD,CAArB;AACA,aAAKc,MAAL,GAAc,YAAY,IAA1B;AAEA,YAAIC,GAAG,GAAG,KAAV;;AACA,YAAI,WAAW,IAAf,EAAqB;AACnBA,aAAG,GAAG,IAAN;AACD;;AAED,YAAIC,GAAG,GAAG,KAAV;;AACA,YAAI,0BAA0B,IAA9B,EAAoC;AAClCA,aAAG,GAAG,IAAN;AACD;;AAED,YAAID,GAAJ,EAAS;AACPJ,iBAAO,GAAG,KAAKhO,KAAf;AACD;;AAED,YAAIqO,GAAJ,EAAS;AACPpO,eAAK,GAAI,KAAKC,oBAAL,GAA4B,qDAArC;AACD;;AAED,YAAIkO,GAAG,IAAIC,GAAX,EAAgB;AACdT,cAAI,GAAG,KAAKxN,KAAZ;AACD,SAFD,MAEO;AACLyN,cAAI,GAAG,KAAKhO,KAAZ;AACAkF,cAAI,GAAG,KAAK/f,IAAZ;AACA8oB,cAAI,GAAG,KAAK/N,KAAZ;AACAgO,cAAI,GAAG,KAAKvO,IAAZ;;AAEA,cAAIziB,IAAI,CAACgK,GAAL,CAASge,IAAI,GAAGgJ,IAAhB,KAAyBX,GAAzB,IAAgC,CAAC7jB,GAAG,GAAGxM,IAAI,CAACgK,GAAL,CAASge,IAAT,CAAP,KAA0BqI,GAA1D,IACArwB,IAAI,CAACgK,GAAL,CAASwC,GAAG,GAAG,yDAAf,KAA2B6jB,GAD3B,IACkCrwB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,yDAA/B,KAA2CmoB,GAD7E,IAEArwB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAASgnB,IAAT,IAAiB,yDAA1B,KAAsCX,GAF1C,EAE+C;AAC7C,kBAAM,IAAIzH,KAAJ,EAAN;AACD;AACF;;AAED,YAAI2I,MAAM,GAAG,MAAM,KAAK3oB,EAAxB;AACAuF,WAAG,GAAGnO,IAAI,CAACoB,IAAL,CAAUmwB,MAAV,CAAN;;AAEA,YAAIvxB,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,uDAA1B,EAAiC;AAC/BukB,gBAAM,GAAGzsB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAT;AACAwkB,gBAAM,GAAG1sB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAT;AACAsE,aAAG,GAAG,IAAI,KAAK5D,EAAL,GAAU6jB,MAAV,GAAmBA,MAA7B;AACA,eAAKnhB,CAAL,GAASohB,MAAM,GAAGA,MAAlB;AACA,eAAKphB,CAAL,GAAStL,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAU,KAAK0C,CAAf,GAAmB,KAAKA,CAAxB,GAA4BimB,MAA1C,CAAT;AACA,eAAKhzB,CAAL,GAAS,KAAK+M,CAAL,GAAS,KAAK9K,EAAd,GAAmB2N,GAAnB,GAAyB3B,GAAlC;AACAlK,WAAC,GAAG,KAAKgJ,CAAL,GAAS6C,GAAT,IAAgBue,MAAM,GAAG1sB,IAAI,CAACoB,IAAL,CAAUoL,GAAV,CAAzB,CAAJ;AACA6a,WAAC,GAAG/kB,CAAC,GAAGA,CAAJ,GAAO,CAAX;;AAEA,cAAI+kB,CAAC,IAAI,CAAT,EAAY;AACVA,aAAC,GAAG,CAAJ;AACD,WAFD,MAEO;AACLA,aAAC,GAAGrnB,IAAI,CAACoB,IAAL,CAAUimB,CAAV,CAAJ;;AACA,gBAAI,KAAKnf,IAAL,GAAY,CAAhB,EAAmB;AACjBmf,eAAC,GAAG,CAACA,CAAL;AACD;AACF;;AAED,eAAKmK,CAAL,GAASnK,CAAC,IAAI/kB,CAAd;AACA,eAAKkvB,CAAL,IAAUxxB,IAAI,CAAC2C,GAAL,CAAS,8DAAM,KAAKkD,CAAX,EAAc,KAAKqC,IAAnB,EAAyBukB,MAAzB,CAAT,EAA2C,KAAKnhB,CAAhD,CAAV;AACD,SArBD,MAqBO;AACL,eAAKA,CAAL,GAAS,IAAI6C,GAAb;AACA,eAAK5P,CAAL,GAAS,KAAKiC,EAAd;AACA,eAAKgxB,CAAL,GAASlvB,CAAC,GAAG+kB,CAAC,GAAG,CAAjB;AACD;;AAED,YAAIgK,GAAG,IAAIC,GAAX,EAAgB;AACd,cAAID,GAAJ,EAAS;AACPT,kBAAM,GAAG5wB,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACqB,GAAL,CAAS4vB,OAAT,IAAoB3uB,CAA9B,CAAT;;AACA,gBAAI,CAACgvB,GAAL,EAAU;AACRpO,mBAAK,GAAG+N,OAAR;AACD;AACF,WALD,MAKO;AACLL,kBAAM,GAAG1N,KAAT;AACA+N,mBAAO,GAAGjxB,IAAI,CAACkK,IAAL,CAAU5H,CAAC,GAAGtC,IAAI,CAACqB,GAAL,CAASuvB,MAAT,CAAd,CAAV;AACD;;AACD,eAAKa,IAAL,GAAYZ,IAAI,GAAG7wB,IAAI,CAACkK,IAAL,CAAU,OAAOmd,CAAC,GAAG,IAAIA,CAAf,IAAoBrnB,IAAI,CAACsB,GAAL,CAASsvB,MAAT,CAA9B,IAAkD,KAAKtlB,CAA1E;AACD,SAXD,MAWO;AACLgb,WAAC,GAAGtmB,IAAI,CAAC2C,GAAL,CAAS,8DAAM,KAAKkD,CAAX,EAAcmiB,IAAd,EAAoBhoB,IAAI,CAACqB,GAAL,CAAS2mB,IAAT,CAApB,CAAT,EAA8C,KAAK1c,CAAnD,CAAJ;AACAolB,WAAC,GAAG1wB,IAAI,CAAC2C,GAAL,CAAS,8DAAM,KAAKkD,CAAX,EAAcmrB,IAAd,EAAoBhxB,IAAI,CAACqB,GAAL,CAAS2vB,IAAT,CAApB,CAAT,EAA8C,KAAK1lB,CAAnD,CAAJ;AACA+b,WAAC,GAAG,KAAKmK,CAAL,GAASlL,CAAb;AACAvQ,WAAC,GAAG,CAAC2a,CAAC,GAAGpK,CAAL,KAAWoK,CAAC,GAAGpK,CAAf,CAAJ;AACAqK,WAAC,GAAG,KAAKa,CAAL,GAAS,KAAKA,CAAlB;AACAb,WAAC,GAAG,CAACA,CAAC,GAAGD,CAAC,GAAGpK,CAAT,KAAeqK,CAAC,GAAGD,CAAC,GAAGpK,CAAvB,CAAJ;AACA9Z,aAAG,GAAGskB,IAAI,GAAGC,IAAb;;AAEA,cAAIvkB,GAAG,GAAG,CAACxM,IAAI,CAAC0xB,EAAhB,EAAoB;AAClBX,gBAAI,IAAG,wDAAP;AACD,WAFD,MAEO,IAAIvkB,GAAG,GAAGxM,IAAI,CAAC0xB,EAAf,EAAmB;AACxBX,gBAAI,IAAI,wDAAR;AACD;;AAED,eAAKU,IAAL,GAAY,mEAAW,OAAOX,IAAI,GAAGC,IAAd,IAAsB/wB,IAAI,CAAC2M,IAAL,CAAUgkB,CAAC,GAAG3wB,IAAI,CAACsB,GAAL,CAAS,MAAM,KAAKgK,CAAX,IAAgBwlB,IAAI,GAAGC,IAAvB,CAAT,CAAJ,GAA6Chb,CAAvD,IAA4D,KAAKzK,CAAlG,CAAZ;AACAslB,gBAAM,GAAG5wB,IAAI,CAAC2M,IAAL,CAAU,IAAI3M,IAAI,CAACqB,GAAL,CAAS,KAAKiK,CAAL,GAAS,mEAAWwlB,IAAI,GAAG,KAAKW,IAAvB,CAAlB,CAAJ,IAAuDpK,CAAC,GAAG,IAAIA,CAA/D,CAAV,CAAT;AACAnE,eAAK,GAAG+N,OAAO,GAAGjxB,IAAI,CAACkK,IAAL,CAAU5H,CAAC,GAAGtC,IAAI,CAACqB,GAAL,CAASuvB,MAAT,CAAd,CAAlB;AACD;;AAED,aAAKe,MAAL,GAAc3xB,IAAI,CAACqB,GAAL,CAASuvB,MAAT,CAAd;AACA,aAAKgB,MAAL,GAAc5xB,IAAI,CAACuB,GAAL,CAASqvB,MAAT,CAAd;AACA,aAAKiB,MAAL,GAAc7xB,IAAI,CAACqB,GAAL,CAAS6hB,KAAT,CAAd;AACA,aAAK4O,MAAL,GAAc9xB,IAAI,CAACuB,GAAL,CAAS2hB,KAAT,CAAd;AAEA,aAAK6O,EAAL,GAAU,IAAI,KAAKzmB,CAAnB;AACA,aAAK0mB,GAAL,GAAW,KAAKzzB,CAAL,GAAS,KAAKwzB,EAAzB;AACA,aAAKE,GAAL,GAAW,IAAI,KAAKD,GAApB;AACAd,UAAE,GAAG,KAAK3yB,CAAL,GAAS,KAAK+M,CAAnB;;AAEA,YAAI,KAAK6lB,MAAT,EAAiB;AACf,eAAKe,GAAL,GAAW,CAAX;AACD,SAFD,MAEO;AACL,eAAKA,GAAL,GAAWlyB,IAAI,CAACgK,GAAL,CAAS,KAAKgoB,GAAL,GAAWhyB,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACoB,IAAL,CAAUkB,CAAC,GAAGA,CAAJ,GAAQ,CAAlB,IAAuBtC,IAAI,CAACuB,GAAL,CAAS0vB,OAAT,CAAjC,CAApB,CAAX;;AAEA,cAAI,KAAK/oB,IAAL,GAAY,CAAhB,EAAmB;AACjB,iBAAKgqB,GAAL,GAAW,CAAE,KAAKA,GAAlB;;AAEH;;AAED7K,SAAC,GAAG,MAAMuJ,MAAV;AACA,aAAKuB,QAAL,GAAgB,KAAKH,GAAL,GAAWhyB,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAS,2DAAS+lB,CAAlB,CAAT,CAA3B;AACA,aAAK+K,QAAL,GAAgB,KAAKJ,GAAL,GAAWhyB,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAS,2DAAS+lB,CAAlB,CAAT,CAA3B;AACD;AAGD;;;;AAEO,eAASzoB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAIvP,MAAM,GAAG,EAAb;AACA,YAAI6rB,CAAJ,EAAOzxB,CAAP,EAAU0xB,CAAV,EAAa5zB,CAAb,EAAgB6zB,CAAhB,EAAmBpnB,IAAnB,EAAyB+f,CAAzB,EAA4B9hB,CAA5B;AACA2M,SAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAF,GAAM,KAAKgvB,IAAjB;;AAEA,YAAIzxB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS+L,CAAC,CAACrT,CAAX,IAAgB,yDAAzB,IAAoC,uDAAxC,EAA+C;AAC7C6vB,WAAC,GAAG,KAAKf,CAAL,GAASxxB,IAAI,CAAC2C,GAAL,CAAS,8DAAM,KAAKkD,CAAX,EAAckQ,CAAC,CAACrT,CAAhB,EAAmB1C,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAnB,CAAT,EAA4C,KAAK4I,CAAjD,CAAb;AAEAH,cAAI,GAAG,IAAIonB,CAAX;AACAF,WAAC,GAAG,OAAOE,CAAC,GAAGpnB,IAAX,CAAJ;AACAvK,WAAC,GAAG,OAAO2xB,CAAC,GAAGpnB,IAAX,CAAJ;AACAzM,WAAC,GAAGsB,IAAI,CAACqB,GAAL,CAAS,KAAKiK,CAAL,GAASyK,CAAC,CAACtT,CAApB,CAAJ;AACA6vB,WAAC,GAAG,CAACD,CAAC,GAAG,KAAKV,MAAT,GAAkBjzB,CAAC,GAAG,KAAKkzB,MAA5B,IAAsChxB,CAA1C;;AAEA,cAAIZ,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAASsoB,CAAT,IAAc,GAAvB,IAA8B,uDAAlC,EAAyC;AACvC,kBAAM,IAAI1J,KAAJ,EAAN;AACD;;AAEDxf,WAAC,GAAG,MAAM,KAAK4oB,GAAX,GAAiBhyB,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAIkmB,CAAL,KAAS,IAAIA,CAAb,CAAT,CAArB;AACAnnB,cAAI,GAAGnL,IAAI,CAACuB,GAAL,CAAS,KAAK+J,CAAL,GAASyK,CAAC,CAACtT,CAApB,CAAP;;AAEA,cAAIzC,IAAI,CAACgK,GAAL,CAASmB,IAAT,IAAiBklB,GAArB,EAA0B;AACxBnF,aAAC,GAAG,KAAK3sB,CAAL,GAASwX,CAAC,CAACtT,CAAf;AACD,WAFD,MAEO;AACLyoB,aAAC,GAAG,KAAK8G,GAAL,GAAWhyB,IAAI,CAAC2X,KAAL,CAAY0a,CAAC,GAAG,KAAKT,MAAT,GAAkBlzB,CAAC,GAAG,KAAKizB,MAAvC,EAAgDxmB,IAAhD,CAAf;;AAEH,SArBD,MAqBO;AACL/B,WAAC,GAAG2M,CAAC,CAACrT,CAAF,GAAM,CAAN,GAAU,KAAKyvB,QAAf,GAA0B,KAAKC,QAAnC;AACAlH,WAAC,GAAG,KAAK8G,GAAL,GAAWjc,CAAC,CAACrT,CAAjB;AACD;;AAED,YAAI,KAAK0uB,MAAT,EAAiB;AACf5qB,gBAAM,CAAC/D,CAAP,GAAWyoB,CAAX;AACA1kB,gBAAM,CAAC9D,CAAP,GAAW0G,CAAX;AACD,SAHD,MAGO;AACL8hB,WAAC,IAAI,KAAKgH,GAAV;AACA1rB,gBAAM,CAAC/D,CAAP,GAAW2G,CAAC,GAAG,KAAK0oB,MAAT,GAAkB5G,CAAC,GAAG,KAAK2G,MAAtC;AACArrB,gBAAM,CAAC9D,CAAP,GAAWwoB,CAAC,GAAG,KAAK4G,MAAT,GAAkB1oB,CAAC,GAAG,KAAKyoB,MAAtC;AACD;;AAEDrrB,cAAM,CAAC/D,CAAP,GAAY,KAAKnC,CAAL,GAASkG,MAAM,CAAC/D,CAAhB,GAAoB,KAAK8gB,EAArC;AACA/c,cAAM,CAAC9D,CAAP,GAAY,KAAKpC,CAAL,GAASkG,MAAM,CAAC9D,CAAhB,GAAoB,KAAK+gB,EAArC;AAEA,eAAOjd,MAAP;AACD;;AAEM,eAAS3H,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAImV,CAAJ,EAAO9hB,CAAP,EAAUopB,EAAV,EAAcC,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B;AACA,YAAIpsB,MAAM,GAAG,EAAb;AAEAuP,SAAC,CAACtT,CAAF,GAAM,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,KAAmB,MAAM,KAAKjjB,CAA9B,CAAN;AACAyV,SAAC,CAACrT,CAAF,GAAM,CAACqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,KAAmB,MAAM,KAAKnjB,CAA9B,CAAN;;AAEA,YAAI,KAAK8wB,MAAT,EAAiB;AACfhoB,WAAC,GAAG2M,CAAC,CAACrT,CAAN;AACAwoB,WAAC,GAAGnV,CAAC,CAACtT,CAAN;AACD,SAHD,MAGO;AACL2G,WAAC,GAAG2M,CAAC,CAACtT,CAAF,GAAM,KAAKqvB,MAAX,GAAoB/b,CAAC,CAACrT,CAAF,GAAM,KAAKmvB,MAAnC;AACA3G,WAAC,GAAGnV,CAAC,CAACrT,CAAF,GAAM,KAAKovB,MAAX,GAAoB/b,CAAC,CAACtT,CAAF,GAAM,KAAKovB,MAA/B,GAAwC,KAAKK,GAAjD;AACD;;AAEDM,UAAE,GAAGxyB,IAAI,CAACkL,GAAL,CAAS,CAAC,KAAK+mB,GAAN,GAAY7oB,CAArB,CAAL;AACAqpB,UAAE,GAAG,OAAOD,EAAE,GAAG,IAAIA,EAAhB,CAAL;AACAE,UAAE,GAAG,OAAOF,EAAE,GAAG,IAAIA,EAAhB,CAAL;AACAG,UAAE,GAAG3yB,IAAI,CAACqB,GAAL,CAAS,KAAK4wB,GAAL,GAAW/G,CAApB,CAAL;AACA0H,UAAE,GAAG,CAACD,EAAE,GAAG,KAAKf,MAAV,GAAmBa,EAAE,GAAG,KAAKd,MAA9B,IAAwCe,EAA7C;;AAEA,YAAI1yB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS4oB,EAAT,IAAe,CAAxB,IAA6B,uDAAjC,EAAwC;AACtCpsB,gBAAM,CAAC/D,CAAP,GAAW,CAAX;AACA+D,gBAAM,CAAC9D,CAAP,GAAWkwB,EAAE,GAAG,CAAL,GAAS,CAAC,yDAAV,GAAoB,yDAA/B;AACD,SAHD,MAGO;AACLpsB,gBAAM,CAAC9D,CAAP,GAAW,KAAK8uB,CAAL,GAASxxB,IAAI,CAACoB,IAAL,CAAU,CAAC,IAAIwxB,EAAL,KAAY,IAAIA,EAAhB,CAAV,CAApB;AACApsB,gBAAM,CAAC9D,CAAP,GAAW,8DAAM,KAAKmD,CAAX,EAAc7F,IAAI,CAAC2C,GAAL,CAAS6D,MAAM,CAAC9D,CAAhB,EAAmB,IAAI,KAAK4I,CAA5B,CAAd,CAAX;;AAEA,cAAI9E,MAAM,CAAC9D,CAAP,KAAa6T,QAAjB,EAA2B;AACzB,kBAAM,IAAIqS,KAAJ,EAAN;AACD;;AAEDpiB,gBAAM,CAAC/D,CAAP,GAAW,CAAC,KAAKsvB,EAAN,GAAW/xB,IAAI,CAAC2X,KAAL,CAAY8a,EAAE,GAAG,KAAKb,MAAV,GAAmBe,EAAE,GAAG,KAAKhB,MAAzC,EAAkD3xB,IAAI,CAACuB,GAAL,CAAS,KAAK0wB,GAAL,GAAW/G,CAApB,CAAlD,CAAtB;AACD;;AAED1kB,cAAM,CAAC/D,CAAP,IAAY,KAAKgvB,IAAjB;AAEA,eAAOjrB,MAAP;AACD;;AAEM,UAAI6d,KAAK,GAAG,CAAC,yBAAD,EAA4B,yBAA5B,EAAuD,gDAAvD,EAAyG,kDAAzG,EAA6J,wCAA7J,EAAuM,kBAAvM,EAA2N,OAA3N,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC3Of;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,eAASvb,IAAT,GAAgB;AACrB;;AAEA;;AAEA,aAAKihB,OAAL,GAAe/pB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAf;AACA,aAAK8hB,OAAL,GAAehqB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAf;AACD;AAED;;;;AAEO,eAAStJ,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3K,MAAJ,EAAYqB,MAAZ;AAAoB;;AACpB,YAAIoZ,IAAJ;AAAU;;AACV,YAAIqE,MAAJ;AAAY;;AACZ,YAAIC,GAAJ;AAAS;;AACT,YAAIxB,CAAJ,EAAOlmB,CAAP,EAAUC,CAAV;AACA,YAAItD,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA;;;AAEAmjB,YAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAP;AAEAxX,cAAM,GAAGpL,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAT;AACAsN,cAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAT;AAEA+qB,cAAM,GAAGlqB,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAT;AACA8C,SAAC,GAAG,KAAKoB,OAAL,GAAe3e,MAAf,GAAwB,KAAK4e,OAAL,GAAevd,MAAf,GAAwByd,MAApD;AACAC,WAAG,GAAG,CAAN;;AACA,YAAKxB,CAAC,GAAG,CAAL,IAAY3oB,IAAI,CAACgK,GAAL,CAAS2e,CAAT,KAAe,uDAA/B,EAAuC;AACrClmB,WAAC,GAAG,KAAKnC,CAAL,GAAS6pB,GAAT,GAAe1d,MAAf,GAAwBzM,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAA5B;AACAnjB,WAAC,GAAG,KAAK+gB,EAAL,GAAU,KAAKnjB,CAAL,GAAS6pB,GAAT,IAAgB,KAAKH,OAAL,GAAe5e,MAAf,GAAwB,KAAK2e,OAAL,GAAetd,MAAf,GAAwByd,MAAhE,CAAd;AACD;;AACDnU,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIsP,EAAJ;AAAQ;;AACR,YAAIhf,CAAJ;AAAO;;AACP,YAAI2gB,IAAJ,EAAUC,IAAV;AAAgB;;AAChB,YAAIza,GAAJ;AACA,YAAIpN,GAAJ,EAASD,GAAT;AACA;;;AAEA4W,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA4B,UAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAL;AACA2D,SAAC,GAAG,8DAAMgf,EAAE,GAAG,KAAK/kB,CAAhB,CAAJ;AAEA0mB,YAAI,GAAGhnB,IAAI,CAACqB,GAAL,CAASgF,CAAT,CAAP;AACA4gB,YAAI,GAAGjnB,IAAI,CAACuB,GAAL,CAAS8E,CAAT,CAAP;AAEAjH,WAAG,GAAG,KAAKwjB,KAAX;;AACA,YAAI5iB,IAAI,CAACgK,GAAL,CAASqb,EAAT,KAAgB,uDAApB,EAA2B;AACzBlmB,aAAG,GAAG,KAAK+I,IAAX;AACA6N,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD;;AACD5W,WAAG,GAAG,8DAAM8nB,IAAI,GAAG,KAAK8C,OAAZ,GAAuBhU,CAAC,CAACrT,CAAF,GAAMskB,IAAN,GAAa,KAAKgD,OAAnB,GAA8B3E,EAA1D,CAAN;AACA7Y,WAAG,GAAGxM,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,yDAA5B;;AACA,YAAIlI,IAAI,CAACgK,GAAL,CAASwC,GAAT,KAAiB,uDAArB,EAA4B;AAC1B,cAAI,KAAKtE,IAAL,IAAa,CAAjB,EAAoB;AAClB9I,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgB,CAAEsT,CAAC,CAACrT,CAApB,CAAxB,CAAN;AACD,WAFD,MAGK;AACHtD,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW,CAAC5B,CAAC,CAACtT,CAAd,EAAiBsT,CAAC,CAACrT,CAAnB,CAAxB,CAAN;AACD;;AACDqT,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD;;AACD3W,WAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAY5B,CAAC,CAACtT,CAAF,GAAMukB,IAAlB,EAAyB3B,EAAE,GAAG,KAAK2E,OAAV,GAAoB/C,IAApB,GAA2BlR,CAAC,CAACrT,CAAF,GAAM,KAAKqnB,OAAX,GAAqB/C,IAAzE,CAAxB,CAAN;AACAjR,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,OAAD,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACrFf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAI3W,QAAQ,GAAG,EAAf;;AAEO,eAAS5E,IAAT,GAAgB;AACrB;;AAEA,aAAKqC,IAAL,GAAY,KAAK/C,CAAL,GAAS,KAAK9H,CAA1B;AACA,aAAKsI,EAAL,GAAU,IAAI5I,IAAI,CAAC2C,GAAL,CAAS,KAAKwI,IAAd,EAAoB,CAApB,CAAd,CAJqB,CAIiB;;AACtC,aAAKtF,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU,KAAKwH,EAAf,CAAT;AACA,aAAKmD,EAAL,GAAU,6DAAK,KAAKnD,EAAV,CAAV;AACA,aAAK3G,EAAL,GAAU,6DAAK,KAAK2G,EAAV,CAAV;AACA,aAAKoD,EAAL,GAAU,6DAAK,KAAKpD,EAAV,CAAV;AACA,aAAKqD,EAAL,GAAU,6DAAK,KAAKrD,EAAV,CAAV;AACA,aAAK2e,GAAL,GAAW,KAAKjnB,CAAL,GAAS,6DAAK,KAAKyL,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC,KAAK/D,IAA9C,CAApB,CAVqB,CAUoD;AAC1E;AAED;;;;AAEO,eAAStJ,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAID,CAAJ,EAAOC,CAAP,EAAUmwB,EAAV;AACA,YAAIhN,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;AACAiQ,UAAE,GAAGhN,IAAI,GAAG7lB,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAZ;;AACA,YAAI,KAAKmJ,MAAT,EAAiB;AACf,cAAItI,IAAI,CAACgK,GAAL,CAAS7K,GAAT,KAAiB,uDAArB,EAA4B;AAC1BsD,aAAC,GAAG,KAAKnC,CAAL,GAASulB,IAAb;AACAnjB,aAAC,GAAG,CAAC,CAAD,GAAK,KAAKpC,CAAV,GAAc,KAAK4H,IAAvB;AACD,WAHD,MAIK;AACHzF,aAAC,GAAG,KAAKnC,CAAL,GAASN,IAAI,CAACqB,GAAL,CAASwxB,EAAT,CAAT,GAAwB7yB,IAAI,CAACsB,GAAL,CAASnC,GAAT,CAA5B;AACAuD,aAAC,GAAG,KAAKpC,CAAL,IAAU,mEAAWnB,GAAG,GAAG,KAAK+I,IAAtB,IAA8B,CAAC,IAAIlI,IAAI,CAACuB,GAAL,CAASsxB,EAAT,CAAL,IAAqB7yB,IAAI,CAACsB,GAAL,CAASnC,GAAT,CAA7D,CAAJ;AACD;AACF,SATD,MAUK;AACH,cAAIa,IAAI,CAACgK,GAAL,CAAS7K,GAAT,KAAiB,uDAArB,EAA4B;AAC1BsD,aAAC,GAAG,KAAKnC,CAAL,GAASulB,IAAb;AACAnjB,aAAC,GAAG,CAAC,CAAD,GAAK,KAAK6kB,GAAd;AACD,WAHD,MAIK;AACH,gBAAIE,EAAE,GAAG,2DAAG,KAAKnnB,CAAR,EAAW,KAAKuF,CAAhB,EAAmB7F,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAnB,IAAoCa,IAAI,CAACsB,GAAL,CAASnC,GAAT,CAA7C;AACAsD,aAAC,GAAGglB,EAAE,GAAGznB,IAAI,CAACqB,GAAL,CAASwxB,EAAT,CAAT;AACAnwB,aAAC,GAAG,KAAKpC,CAAL,GAAS,6DAAK,KAAKyL,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyC9M,GAAzC,CAAT,GAAyD,KAAKooB,GAA9D,GAAoEE,EAAE,IAAI,IAAIznB,IAAI,CAACuB,GAAL,CAASsxB,EAAT,CAAR,CAA1E;AACD;AAEF;;AACD9c,SAAC,CAACtT,CAAF,GAAMA,CAAC,GAAG,KAAK8gB,EAAf;AACAxN,SAAC,CAACrT,CAAF,GAAMA,CAAC,GAAG,KAAK+gB,EAAf;AACA,eAAO1N,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI3W,GAAJ,EAASD,GAAT,EAAcsD,CAAd,EAAiBC,CAAjB,EAAoBe,CAApB;AACA,YAAIkkB,EAAJ,EAAQmL,EAAR;AACA,YAAIlnB,GAAJ,EAASC,IAAT;AACApJ,SAAC,GAAGsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAf;AACA7gB,SAAC,GAAGqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAf;;AAEA,YAAI,KAAKnb,MAAT,EAAiB;AACf,cAAItI,IAAI,CAACgK,GAAL,CAAStH,CAAC,GAAG,KAAKpC,CAAL,GAAS,KAAK4H,IAA3B,KAAoC,uDAAxC,EAA+C;AAC7C9I,eAAG,GAAG,mEAAWqD,CAAC,GAAG,KAAKnC,CAAT,GAAa,KAAKsiB,KAA7B,CAAN;AACAzjB,eAAG,GAAG,CAAN;AACD,WAHD,MAIK;AACHwoB,cAAE,GAAG,KAAKzf,IAAL,GAAYxF,CAAC,GAAG,KAAKpC,CAA1B;AACAwyB,cAAE,GAAGrwB,CAAC,GAAGA,CAAJ,GAAQ,KAAKnC,CAAb,GAAiB,KAAKA,CAAtB,GAA0BqnB,EAAE,GAAGA,EAApC;AACA/b,eAAG,GAAG+b,EAAN;AACA,gBAAI3B,MAAJ;;AACA,iBAAKviB,CAAC,GAAGiK,QAAT,EAAmBjK,CAAnB,EAAsB,EAAEA,CAAxB,EAA2B;AACzBuiB,oBAAM,GAAGhmB,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAAT;AACAC,kBAAI,GAAG,CAAC,CAAD,IAAM8b,EAAE,IAAI/b,GAAG,GAAGoa,MAAN,GAAe,CAAnB,CAAF,GAA0Bpa,GAA1B,GAAgC,OAAOA,GAAG,GAAGA,GAAN,GAAYknB,EAAnB,IAAyB9M,MAA/D,KAA0E,CAACpa,GAAG,GAAG+b,EAAP,IAAa3B,MAAb,GAAsB,CAAhG,CAAP;AACApa,iBAAG,IAAIC,IAAP;;AACA,kBAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,uDAAtB,EAA6B;AAC3B1M,mBAAG,GAAGyM,GAAN;AACA;AACD;AACF;;AACDxM,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAc5iB,IAAI,CAACkK,IAAL,CAAUzH,CAAC,GAAGzC,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAAJ,GAAoB,KAAKtL,CAAnC,CAAD,GAA0CN,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAlE,CAAN;AACD;AACF,SArBD,MAsBK;AACH,cAAIa,IAAI,CAACgK,GAAL,CAAStH,CAAC,GAAG,KAAK6kB,GAAlB,KAA0B,uDAA9B,EAAqC;AACnCpoB,eAAG,GAAG,CAAN;AACAC,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAangB,CAAC,GAAG,KAAKnC,CAAjC,CAAN;AACD,WAHD,MAIK;AAEHqnB,cAAE,GAAG,CAAC,KAAKJ,GAAL,GAAW7kB,CAAZ,IAAiB,KAAKpC,CAA3B;AACAwyB,cAAE,GAAGrwB,CAAC,GAAGA,CAAJ,GAAQ,KAAKnC,CAAb,GAAiB,KAAKA,CAAtB,GAA0BqnB,EAAE,GAAGA,EAApC;AACA/b,eAAG,GAAG+b,EAAN;AACA,gBAAIE,EAAJ,EAAQkL,GAAR,EAAaC,IAAb,EAAmBC,EAAnB;AACA,gBAAIzmB,GAAJ;;AACA,iBAAK/I,CAAC,GAAGiK,QAAT,EAAmBjK,CAAnB,EAAsB,EAAEA,CAAxB,EAA2B;AACzB+I,iBAAG,GAAG,KAAK3G,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAf;AACAic,gBAAE,GAAG7nB,IAAI,CAACoB,IAAL,CAAU,IAAIoL,GAAG,GAAGA,GAApB,IAA2BxM,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAAhC;AACAmnB,iBAAG,GAAG,KAAKzyB,CAAL,GAAS,6DAAK,KAAKyL,EAAV,EAAc,KAAK9J,EAAnB,EAAuB,KAAK+J,EAA5B,EAAgC,KAAKC,EAArC,EAAyCL,GAAzC,CAAf;AACAonB,kBAAI,GAAG,KAAKjnB,EAAL,GAAU,IAAI,KAAK9J,EAAT,GAAcjC,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAAxB,GAA4C,IAAI,KAAKI,EAAT,GAAchM,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAA1D,GAA8E,IAAI,KAAKK,EAAT,GAAcjM,IAAI,CAACuB,GAAL,CAAS,IAAIqK,GAAb,CAAnG;AACAqnB,gBAAE,GAAGF,GAAG,GAAG,KAAKzyB,CAAhB;AACAuL,kBAAI,GAAG,CAAC8b,EAAE,IAAIE,EAAE,GAAGoL,EAAL,GAAU,CAAd,CAAF,GAAqBA,EAArB,GAA0B,MAAMpL,EAAN,IAAYoL,EAAE,GAAGA,EAAL,GAAUH,EAAtB,CAA3B,KAAyD,KAAKlqB,EAAL,GAAU5I,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAAV,IAA+BqnB,EAAE,GAAGA,EAAL,GAAUH,EAAV,GAAe,IAAInL,EAAJ,GAASsL,EAAvD,KAA8D,IAAIpL,EAAlE,IAAwE,CAACF,EAAE,GAAGsL,EAAN,KAAapL,EAAE,GAAGmL,IAAL,GAAY,IAAIhzB,IAAI,CAACqB,GAAL,CAAS,IAAIuK,GAAb,CAA7B,CAAxE,GAA0HonB,IAAnL,CAAP;AACApnB,iBAAG,IAAIC,IAAP;;AACA,kBAAI7L,IAAI,CAACgK,GAAL,CAAS6B,IAAT,KAAkB,uDAAtB,EAA6B;AAC3B1M,mBAAG,GAAGyM,GAAN;AACA;AACD;AACF,aAnBE,CAqBH;;;AACAic,cAAE,GAAG7nB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAU5I,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAT,EAAwB,CAAxB,CAAxB,IAAsDa,IAAI,CAACsB,GAAL,CAASnC,GAAT,CAA3D;AACAC,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAACkK,IAAL,CAAUzH,CAAC,GAAGolB,EAAJ,GAAS,KAAKvnB,CAAxB,IAA6BN,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAArD,CAAN;AACD;AACF;;AAED4W,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,WAAD,EAAc,MAAd,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACjIf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sD,CAAA;AACA;;AAIA;;;AACA,UAAI6O,SAAS,GAAG;AACZC,aAAK,EAAE,CADK;AAEZC,aAAK,EAAE,CAFK;AAGZC,YAAI,EAAE,CAHM;AAIZC,YAAI,EAAE,CAJM;AAKZC,WAAG,EAAE,CALO;AAMZC,cAAM,EAAE;AANI,OAAhB;AASA,UAAIC,SAAS,GAAG;AACZC,cAAM,EAAE,CADI;AAEZC,cAAM,EAAE,CAFI;AAGZC,cAAM,EAAE,CAHI;AAIZC,cAAM,EAAE;AAJI,OAAhB;;AAOO,eAAS/qB,IAAT,GAAgB;AAErB,aAAKya,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKvb,IAAL,GAAY,KAAKA,IAAL,IAAa,CAAzB;AACA,aAAK0a,KAAL,GAAa,KAAKA,KAAL,IAAc,CAA3B;AACA,aAAKF,MAAL,GAAc,KAAKA,MAAL,IAAe,CAA7B;AACA,aAAK4F,KAAL,GAAa,KAAKA,KAAL,IAAc,kCAA3B;AAEA;;AACA,YAAI,KAAKpgB,IAAL,IAAa,4DAAU,2DAAS,GAApC,EAAyC;AACvC,eAAK4rB,IAAL,GAAYZ,SAAS,CAACK,GAAtB;AACD,SAFD,MAEO,IAAI,KAAKrrB,IAAL,IAAa,EAAE,4DAAU,2DAAS,GAArB,CAAjB,EAA4C;AACjD,eAAK4rB,IAAL,GAAYZ,SAAS,CAACM,MAAtB;AACD,SAFM,MAEA,IAAIxzB,IAAI,CAACgK,GAAL,CAAS,KAAK4Y,KAAd,KAAwB,wDAA5B,EAAoC;AACzC,eAAKkR,IAAL,GAAYZ,SAAS,CAACC,KAAtB;AACD,SAFM,MAEA,IAAInzB,IAAI,CAACgK,GAAL,CAAS,KAAK4Y,KAAd,KAAwB,4DAAU,wDAAtC,EAA8C;AACnD,eAAKkR,IAAL,GAAY,KAAKlR,KAAL,GAAa,GAAb,GAAmBsQ,SAAS,CAACE,KAA7B,GAAqCF,SAAS,CAACI,IAA3D;AACD,SAFM,MAEA;AACL,eAAKQ,IAAL,GAAYZ,SAAS,CAACG,IAAtB;AACD;AAED;;;;AAEA,YAAI,KAAKzqB,EAAL,KAAY,CAAhB,EAAmB;AACjB,eAAKmrB,WAAL,GAAmB,IAAI,CAAC,KAAKzzB,CAAL,GAAS,KAAK8H,CAAf,IAAoB,KAAK9H,CAAhD;AACA,eAAK0zB,mBAAL,GAA2B,KAAKD,WAAL,GAAmB,KAAKA,WAAnD;AACD;AACF,O,CAED;AACA;;;AACO,eAASn1B,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAIke,EAAE,GAAG;AAACxxB,WAAC,EAAE,CAAJ;AAAOC,WAAC,EAAE;AAAV,SAAT;AACA,YAAIvD,GAAJ,EAASC,GAAT;AACA,YAAIomB,KAAJ,EAAW5Z,GAAX;AACA,YAAIvC,CAAJ,EAAO9G,EAAP;AACA;;AACA,YAAI2xB,IAAI,GAAG;AAAC9X,eAAK,EAAE;AAAR,SAAX,CANyB,CAQzB;;AACArG,SAAC,CAACtT,CAAF,IAAO,KAAKmgB,KAAZ;AAEA;;;;AAGA,YAAI,KAAKha,EAAL,KAAY,CAAhB,EAAmB;AAAC;AAClBzJ,aAAG,GAAGa,IAAI,CAAC2M,IAAL,CAAU,KAAKqnB,mBAAL,GAA2Bh0B,IAAI,CAACsB,GAAL,CAASyU,CAAC,CAACrT,CAAX,CAArC,CAAN;AACD,SAFD,MAEO;AACLvD,aAAG,GAAG4W,CAAC,CAACrT,CAAR;AACD;AAED;;;;;;;AAKAtD,WAAG,GAAG2W,CAAC,CAACtT,CAAR,CAzByB,CAyBd;;AACX,YAAI,KAAKqxB,IAAL,KAAcZ,SAAS,CAACK,GAA5B,EAAiC;AAC/B3nB,aAAG,GAAG,4DAAUzM,GAAhB;;AACA,cAAIC,GAAG,IAAI,wDAAP,IAAiBA,GAAG,IAAI,4DAAU,wDAAtC,EAA8C;AAC5C80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACAlO,iBAAK,GAAGpmB,GAAG,GAAG,yDAAd;AACD,WAHD,MAGO,IAAIA,GAAG,GAAG,4DAAU,wDAAhB,IAA0BA,GAAG,IAAI,EAAE,4DAAU,wDAAZ,CAArC,EAA0D;AAC/D80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACE,MAAvB;AACAnO,iBAAK,GAAIpmB,GAAG,GAAG,GAAN,GAAYA,GAAG,GAAG,qDAAlB,GAAwBA,GAAG,GAAG,qDAAvC;AACD,WAHM,MAGA,IAAIA,GAAG,GAAG,EAAE,4DAAU,wDAAZ,CAAN,IAA6BA,GAAG,IAAI,CAAC,wDAAzC,EAAiD;AACtD80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACG,MAAvB;AACApO,iBAAK,GAAGpmB,GAAG,GAAG,yDAAd;AACD,WAHM,MAGA;AACL80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACI,MAAvB;AACArO,iBAAK,GAAGpmB,GAAR;AACD;AACF,SAfD,MAeO,IAAI,KAAK00B,IAAL,KAAcZ,SAAS,CAACM,MAA5B,EAAoC;AACzC5nB,aAAG,GAAG,4DAAUzM,GAAhB;;AACA,cAAIC,GAAG,IAAI,wDAAP,IAAiBA,GAAG,IAAI,4DAAU,wDAAtC,EAA8C;AAC5C80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACAlO,iBAAK,GAAG,CAACpmB,GAAD,GAAO,yDAAf;AACD,WAHD,MAGO,IAAIA,GAAG,GAAG,wDAAN,IAAgBA,GAAG,IAAI,CAAC,wDAA5B,EAAoC;AACzC80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACE,MAAvB;AACAnO,iBAAK,GAAG,CAACpmB,GAAT;AACD,WAHM,MAGA,IAAIA,GAAG,GAAG,CAAC,wDAAP,IAAiBA,GAAG,IAAI,EAAE,4DAAU,wDAAZ,CAA5B,EAAiD;AACtD80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACG,MAAvB;AACApO,iBAAK,GAAG,CAACpmB,GAAD,GAAO,yDAAf;AACD,WAHM,MAGA;AACL80B,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACI,MAAvB;AACArO,iBAAK,GAAIpmB,GAAG,GAAG,GAAN,GAAY,CAACA,GAAD,GAAO,qDAAnB,GAAyB,CAACA,GAAD,GAAO,qDAAzC;AACD;AACF,SAfM,MAeA;AACL,cAAIiN,CAAJ,EAAOlC,CAAP,EAAU0D,CAAV;AACA,cAAIsmB,MAAJ,EAAYC,MAAZ;AACA,cAAIC,MAAJ,EAAYnK,MAAZ;;AAEA,cAAI,KAAK4J,IAAL,KAAcZ,SAAS,CAACE,KAA5B,EAAmC;AACjCh0B,eAAG,GAAGk1B,oBAAoB,CAACl1B,GAAD,EAAM,CAAC,yDAAP,CAA1B;AACD,WAFD,MAEO,IAAI,KAAK00B,IAAL,KAAcZ,SAAS,CAACG,IAA5B,EAAkC;AACvCj0B,eAAG,GAAGk1B,oBAAoB,CAACl1B,GAAD,EAAM,CAAC,qDAAP,CAA1B;AACD,WAFM,MAEA,IAAI,KAAK00B,IAAL,KAAcZ,SAAS,CAACI,IAA5B,EAAkC;AACvCl0B,eAAG,GAAGk1B,oBAAoB,CAACl1B,GAAD,EAAM,CAAC,yDAAP,CAA1B;AACD;;AACD+0B,gBAAM,GAAGn0B,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAT;AACAi1B,gBAAM,GAAGp0B,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAT;AACAk1B,gBAAM,GAAGr0B,IAAI,CAACqB,GAAL,CAASjC,GAAT,CAAT;AACA8qB,gBAAM,GAAGlqB,IAAI,CAACuB,GAAL,CAASnC,GAAT,CAAT;AACAiN,WAAC,GAAG+nB,MAAM,GAAGlK,MAAb;AACA/f,WAAC,GAAGiqB,MAAM,GAAGC,MAAb;AACAxmB,WAAC,GAAGsmB,MAAJ;;AAEA,cAAI,KAAKL,IAAL,KAAcZ,SAAS,CAACC,KAA5B,EAAmC;AACjCvnB,eAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAU1a,CAAV,CAAN;AACAmZ,iBAAK,GAAG+O,wBAAwB,CAAC3oB,GAAD,EAAMiC,CAAN,EAAS1D,CAAT,EAAY+pB,IAAZ,CAAhC;AACD,WAHD,MAGO,IAAI,KAAKJ,IAAL,KAAcZ,SAAS,CAACE,KAA5B,EAAmC;AACxCxnB,eAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAU5c,CAAV,CAAN;AACAqb,iBAAK,GAAG+O,wBAAwB,CAAC3oB,GAAD,EAAMiC,CAAN,EAAS,CAACxB,CAAV,EAAa6nB,IAAb,CAAhC;AACD,WAHM,MAGA,IAAI,KAAKJ,IAAL,KAAcZ,SAAS,CAACG,IAA5B,EAAkC;AACvCznB,eAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAU,CAAC1a,CAAX,CAAN;AACAmZ,iBAAK,GAAG+O,wBAAwB,CAAC3oB,GAAD,EAAMiC,CAAN,EAAS,CAAC1D,CAAV,EAAa+pB,IAAb,CAAhC;AACD,WAHM,MAGA,IAAI,KAAKJ,IAAL,KAAcZ,SAAS,CAACI,IAA5B,EAAkC;AACvC1nB,eAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAU,CAAC5c,CAAX,CAAN;AACAqb,iBAAK,GAAG+O,wBAAwB,CAAC3oB,GAAD,EAAMiC,CAAN,EAASxB,CAAT,EAAY6nB,IAAZ,CAAhC;AACD,WAHM,MAGA;AACL;AACAtoB,eAAG,GAAG4Z,KAAK,GAAG,CAAd;AACA0O,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACD;AACF;AAED;;;;;AAGAnxB,UAAE,GAAGvC,IAAI,CAAC2M,IAAL,CAAW,KAAK,qDAAN,IAAc6Y,KAAK,GAAGxlB,IAAI,CAAC+mB,IAAL,CAAU/mB,IAAI,CAACqB,GAAL,CAASmkB,KAAT,IAAkBxlB,IAAI,CAACuB,GAAL,CAAS,wDAAT,CAA5B,CAAR,GAAwD,yDAAtE,CAAV,CAAL;AACA8H,SAAC,GAAGrJ,IAAI,CAACoB,IAAL,CAAU,CAAC,IAAIpB,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAL,KAAuB5L,IAAI,CAACuB,GAAL,CAASgB,EAAT,IAAevC,IAAI,CAACuB,GAAL,CAASgB,EAAT,CAAtC,KAAuD,IAAIvC,IAAI,CAACuB,GAAL,CAASvB,IAAI,CAAC2M,IAAL,CAAU,IAAI3M,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAd,CAAT,CAA3D,CAAV,CAAJ;AAEA;;AACA,YAAI0O,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACE,MAA7B,EAAqC;AACnCpxB,YAAE,IAAI,yDAAN;AACD,SAFD,MAEO,IAAI2xB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACG,MAA7B,EAAqC;AAC1CrxB,YAAE,IAAI,qDAAN;AACD,SAFM,MAEA,IAAI2xB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACI,MAA7B,EAAqC;AAC1CtxB,YAAE,IAAI,MAAM,qDAAZ;AACD;AAED;;;AACA0xB,UAAE,CAACxxB,CAAH,GAAO4G,CAAC,GAAGrJ,IAAI,CAACuB,GAAL,CAASgB,EAAT,CAAX;AACA0xB,UAAE,CAACvxB,CAAH,GAAO2G,CAAC,GAAGrJ,IAAI,CAACqB,GAAL,CAASkB,EAAT,CAAX;AACA0xB,UAAE,CAACxxB,CAAH,GAAOwxB,EAAE,CAACxxB,CAAH,GAAO,KAAKnC,CAAZ,GAAgB,KAAKijB,EAA5B;AACA0Q,UAAE,CAACvxB,CAAH,GAAOuxB,EAAE,CAACvxB,CAAH,GAAO,KAAKpC,CAAZ,GAAgB,KAAKmjB,EAA5B;AAEA1N,SAAC,CAACtT,CAAF,GAAMwxB,EAAE,CAACxxB,CAAT;AACAsT,SAAC,CAACrT,CAAF,GAAMuxB,EAAE,CAACvxB,CAAT;AACA,eAAOqT,CAAP;AACD,O,CAED;AACA;;;AACO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIye,EAAE,GAAG;AAAChN,aAAG,EAAE,CAAN;AAAS5b,aAAG,EAAE;AAAd,SAAT;AACA,YAAIrJ,EAAJ,EAAQkyB,EAAR,EAAYC,KAAZ,EAAmBC,KAAnB;AACA,YAAIC,QAAJ,EAAcpP,KAAd,EAAqB/Y,MAArB,EAA6Bb,GAA7B;AACA,YAAIvC,CAAJ;AACA,YAAI6qB,IAAI,GAAG;AAAC9X,eAAK,EAAE;AAAR,SAAX;AAEA;;AACArG,SAAC,CAACtT,CAAF,GAAM,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,IAAkB,KAAKjjB,CAA7B;AACAyV,SAAC,CAACrT,CAAF,GAAM,CAACqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,IAAkB,KAAKnjB,CAA7B;AAEA;;;AAEAm0B,UAAE,GAAGz0B,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAV,CAAL;AACAH,UAAE,GAAGvC,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACrT,CAAb,EAAgBqT,CAAC,CAACtT,CAAlB,CAAL;;AACA,YAAIsT,CAAC,CAACtT,CAAF,IAAO,GAAP,IAAcsT,CAAC,CAACtT,CAAF,IAAOzC,IAAI,CAACgK,GAAL,CAAS+L,CAAC,CAACrT,CAAX,CAAzB,EAAwC;AACtCwxB,cAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACD,SAFD,MAEO,IAAI3d,CAAC,CAACrT,CAAF,IAAO,GAAP,IAAcqT,CAAC,CAACrT,CAAF,IAAO1C,IAAI,CAACgK,GAAL,CAAS+L,CAAC,CAACtT,CAAX,CAAzB,EAAwC;AAC7CyxB,cAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACE,MAAvB;AACApxB,YAAE,IAAI,yDAAN;AACD,SAHM,MAGA,IAAIwT,CAAC,CAACtT,CAAF,GAAM,GAAN,IAAa,CAACsT,CAAC,CAACtT,CAAH,IAAQzC,IAAI,CAACgK,GAAL,CAAS+L,CAAC,CAACrT,CAAX,CAAzB,EAAwC;AAC7CwxB,cAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACG,MAAvB;AACArxB,YAAE,GAAIA,EAAE,GAAG,GAAL,GAAWA,EAAE,GAAG,qDAAhB,GAAsBA,EAAE,GAAG,qDAAjC;AACD,SAHM,MAGA;AACL2xB,cAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACI,MAAvB;AACAtxB,YAAE,IAAI,yDAAN;AACD;AAED;;;;;;;AAKA8G,SAAC,GAAI,wDAAM,EAAP,GAAarJ,IAAI,CAACsB,GAAL,CAASiB,EAAT,CAAjB;AACAqyB,gBAAQ,GAAG50B,IAAI,CAACqB,GAAL,CAASgI,CAAT,KAAerJ,IAAI,CAACuB,GAAL,CAAS8H,CAAT,IAAe,IAAIrJ,IAAI,CAACoB,IAAL,CAAU,CAAV,CAAlC,CAAX;AACAokB,aAAK,GAAGxlB,IAAI,CAAC2M,IAAL,CAAUioB,QAAV,CAAR;AACAF,aAAK,GAAG10B,IAAI,CAACuB,GAAL,CAASgB,EAAT,CAAR;AACAoyB,aAAK,GAAG30B,IAAI,CAACsB,GAAL,CAASmzB,EAAT,CAAR;AACAhoB,cAAM,GAAG,IAAIioB,KAAK,GAAGA,KAAR,GAAgBC,KAAhB,GAAwBA,KAAxB,IAAiC,IAAI30B,IAAI,CAACuB,GAAL,CAASvB,IAAI,CAAC2M,IAAL,CAAU,IAAI3M,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAd,CAAT,CAArC,CAAb;;AACA,YAAI/Y,MAAM,GAAG,CAAC,CAAd,EAAiB;AACfA,gBAAM,GAAG,CAAC,CAAV;AACD,SAFD,MAEO,IAAIA,MAAM,GAAG,CAAC,CAAd,EAAiB;AACtBA,gBAAM,GAAG,CAAC,CAAV;AACD;AAED;;;;;;AAIA,YAAI,KAAKqnB,IAAL,KAAcZ,SAAS,CAACK,GAA5B,EAAiC;AAC/B3nB,aAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAUta,MAAV,CAAN;AACA+nB,YAAE,CAAC5oB,GAAH,GAAS,4DAAUA,GAAnB;;AACA,cAAIsoB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACC,MAA7B,EAAqC;AACnCc,cAAE,CAAChN,GAAH,GAAShC,KAAK,GAAG,yDAAjB;AACD,WAFD,MAEO,IAAI0O,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACE,MAA7B,EAAqC;AAC1Ca,cAAE,CAAChN,GAAH,GAAUhC,KAAK,GAAG,GAAR,GAAcA,KAAK,GAAG,qDAAtB,GAA4BA,KAAK,GAAG,qDAA9C;AACD,WAFM,MAEA,IAAI0O,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACG,MAA7B,EAAqC;AAC1CY,cAAE,CAAChN,GAAH,GAAShC,KAAK,GAAG,yDAAjB;AACD,WAFM;AAEA;AAAqC;AAC1CgP,gBAAE,CAAChN,GAAH,GAAShC,KAAT;AACD;AACF,SAZD,MAYO,IAAI,KAAKsO,IAAL,KAAcZ,SAAS,CAACM,MAA5B,EAAoC;AACzC5nB,aAAG,GAAG5L,IAAI,CAAC+mB,IAAL,CAAUta,MAAV,CAAN;AACA+nB,YAAE,CAAC5oB,GAAH,GAASA,GAAG,GAAG,yDAAf;;AACA,cAAIsoB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACC,MAA7B,EAAqC;AACnCc,cAAE,CAAChN,GAAH,GAAS,CAAChC,KAAD,GAAS,yDAAlB;AACD,WAFD,MAEO,IAAI0O,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACE,MAA7B,EAAqC;AAC1Ca,cAAE,CAAChN,GAAH,GAAS,CAAChC,KAAV;AACD,WAFM,MAEA,IAAI0O,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACG,MAA7B,EAAqC;AAC1CY,cAAE,CAAChN,GAAH,GAAS,CAAChC,KAAD,GAAS,yDAAlB;AACD,WAFM;AAEA;AAAqC;AAC1CgP,gBAAE,CAAChN,GAAH,GAAUhC,KAAK,GAAG,GAAR,GAAc,CAACA,KAAD,GAAS,qDAAvB,GAA6B,CAACA,KAAD,GAAS,qDAAhD;AACD;AACF,SAZM,MAYA;AACL;AACA,cAAInZ,CAAJ,EAAOlC,CAAP,EAAU0D,CAAV;AACAxB,WAAC,GAAGI,MAAJ;AACApD,WAAC,GAAGgD,CAAC,GAAGA,CAAR;;AACA,cAAIhD,CAAC,IAAI,CAAT,EAAY;AACVwE,aAAC,GAAG,CAAJ;AACD,WAFD,MAEO;AACLA,aAAC,GAAG7N,IAAI,CAACoB,IAAL,CAAU,IAAIiI,CAAd,IAAmBrJ,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAvB;AACD;;AACDnc,WAAC,IAAIwE,CAAC,GAAGA,CAAT;;AACA,cAAIxE,CAAC,IAAI,CAAT,EAAY;AACVc,aAAC,GAAG,CAAJ;AACD,WAFD,MAEO;AACLA,aAAC,GAAGnK,IAAI,CAACoB,IAAL,CAAU,IAAIiI,CAAd,CAAJ;AACD;AACD;;;AACA,cAAI6qB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACE,MAA7B,EAAqC;AACnCtqB,aAAC,GAAGc,CAAJ;AACAA,aAAC,GAAG,CAAC0D,CAAL;AACAA,aAAC,GAAGxE,CAAJ;AACD,WAJD,MAIO,IAAI6qB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACG,MAA7B,EAAqC;AAC1CzpB,aAAC,GAAG,CAACA,CAAL;AACA0D,aAAC,GAAG,CAACA,CAAL;AACD,WAHM,MAGA,IAAIqmB,IAAI,CAAC9X,KAAL,KAAeqX,SAAS,CAACI,MAA7B,EAAqC;AAC1CxqB,aAAC,GAAGc,CAAJ;AACAA,aAAC,GAAG0D,CAAJ;AACAA,aAAC,GAAG,CAACxE,CAAL;AACD;AACD;;;AACA,cAAI,KAAKyqB,IAAL,KAAcZ,SAAS,CAACE,KAA5B,EAAmC;AACjC/pB,aAAC,GAAGgD,CAAJ;AACAA,aAAC,GAAG,CAAClC,CAAL;AACAA,aAAC,GAAGd,CAAJ;AACD,WAJD,MAIO,IAAI,KAAKyqB,IAAL,KAAcZ,SAAS,CAACG,IAA5B,EAAkC;AACvChnB,aAAC,GAAG,CAACA,CAAL;AACAlC,aAAC,GAAG,CAACA,CAAL;AACD,WAHM,MAGA,IAAI,KAAK2pB,IAAL,KAAcZ,SAAS,CAACI,IAA5B,EAAkC;AACvCjqB,aAAC,GAAGgD,CAAJ;AACAA,aAAC,GAAGlC,CAAJ;AACAA,aAAC,GAAG,CAACd,CAAL;AACD;AACD;;;AACAmrB,YAAE,CAAC5oB,GAAH,GAAS5L,IAAI,CAAC+mB,IAAL,CAAU,CAAClZ,CAAX,IAAgB,yDAAzB;AACA2mB,YAAE,CAAChN,GAAH,GAASxnB,IAAI,CAAC2X,KAAL,CAAWxN,CAAX,EAAckC,CAAd,CAAT;;AACA,cAAI,KAAKynB,IAAL,KAAcZ,SAAS,CAACE,KAA5B,EAAmC;AACjCoB,cAAE,CAAChN,GAAH,GAAS8M,oBAAoB,CAACE,EAAE,CAAChN,GAAJ,EAAS,CAAC,yDAAV,CAA7B;AACD,WAFD,MAEO,IAAI,KAAKsM,IAAL,KAAcZ,SAAS,CAACG,IAA5B,EAAkC;AACvCmB,cAAE,CAAChN,GAAH,GAAS8M,oBAAoB,CAACE,EAAE,CAAChN,GAAJ,EAAS,CAAC,qDAAV,CAA7B;AACD,WAFM,MAEA,IAAI,KAAKsM,IAAL,KAAcZ,SAAS,CAACI,IAA5B,EAAkC;AACvCkB,cAAE,CAAChN,GAAH,GAAS8M,oBAAoB,CAACE,EAAE,CAAChN,GAAJ,EAAS,CAAC,yDAAV,CAA7B;AACD;AACF;AAED;;;;AAEA,YAAI,KAAK5e,EAAL,KAAY,CAAhB,EAAmB;AACjB,cAAIisB,WAAJ;AACA,cAAI7O,MAAJ,EAAY8O,EAAZ;AACAD,qBAAW,GAAIL,EAAE,CAAC5oB,GAAH,GAAS,CAAT,GAAa,CAAb,GAAiB,CAAhC;AACAoa,gBAAM,GAAGhmB,IAAI,CAACsB,GAAL,CAASkzB,EAAE,CAAC5oB,GAAZ,CAAT;AACAkpB,YAAE,GAAG,KAAK1sB,CAAL,GAASpI,IAAI,CAACoB,IAAL,CAAU4kB,MAAM,GAAGA,MAAT,GAAkB,KAAKgO,mBAAjC,CAAd;AACAQ,YAAE,CAAC5oB,GAAH,GAAS5L,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACoB,IAAL,CAAU,KAAKd,CAAL,GAAS,KAAKA,CAAd,GAAkBw0B,EAAE,GAAGA,EAAjC,KAAwC,KAAKf,WAAL,GAAmBe,EAA3D,CAAV,CAAT;;AACA,cAAID,WAAJ,EAAiB;AACfL,cAAE,CAAC5oB,GAAH,GAAS,CAAC4oB,EAAE,CAAC5oB,GAAb;AACD;AACF;;AAED4oB,UAAE,CAAChN,GAAH,IAAU,KAAK5E,KAAf;AACA7M,SAAC,CAACtT,CAAF,GAAM+xB,EAAE,CAAChN,GAAT;AACAzR,SAAC,CAACrT,CAAF,GAAM8xB,EAAE,CAAC5oB,GAAT;AACA,eAAOmK,CAAP;AACD;AAED;;;;AAEA,eAASwe,wBAAT,CAAkC3oB,GAAlC,EAAuClJ,CAAvC,EAA0CD,CAA1C,EAA6CyxB,IAA7C,EAAmD;AACjD,YAAI1O,KAAJ;;AACA,YAAI5Z,GAAG,GAAG,uDAAV,EAAiB;AACfsoB,cAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACAlO,eAAK,GAAG,GAAR;AACD,SAHD,MAGO;AACLA,eAAK,GAAGxlB,IAAI,CAAC2X,KAAL,CAAWjV,CAAX,EAAcD,CAAd,CAAR;;AACA,cAAIzC,IAAI,CAACgK,GAAL,CAASwb,KAAT,KAAmB,wDAAvB,EAA+B;AAC7B0O,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACC,MAAvB;AACD,WAFD,MAEO,IAAIlO,KAAK,GAAG,wDAAR,IAAkBA,KAAK,IAAI,4DAAU,wDAAzC,EAAiD;AACtD0O,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACE,MAAvB;AACAnO,iBAAK,IAAI,yDAAT;AACD,WAHM,MAGA,IAAIA,KAAK,GAAG,4DAAU,wDAAlB,IAA4BA,KAAK,IAAI,EAAE,4DAAU,wDAAZ,CAAzC,EAA8D;AACnE0O,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACG,MAAvB;AACApO,iBAAK,GAAIA,KAAK,IAAI,GAAT,GAAeA,KAAK,GAAG,qDAAvB,GAA6BA,KAAK,GAAG,qDAA9C;AACD,WAHM,MAGA;AACL0O,gBAAI,CAAC9X,KAAL,GAAaqX,SAAS,CAACI,MAAvB;AACArO,iBAAK,IAAI,yDAAT;AACD;AACF;;AACD,eAAOA,KAAP;AACD;AAED;;;AACA,eAAS8O,oBAAT,CAA8Bl1B,GAA9B,EAAmC+gB,MAAnC,EAA2C;AACzC,YAAI4U,IAAI,GAAG31B,GAAG,GAAG+gB,MAAjB;;AACA,YAAI4U,IAAI,GAAG,CAAC,qDAAZ,EAAiB;AACfA,cAAI,IAAI,wDAAR;AACD,SAFD,MAEO,IAAIA,IAAI,GAAG,CAAC,qDAAZ,EAAiB;AACtBA,cAAI,IAAI,wDAAR;AACD;;AACD,eAAOA,IAAP;AACD;;AAEM,UAAI1Q,KAAK,GAAG,CAAC,kCAAD,EAAqC,kCAArC,EAAyE,KAAzE,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACzWf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAAA;AACA;AACA;;;AAKA,UAAI2Q,OAAO,GAAG,CACV,CAAC,MAAD,EAAS,UAAT,EAAqB,CAAC,WAAtB,EAAmC,UAAnC,CADU,EAEV,CAAC,MAAD,EAAS,CAAC,WAAV,EAAuB,CAAC,UAAxB,EAAoC,CAAC,UAArC,CAFU,EAGV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,CAAC,WAArC,CAHU,EAIV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,UAAvB,EAAmC,UAAnC,CAJU,EAKV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,CAAC,WAArC,CALU,EAMV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,UAApC,CANU,EAOV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,WAApC,CAPU,EAQV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,CAAC,UAArC,CARU,EASV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,UAAvB,EAAmC,WAAnC,CATU,EAUV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,CAAC,WAArC,CAVU,EAWV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,WAApC,CAXU,EAYV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,WAApC,CAZU,EAaV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,WAApC,CAbU,EAcV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,UAAvB,EAAmC,CAAC,WAApC,CAdU,EAeV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,CAAC,UAArC,CAfU,EAgBV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,CAAC,WAAvB,EAAoC,WAApC,CAhBU,EAiBV,CAAC,MAAD,EAAS,CAAC,QAAV,EAAoB,WAApB,EAAiC,WAAjC,CAjBU,EAkBV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,QAAtB,EAAgC,WAAhC,CAlBU,EAmBV,CAAC,MAAD,EAAS,CAAC,UAAV,EAAsB,WAAtB,EAAmC,WAAnC,CAnBU,CAAd;AAsBA,UAAIC,OAAO,GAAG,CACV,CAAC,CAAC,WAAF,EAAe,MAAf,EAAuB,WAAvB,EAAoC,CAAC,WAArC,CADU,EAEV,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAC,WAAlB,EAA+B,WAA/B,CAFU,EAGV,CAAC,MAAD,EAAS,MAAT,EAAiB,WAAjB,EAA8B,CAAC,WAA/B,CAHU,EAIV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,WAAlC,CAJU,EAKV,CAAC,MAAD,EAAS,SAAT,EAAoB,WAApB,EAAiC,CAAC,QAAlC,CALU,EAMV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,WAAlC,CANU,EAOV,CAAC,MAAD,EAAS,SAAT,EAAoB,WAApB,EAAiC,CAAC,WAAlC,CAPU,EAQV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CARU,EASV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CATU,EAUV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CAVU,EAWV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CAXU,EAYV,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAC,WAApB,EAAiC,CAAC,WAAlC,CAZU,EAaV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CAbU,EAcV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,WAArB,EAAkC,CAAC,WAAnC,CAdU,EAeV,CAAC,MAAD,EAAS,SAAT,EAAoB,CAAC,UAArB,EAAiC,CAAC,WAAlC,CAfU,EAgBV,CAAC,MAAD,EAAS,UAAT,EAAqB,CAAC,UAAtB,EAAkC,CAAC,SAAnC,CAhBU,EAiBV,CAAC,MAAD,EAAS,UAAT,EAAqB,CAAC,WAAtB,EAAmC,CAAC,UAApC,CAjBU,EAkBV,CAAC,MAAD,EAAS,UAAT,EAAqB,CAAC,QAAtB,EAAgC,CAAC,UAAjC,CAlBU,EAmBV,CAAC,MAAD,EAAS,UAAT,EAAqB,CAAC,WAAtB,EAAmC,CAAC,UAApC,CAnBU,CAAd;AAsBA,UAAIC,GAAG,GAAG,MAAV;AACA,UAAIC,GAAG,GAAG,MAAV;AACA,UAAI/yB,EAAE,GAAG,wDAAI,CAAb,C,CAAgB;;AAChB,UAAIgzB,GAAG,GAAG,IAAEhzB,EAAZ;AACA,UAAIizB,KAAK,GAAG,EAAZ;;AAEA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAASC,KAAT,EAAgB9yB,CAAhB,EAAmB;AAC/B,eAAO8yB,KAAK,CAAC,CAAD,CAAL,GAAW9yB,CAAC,IAAI8yB,KAAK,CAAC,CAAD,CAAL,GAAW9yB,CAAC,IAAI8yB,KAAK,CAAC,CAAD,CAAL,GAAW9yB,CAAC,GAAG8yB,KAAK,CAAC,CAAD,CAAxB,CAAhB,CAAnB;AACH,OAFD;;AAIA,UAAIC,SAAS,GAAG,SAAZA,SAAY,CAASD,KAAT,EAAgB9yB,CAAhB,EAAmB;AAC/B,eAAO8yB,KAAK,CAAC,CAAD,CAAL,GAAW9yB,CAAC,IAAI,IAAI8yB,KAAK,CAAC,CAAD,CAAT,GAAe9yB,CAAC,GAAG,CAAJ,GAAQ8yB,KAAK,CAAC,CAAD,CAAhC,CAAnB;AACH,OAFD;;AAIA,eAASE,cAAT,CAAwBC,IAAxB,EAA8B3sB,KAA9B,EAAqC4sB,OAArC,EAA8CC,KAA9C,EAAqD;AACjD,YAAInzB,CAAC,GAAGsG,KAAR;;AACA,eAAO6sB,KAAP,EAAc,EAAEA,KAAhB,EAAuB;AACnB,cAAIC,GAAG,GAAGH,IAAI,CAACjzB,CAAD,CAAd;AACAA,WAAC,IAAIozB,GAAL;;AACA,cAAI71B,IAAI,CAACgK,GAAL,CAAS6rB,GAAT,IAAgBF,OAApB,EAA6B;AACzB;AACH;AACJ;;AACD,eAAOlzB,CAAP;AACH;;AAEM,eAASqG,IAAT,GAAgB;AACnB,aAAKya,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,IAAW,CAArB;AACA,aAAKb,KAAL,GAAa,KAAKA,KAAL,IAAc,CAA3B;AACA,aAAKha,EAAL,GAAU,CAAV;AACA,aAAK0f,KAAL,GAAa,KAAKA,KAAL,IAAc,UAA3B;AACH;;AAEM,eAAS1pB,OAAT,CAAiBG,EAAjB,EAAqB;AACxB,YAAIK,GAAG,GAAG,mEAAWL,EAAE,CAAC0D,CAAH,GAAO,KAAKmgB,KAAvB,CAAV;AAEA,YAAI/W,IAAI,GAAG7L,IAAI,CAACgK,GAAL,CAASjL,EAAE,CAAC2D,CAAZ,CAAX;AACA,YAAIe,CAAC,GAAGzD,IAAI,CAACmB,KAAL,CAAW0K,IAAI,GAAGzJ,EAAlB,CAAR;;AACA,YAAIqB,CAAC,GAAG,CAAR,EAAW;AACPA,WAAC,GAAG,CAAJ;AACH,SAFD,MAEO,IAAIA,CAAC,IAAI4xB,KAAT,EAAgB;AACnB5xB,WAAC,GAAG4xB,KAAK,GAAG,CAAZ;AACH;;AACDxpB,YAAI,GAAG,yDAAOA,IAAI,GAAGupB,GAAG,GAAG3xB,CAApB,CAAP;AACA,YAAIwwB,EAAE,GAAG;AACLxxB,WAAC,EAAE6yB,SAAS,CAACN,OAAO,CAACvxB,CAAD,CAAR,EAAaoI,IAAb,CAAT,GAA8BzM,GAD5B;AAELsD,WAAC,EAAE4yB,SAAS,CAACL,OAAO,CAACxxB,CAAD,CAAR,EAAaoI,IAAb;AAFP,SAAT;;AAIA,YAAI9M,EAAE,CAAC2D,CAAH,GAAO,CAAX,EAAc;AACVuxB,YAAE,CAACvxB,CAAH,GAAO,CAACuxB,EAAE,CAACvxB,CAAX;AACH;;AAEDuxB,UAAE,CAACxxB,CAAH,GAAOwxB,EAAE,CAACxxB,CAAH,GAAO,KAAKnC,CAAZ,GAAgB40B,GAAhB,GAAsB,KAAK3R,EAAlC;AACA0Q,UAAE,CAACvxB,CAAH,GAAOuxB,EAAE,CAACvxB,CAAH,GAAO,KAAKpC,CAAZ,GAAgB60B,GAAhB,GAAsB,KAAK1R,EAAlC;AACA,eAAOwQ,EAAP;AACH;;AAEM,eAASp1B,OAAT,CAAiBo1B,EAAjB,EAAqB;AACxB,YAAIl1B,EAAE,GAAG;AACL0D,WAAC,EAAE,CAACwxB,EAAE,CAACxxB,CAAH,GAAO,KAAK8gB,EAAb,KAAoB,KAAKjjB,CAAL,GAAS40B,GAA7B,CADE;AAELxyB,WAAC,EAAE1C,IAAI,CAACgK,GAAL,CAASiqB,EAAE,CAACvxB,CAAH,GAAO,KAAK+gB,EAArB,KAA4B,KAAKnjB,CAAL,GAAS60B,GAArC;AAFE,SAAT;;AAKA,YAAIp2B,EAAE,CAAC2D,CAAH,IAAQ,CAAZ,EAAe;AAAE;AACb3D,YAAE,CAAC0D,CAAH,IAAQuyB,OAAO,CAACK,KAAD,CAAP,CAAe,CAAf,CAAR;AACAt2B,YAAE,CAAC2D,CAAH,GAAOuxB,EAAE,CAACvxB,CAAH,GAAO,CAAP,GAAW,CAAC,yDAAZ,GAAsB,yDAA7B;AACH,SAHD,MAGO;AACH;AACA,cAAIe,CAAC,GAAGzD,IAAI,CAACmB,KAAL,CAAWpC,EAAE,CAAC2D,CAAH,GAAO2yB,KAAlB,CAAR;;AACA,cAAI5xB,CAAC,GAAG,CAAR,EAAW;AACPA,aAAC,GAAG,CAAJ;AACH,WAFD,MAEO,IAAIA,CAAC,IAAI4xB,KAAT,EAAgB;AACnB5xB,aAAC,GAAG4xB,KAAK,GAAG,CAAZ;AACH;;AACD,mBAAS;AACL,gBAAIJ,OAAO,CAACxxB,CAAD,CAAP,CAAW,CAAX,IAAgB1E,EAAE,CAAC2D,CAAvB,EAA0B;AACtB,gBAAEe,CAAF;AACH,aAFD,MAEO,IAAIwxB,OAAO,CAACxxB,CAAC,GAAC,CAAH,CAAP,CAAa,CAAb,KAAmB1E,EAAE,CAAC2D,CAA1B,EAA6B;AAChC,gBAAEe,CAAF;AACH,aAFM,MAEA;AACH;AACH;AACJ,WAhBE,CAiBH;;;AACA,cAAI8xB,KAAK,GAAGN,OAAO,CAACxxB,CAAD,CAAnB;AACA,cAAI4F,CAAC,GAAG,KAAKtK,EAAE,CAAC2D,CAAH,GAAO6yB,KAAK,CAAC,CAAD,CAAjB,KAAyBN,OAAO,CAACxxB,CAAC,GAAC,CAAH,CAAP,CAAa,CAAb,IAAkB8xB,KAAK,CAAC,CAAD,CAAhD,CAAR,CAnBG,CAoBH;;AACAlsB,WAAC,GAAGosB,cAAc,CAAC,UAAShzB,CAAT,EAAY;AAC3B,mBAAO,CAAC6yB,SAAS,CAACC,KAAD,EAAQ9yB,CAAR,CAAT,GAAsB1D,EAAE,CAAC2D,CAA1B,IAA+B8yB,SAAS,CAACD,KAAD,EAAQ9yB,CAAR,CAA/C;AACH,WAFiB,EAEf4G,CAFe,EAEZ,uDAFY,EAEL,GAFK,CAAlB;AAIAtK,YAAE,CAAC0D,CAAH,IAAQ6yB,SAAS,CAACN,OAAO,CAACvxB,CAAD,CAAR,EAAa4F,CAAb,CAAjB;AACAtK,YAAE,CAAC2D,CAAH,GAAO,CAAC,IAAIe,CAAJ,GAAQ4F,CAAT,IAAc,qDAArB;;AACA,cAAI4qB,EAAE,CAACvxB,CAAH,GAAO,CAAX,EAAc;AACV3D,cAAE,CAAC2D,CAAH,GAAO,CAAC3D,EAAE,CAAC2D,CAAX;AACH;AACJ;;AAED3D,UAAE,CAAC0D,CAAH,GAAO,mEAAW1D,EAAE,CAAC0D,CAAH,GAAO,KAAKmgB,KAAvB,CAAP;AACA,eAAO7jB,EAAP;AACH;;AAEM,UAAIslB,KAAK,GAAG,CAAC,UAAD,EAAa,OAAb,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC3Jf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAI3W,QAAQ,GAAG,EAAf;;AAQO,eAAS5E,IAAT,GAAgB;AACrB;;AAIA,YAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,eAAKmF,EAAL,GAAU,gEAAQ,KAAK7E,EAAb,CAAV;AACD,SAFD,MAGK;AACH,eAAK3C,CAAL,GAAS,CAAT;AACA,eAAKiI,CAAL,GAAS,CAAT;AACA,eAAKtF,EAAL,GAAU,CAAV;AACA,eAAKktB,GAAL,GAAW91B,IAAI,CAACoB,IAAL,CAAU,CAAC,KAAK8M,CAAL,GAAS,CAAV,IAAe,KAAKjI,CAA9B,CAAX;AACA,eAAK8vB,GAAL,GAAW,KAAKD,GAAL,IAAY,KAAK5nB,CAAL,GAAS,CAArB,CAAX;AACD;AAEF;AAED;;;;AAEO,eAAStP,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAItT,CAAJ,EAAOC,CAAP;AACA,YAAItD,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA;;;AAEAtD,WAAG,GAAG,mEAAWA,GAAG,GAAG,KAAKwjB,KAAtB,CAAN;;AAEA,YAAI,KAAKta,MAAT,EAAiB;AACf,cAAI,CAAC,KAAK4F,CAAV,EAAa;AACX/O,eAAG,GAAG,KAAK8G,CAAL,KAAW,CAAX,GAAejG,IAAI,CAACkK,IAAL,CAAU,KAAKjE,CAAL,GAASjG,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAnB,CAAf,GAAmDA,GAAzD;AACD,WAFD,MAGK;AACH,gBAAIwO,CAAC,GAAG,KAAK1H,CAAL,GAASjG,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAjB;;AACA,iBAAK,IAAIsE,CAAC,GAAGiK,QAAb,EAAuBjK,CAAvB,EAA0B,EAAEA,CAA5B,EAA+B;AAC7B,kBAAI/E,CAAC,GAAG,CAAC,KAAKwP,CAAL,GAAS/O,GAAT,GAAea,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAf,GAA+BwO,CAAhC,KAAsC,KAAKO,CAAL,GAASlO,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAA/C,CAAR;AACAA,iBAAG,IAAIT,CAAP;;AACA,kBAAIsB,IAAI,CAACgK,GAAL,CAAStL,CAAT,IAAc,uDAAlB,EAAyB;AACvB;AACD;AACF;AACF;;AACD+D,WAAC,GAAG,KAAKnC,CAAL,GAAS,KAAKy1B,GAAd,GAAoB32B,GAApB,IAA2B,KAAK8O,CAAL,GAASlO,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAApC,CAAJ;AACAuD,WAAC,GAAG,KAAKpC,CAAL,GAAS,KAAKw1B,GAAd,GAAoB32B,GAAxB;AAED,SAjBD,MAkBK;AAEH,cAAI0O,CAAC,GAAG7N,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAR;AACA,cAAIimB,CAAC,GAAGplB,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAR;AACAuD,WAAC,GAAG,KAAKpC,CAAL,GAAS,gEAAQnB,GAAR,EAAa0O,CAAb,EAAgBuX,CAAhB,EAAmB,KAAK3X,EAAxB,CAAb;AACAhL,WAAC,GAAG,KAAKnC,CAAL,GAASlB,GAAT,GAAegmB,CAAf,GAAmBplB,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAUiF,CAAV,GAAcA,CAA5B,CAAvB;AACD;;AAEDkI,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI5W,GAAJ,EAASgM,IAAT,EAAe/L,GAAf,EAAoByO,CAApB;AAEAkI,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAnkB,WAAG,GAAG2W,CAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAjB;AACAyV,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACAtkB,WAAG,GAAG4W,CAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAjB;;AAEA,YAAI,KAAKgI,MAAT,EAAiB;AACfnJ,aAAG,IAAI,KAAK22B,GAAZ;AACA12B,aAAG,GAAGA,GAAG,IAAI,KAAK22B,GAAL,IAAY,KAAK7nB,CAAL,GAASlO,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAArB,CAAJ,CAAT;;AACA,cAAI,KAAK+O,CAAT,EAAY;AACV/O,eAAG,GAAG,8DAAM,CAAC,KAAK+O,CAAL,GAAS/O,GAAT,GAAea,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAhB,IAAiC,KAAK8G,CAA5C,CAAN;AACD,WAFD,MAGK,IAAI,KAAKA,CAAL,KAAW,CAAf,EAAkB;AACrB9G,eAAG,GAAG,8DAAMa,IAAI,CAACqB,GAAL,CAASlC,GAAT,IAAgB,KAAK8G,CAA3B,CAAN;AACD;;AACD7G,aAAG,GAAG,mEAAWA,GAAG,GAAG,KAAKwjB,KAAtB,CAAN;AACAzjB,aAAG,GAAG,mEAAWA,GAAX,CAAN;AACD,SAXD,MAYK;AACHA,aAAG,GAAG,oEAAY4W,CAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAvB,EAA0B,KAAKsI,EAA/B,EAAmC,KAAK6E,EAAxC,CAAN;AACAI,WAAC,GAAG7N,IAAI,CAACgK,GAAL,CAAS7K,GAAT,CAAJ;;AACA,cAAI0O,CAAC,GAAG,yDAAR,EAAiB;AACfA,aAAC,GAAG7N,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAJ;AACAgM,gBAAI,GAAG,KAAKyX,KAAL,GAAa7M,CAAC,CAACtT,CAAF,GAAMzC,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKwH,EAAL,GAAUiF,CAAV,GAAcA,CAA5B,CAAN,IAAwC,KAAKvN,CAAL,GAASN,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAjD,CAApB,CAFe,CAGf;;AACAC,eAAG,GAAG,mEAAW+L,IAAX,CAAN;AACD,WALD,MAMK,IAAK0C,CAAC,GAAG,uDAAL,GAAc,yDAAlB,EAA2B;AAC9BzO,eAAG,GAAG,KAAKwjB,KAAX;AACD;AACF;;AACD7M,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,YAAD,EAAe,MAAf,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC7Gf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAQO,eAASvb,IAAT,GAAgB;AACrB,YAAIktB,IAAI,GAAG,KAAK9tB,IAAhB;AACA,aAAK+tB,OAAL,GAAe,KAAKrT,KAApB;AACA,YAAIsT,OAAO,GAAGl2B,IAAI,CAACqB,GAAL,CAAS20B,IAAT,CAAd;AACA,YAAIG,aAAa,GAAG,KAAK71B,CAAzB;AACA,YAAI81B,IAAI,GAAG,KAAK/tB,EAAhB;AACA,YAAIguB,UAAU,GAAG,IAAID,IAArB;AACA,YAAIpqB,EAAE,GAAG,IAAIqqB,UAAJ,GAAiBr2B,IAAI,CAAC2C,GAAL,CAAS0zB,UAAT,EAAqB,CAArB,CAA1B;AACA,YAAIxwB,CAAC,GAAG,KAAKA,CAAL,GAAS7F,IAAI,CAACoB,IAAL,CAAU4K,EAAV,CAAjB;AACA,aAAKsqB,CAAL,GAAS,KAAK91B,EAAL,GAAU21B,aAAV,GAA0Bn2B,IAAI,CAACoB,IAAL,CAAU,IAAI4K,EAAd,CAA1B,IAA+C,IAAIA,EAAE,GAAGhM,IAAI,CAAC2C,GAAL,CAASuzB,OAAT,EAAkB,CAAlB,CAAxD,CAAT;AACA,aAAKjT,KAAL,GAAajjB,IAAI,CAACoB,IAAL,CAAU,IAAI4K,EAAE,IAAI,IAAIA,EAAR,CAAF,GAAgBhM,IAAI,CAAC2C,GAAL,CAAS3C,IAAI,CAACuB,GAAL,CAASy0B,IAAT,CAAT,EAAyB,CAAzB,CAA9B,CAAb;AACA,aAAKO,EAAL,GAAUv2B,IAAI,CAACkK,IAAL,CAAUgsB,OAAO,GAAG,KAAKjT,KAAzB,CAAV;AACA,YAAI2H,EAAE,GAAG5qB,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAc,KAAKs2B,EAAL,GAAU,CAAjC,CAAT,CAAT;AACA,YAAIC,EAAE,GAAGx2B,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAc+1B,IAAI,GAAG,CAA9B,CAAT,CAAT;AACA,YAAIS,EAAE,GAAGz2B,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAIvG,CAAC,GAAGqwB,OAAT,KAAqB,IAAIrwB,CAAC,GAAGqwB,OAA7B,CAAT,CAAT;AACA,aAAKrM,CAAL,GAASe,EAAE,GAAG,KAAK3H,KAAL,GAAauT,EAAlB,GAAuB,KAAKvT,KAAL,GAAapd,CAAb,GAAiB,CAAjB,GAAqB4wB,EAArD;AACD;;AAEM,eAAS73B,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI2gB,GAAG,GAAG12B,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAc8V,CAAC,CAACrT,CAAF,GAAM,CAA7B,CAAT,CAAV;AACA,YAAIi0B,GAAG,GAAG,KAAK9wB,CAAL,GAAS,CAAT,GAAa7F,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAI,KAAKvG,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAd,KAAgC,IAAI,KAAKmD,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAA7C,CAAT,CAAvB;AACA,YAAI2vB,CAAC,GAAG,CAAC,KAAKpP,KAAN,IAAeyT,GAAG,GAAGC,GAArB,IAA4B,KAAK9M,CAAzC,CAHyB,CAKzB;;AACA,YAAIzhB,CAAC,GAAG,KAAKpI,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACkL,GAAL,CAASmnB,CAAT,CAAV,IAAyBryB,IAAI,CAACC,EAAL,GAAU,CAAxC,CAAR,CANyB,CAQzB;;AACA,YAAIzB,CAAC,GAAG,KAAKykB,KAAL,IAAclN,CAAC,CAACtT,CAAF,GAAM,KAAKwzB,OAAzB,CAAR,CATyB,CAWzB;;AACA,YAAIW,IAAI,GAAG52B,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACqB,GAAL,CAAS7C,CAAT,KAAewB,IAAI,CAACqB,GAAL,CAAS,KAAKk1B,EAAd,IAAoBv2B,IAAI,CAACsB,GAAL,CAAS8G,CAAT,CAApB,GAAkCpI,IAAI,CAACuB,GAAL,CAAS,KAAKg1B,EAAd,IAAoBv2B,IAAI,CAACuB,GAAL,CAAS/C,CAAT,CAArE,CAAV,CAAX;AAEA,YAAIq4B,IAAI,GAAG72B,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS,KAAKg1B,EAAd,IAAoBv2B,IAAI,CAACqB,GAAL,CAAS+G,CAAT,CAApB,GAAkCpI,IAAI,CAACqB,GAAL,CAAS,KAAKk1B,EAAd,IAAoBv2B,IAAI,CAACuB,GAAL,CAAS6G,CAAT,CAApB,GAAkCpI,IAAI,CAACuB,GAAL,CAAS/C,CAAT,CAA9E,CAAX;AAEAuX,SAAC,CAACrT,CAAF,GAAM,KAAK4zB,CAAL,GAAS,CAAT,GAAat2B,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAIpM,IAAI,CAACqB,GAAL,CAASw1B,IAAT,CAAL,KAAwB,IAAI72B,IAAI,CAACqB,GAAL,CAASw1B,IAAT,CAA5B,CAAT,CAAb,GAAqE,KAAKpT,EAAhF;AACA1N,SAAC,CAACtT,CAAF,GAAM,KAAK6zB,CAAL,GAASM,IAAT,GAAgB,KAAKrT,EAA3B;AACA,eAAOxN,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI2B,CAAC,GAAG3B,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAnB;AACA,YAAI9L,CAAC,GAAG1B,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAnB;AAEA,YAAImT,IAAI,GAAGlf,CAAC,GAAG,KAAK4e,CAApB;AACA,YAAIO,IAAI,GAAG,KAAK72B,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACkL,GAAL,CAASuM,CAAC,GAAG,KAAK6e,CAAlB,CAAV,IAAkCt2B,IAAI,CAACC,EAAL,GAAU,CAAjD,CAAX;AAEA,YAAImI,CAAC,GAAGpI,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS,KAAKg1B,EAAd,IAAoBv2B,IAAI,CAACqB,GAAL,CAASw1B,IAAT,CAApB,GAAqC72B,IAAI,CAACqB,GAAL,CAAS,KAAKk1B,EAAd,IAAoBv2B,IAAI,CAACuB,GAAL,CAASs1B,IAAT,CAApB,GAAqC72B,IAAI,CAACuB,GAAL,CAASq1B,IAAT,CAApF,CAAR;AACA,YAAIp4B,CAAC,GAAGwB,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACqB,GAAL,CAASu1B,IAAT,KAAkB52B,IAAI,CAACuB,GAAL,CAAS,KAAKg1B,EAAd,IAAoBv2B,IAAI,CAACuB,GAAL,CAASq1B,IAAT,CAApB,GAAqC52B,IAAI,CAACqB,GAAL,CAAS,KAAKk1B,EAAd,IAAoBv2B,IAAI,CAACsB,GAAL,CAASu1B,IAAT,CAA3E,CAAV,CAAR;AAEA,YAAIC,MAAM,GAAG,KAAKb,OAAL,GAAez3B,CAAC,GAAG,KAAKykB,KAArC;AAEA,YAAIoP,CAAC,GAAG,CAAR;AACA,YAAI0E,GAAG,GAAG3uB,CAAV;AACA,YAAI4uB,OAAO,GAAG,CAAC,IAAf;AACA,YAAIC,SAAS,GAAG,CAAhB;;AACA,eAAOj3B,IAAI,CAACgK,GAAL,CAAS+sB,GAAG,GAAGC,OAAf,IAA0B,SAAjC,EAA4C;AAC1C,cAAI,EAAEC,SAAF,GAAc,EAAlB,EAAsB;AACpB;AACA;AACD,WAJyC,CAK1C;;;AACA5E,WAAC,GAAG,IAAI,KAAKpP,KAAT,IAAkBjjB,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAcmI,CAAC,GAAG,CAA3B,CAAT,IAA0C,KAAKyhB,CAAjE,IAAsE,KAAKhkB,CAAL,GAAS7F,IAAI,CAACoM,GAAL,CAASpM,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACC,EAAL,GAAU,CAAV,GAAcD,IAAI,CAACkK,IAAL,CAAU,KAAKrE,CAAL,GAAS7F,IAAI,CAACqB,GAAL,CAAS01B,GAAT,CAAnB,IAAoC,CAA3D,CAAT,CAAnF;AACAC,iBAAO,GAAGD,GAAV;AACAA,aAAG,GAAG,IAAI/2B,IAAI,CAAC2M,IAAL,CAAU3M,IAAI,CAACkL,GAAL,CAASmnB,CAAT,CAAV,CAAJ,GAA6BryB,IAAI,CAACC,EAAL,GAAU,CAA7C;AACD;;AAED8V,SAAC,CAACtT,CAAF,GAAMq0B,MAAN;AACA/gB,SAAC,CAACrT,CAAF,GAAMq0B,GAAN;AACA,eAAOhhB,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,QAAD,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AChFf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,eAAS6S,KAAT,CAAeC,IAAf,EAAqB/rB,MAArB,EAA6BgsB,KAA7B,EAAoC;AACzChsB,cAAM,IAAIgsB,KAAV;AACA,eAAQp3B,IAAI,CAACsB,GAAL,CAAS,OAAO,4DAAU61B,IAAjB,CAAT,IAAmCn3B,IAAI,CAAC2C,GAAL,CAAS,CAAC,IAAIyI,MAAL,KAAgB,IAAIA,MAApB,CAAT,EAAsC,MAAMgsB,KAA5C,CAA3C;AACD;;AAEM,eAAStuB,IAAT,GAAgB;AACrB,aAAKuuB,OAAL,GAAer3B,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAf;AACA,aAAKovB,OAAL,GAAet3B,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAf;;AACA,YAAI,KAAKI,MAAT,EAAiB;AACf,cAAI,KAAK9H,EAAL,KAAY,CAAZ,IAAiB,CAAC4Z,KAAK,CAAC,KAAKsI,MAAN,CAAvB,IAAwC1iB,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,KAA0B,uDAAtE,EAA6E;AAC3E,iBAAK72B,EAAL,GAAU,OAAO,IAAI,6DAAK,KAAK0H,IAAV,IAAkBlI,IAAI,CAACqB,GAAL,CAAS,KAAKqhB,MAAd,CAA7B,CAAV;AACD;AACF,SAJD,MAKK;AACH,cAAI1iB,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,KAA0B,uDAA9B,EAAqC;AACnC,gBAAI,KAAKnvB,IAAL,GAAY,CAAhB,EAAmB;AACjB;AACA;AACA,mBAAKsE,GAAL,GAAW,CAAX;AACD,aAJD,MAKK;AACH;AACA;AACA,mBAAKA,GAAL,GAAW,CAAC,CAAZ;AACD;AACF;;AACD,eAAK+qB,IAAL,GAAYv3B,IAAI,CAACoB,IAAL,CAAUpB,IAAI,CAAC2C,GAAL,CAAS,IAAI,KAAKkD,CAAlB,EAAqB,IAAI,KAAKA,CAA9B,IAAmC7F,IAAI,CAAC2C,GAAL,CAAS,IAAI,KAAKkD,CAAlB,EAAqB,IAAI,KAAKA,CAA9B,CAA7C,CAAZ;;AACA,cAAI,KAAKrF,EAAL,KAAY,CAAZ,IAAiB,CAAC4Z,KAAK,CAAC,KAAKsI,MAAN,CAAvB,IAAwC1iB,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,KAA0B,uDAAtE,EAA6E;AAC3E,iBAAK72B,EAAL,GAAU,MAAM,KAAK+2B,IAAX,GAAkB,8DAAM,KAAK1xB,CAAX,EAAc7F,IAAI,CAACqB,GAAL,CAAS,KAAKqhB,MAAd,CAAd,EAAqC1iB,IAAI,CAACuB,GAAL,CAAS,KAAKmhB,MAAd,CAArC,CAAlB,GAAgF,8DAAM,KAAK7c,CAAX,EAAc,KAAK2G,GAAL,GAAW,KAAKkW,MAA9B,EAAsC,KAAKlW,GAAL,GAAWxM,IAAI,CAACqB,GAAL,CAAS,KAAKqhB,MAAd,CAAjD,CAA1F;AACD;;AACD,eAAKkC,GAAL,GAAW,8DAAM,KAAK/e,CAAX,EAAc,KAAKyxB,OAAnB,EAA4B,KAAKD,OAAjC,CAAX;AACA,eAAKG,EAAL,GAAU,IAAIx3B,IAAI,CAAC2M,IAAL,CAAU,KAAKuqB,KAAL,CAAW,KAAKhvB,IAAhB,EAAsB,KAAKovB,OAA3B,EAAoC,KAAKzxB,CAAzC,CAAV,CAAJ,GAA6D,yDAAvE;AACA,eAAK4xB,KAAL,GAAaz3B,IAAI,CAACuB,GAAL,CAAS,KAAKi2B,EAAd,CAAb;AACA,eAAKE,KAAL,GAAa13B,IAAI,CAACqB,GAAL,CAAS,KAAKm2B,EAAd,CAAb;AACD;AACF,O,CAED;;;AACO,eAAS54B,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AACA,YAAIyxB,MAAM,GAAGn0B,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAb;AACA,YAAIi1B,MAAM,GAAGp0B,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAb;AACA,YAAIZ,CAAJ,EAAOkZ,CAAP,EAAUkgB,IAAV,EAAgBC,IAAhB,EAAsBhrB,EAAtB,EAA0ByY,EAA1B;AACA,YAAIQ,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;;AAEA,YAAI5iB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS5K,GAAG,GAAG,KAAKwjB,KAApB,IAA6B5iB,IAAI,CAACC,EAA3C,KAAkD,uDAAlD,IAA2DD,IAAI,CAACgK,GAAL,CAAS7K,GAAG,GAAG,KAAK+I,IAApB,KAA6B,uDAA5F,EAAmG;AACjG;AACA;AACA6N,WAAC,CAACtT,CAAF,GAAMyJ,GAAN;AACA6J,WAAC,CAACrT,CAAF,GAAMwJ,GAAN;AACA,iBAAO6J,CAAP;AACD;;AACD,YAAI,KAAKzN,MAAT,EAAiB;AACf;AACA/J,WAAC,GAAG,IAAI,KAAKiC,EAAT,IAAe,IAAI,KAAK82B,OAAL,GAAenD,MAAnB,GAA4B,KAAKkD,OAAL,GAAejD,MAAf,GAAwBp0B,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAnE,CAAJ;AACA9P,WAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAL,GAAS/B,CAAT,GAAa61B,MAAb,GAAsBp0B,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAAtB,GAAuC,KAAKtC,EAAlD;AACAxN,WAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAL,GAAS/B,CAAT,IAAc,KAAK84B,OAAL,GAAelD,MAAf,GAAwB,KAAKmD,OAAL,GAAelD,MAAf,GAAwBp0B,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA9D,IAAgF,KAAKpC,EAA3F;AACA,iBAAO1N,CAAP;AACD,SAND,MAOK;AACH0B,WAAC,GAAG,IAAIzX,IAAI,CAAC2M,IAAL,CAAU,KAAKuqB,KAAL,CAAW/3B,GAAX,EAAgBg1B,MAAhB,EAAwB,KAAKtuB,CAA7B,CAAV,CAAJ,GAAiD,yDAArD;AACA+xB,cAAI,GAAG53B,IAAI,CAACuB,GAAL,CAASkW,CAAT,CAAP;AACAkgB,cAAI,GAAG33B,IAAI,CAACqB,GAAL,CAASoW,CAAT,CAAP;;AACA,cAAIzX,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,KAA0B,uDAA9B,EAAqC;AACnCzqB,cAAE,GAAG,8DAAM,KAAK/G,CAAX,EAAc1G,GAAG,GAAG,KAAKqN,GAAzB,EAA8B,KAAKA,GAAL,GAAW2nB,MAAzC,CAAL;AACA9O,cAAE,GAAG,IAAI,KAAK/kB,CAAT,GAAa,KAAKE,EAAlB,GAAuBoM,EAAvB,GAA4B,KAAK2qB,IAAtC;AACAxhB,aAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAL,GAAU8B,EAAE,GAAGrlB,IAAI,CAACqB,GAAL,CAASjC,GAAG,GAAG,KAAKwjB,KAApB,CAArB;AACA7M,aAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAL,GAAU,KAAKjX,GAAL,GAAW6Y,EAAX,GAAgBrlB,IAAI,CAACuB,GAAL,CAASnC,GAAG,GAAG,KAAKwjB,KAApB,CAAhC,CAJmC,CAKnC;;AACA,mBAAO7M,CAAP;AACD,WAPD,MAQK,IAAI/V,IAAI,CAACgK,GAAL,CAAS,KAAKstB,OAAd,IAAyB,uDAA7B,EAAoC;AACvC;AACA;AACA/4B,aAAC,GAAG,IAAI,KAAK+B,CAAT,GAAa,KAAKE,EAAlB,IAAwB,IAAIo3B,IAAI,GAAG53B,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAAnC,CAAJ;AACA9P,aAAC,CAACrT,CAAF,GAAMnE,CAAC,GAAGo5B,IAAV;AACD,WALI,MAMA;AACH;AACA;AACAp5B,aAAC,GAAG,IAAI,KAAK+B,CAAT,GAAa,KAAKE,EAAlB,GAAuB,KAAKokB,GAA5B,IAAmC,KAAK6S,KAAL,IAAc,IAAI,KAAKC,KAAL,GAAaC,IAAjB,GAAwB,KAAKF,KAAL,GAAaG,IAAb,GAAoB53B,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA1D,CAAnC,CAAJ;AACA9P,aAAC,CAACrT,CAAF,GAAMnE,CAAC,IAAI,KAAKk5B,KAAL,GAAaE,IAAb,GAAoB,KAAKD,KAAL,GAAaE,IAAb,GAAoB53B,IAAI,CAACuB,GAAL,CAASskB,IAAT,CAA5C,CAAD,GAA+D,KAAKpC,EAA1E;AACD;;AACD1N,WAAC,CAACtT,CAAF,GAAMlE,CAAC,GAAGq5B,IAAJ,GAAW53B,IAAI,CAACqB,GAAL,CAASwkB,IAAT,CAAX,GAA4B,KAAKtC,EAAvC;AACD,SA/CwB,CAgDzB;;;AACA,eAAOxN,CAAP;AACD,O,CAED;;;AACO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACA,YAAIrkB,GAAJ,EAASD,GAAT,EAAcyN,EAAd,EAAkBirB,EAAlB,EAAsBC,GAAtB;AACA,YAAIzS,EAAE,GAAGrlB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAT;;AACA,YAAI,KAAK4F,MAAT,EAAiB;AACf,cAAI8c,CAAC,GAAG,IAAIplB,IAAI,CAAC2M,IAAL,CAAU0Y,EAAE,IAAI,IAAI,KAAK/kB,CAAT,GAAa,KAAKE,EAAtB,CAAZ,CAAZ;AACApB,aAAG,GAAG,KAAKwjB,KAAX;AACAzjB,aAAG,GAAG,KAAK+I,IAAX;;AACA,cAAImd,EAAE,IAAI,uDAAV,EAAiB;AACftP,aAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,aAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,mBAAO4W,CAAP;AACD;;AACD5W,aAAG,GAAGa,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAAS6jB,CAAT,IAAc,KAAKkS,OAAnB,GAA6BvhB,CAAC,CAACrT,CAAF,GAAM1C,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAAN,GAAoB,KAAKiS,OAAzB,GAAmChS,EAA1E,CAAN;;AACA,cAAIrlB,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,IAAyB,uDAA7B,EAAoC;AAClC,gBAAI,KAAKnvB,IAAL,GAAY,CAAhB,EAAmB;AACjB9I,iBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgB,CAAE,CAAF,GAAMsT,CAAC,CAACrT,CAAxB,CAAxB,CAAN;AACD,aAFD,MAGK;AACHtD,iBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgBsT,CAAC,CAACrT,CAAlB,CAAxB,CAAN;AACD;AACF,WAPD,MAQK;AACHtD,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAF,GAAMzC,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAAjB,EAA8BC,EAAE,GAAG,KAAKgS,OAAV,GAAoBr3B,IAAI,CAACuB,GAAL,CAAS6jB,CAAT,CAApB,GAAkCrP,CAAC,CAACrT,CAAF,GAAM,KAAK40B,OAAX,GAAqBt3B,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAArF,CAAxB,CAAN;AACD;;AACDrP,WAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,WAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,iBAAO4W,CAAP;AACD,SAxBD,MAyBK;AACH,cAAI/V,IAAI,CAACgK,GAAL,CAAS,KAAKqtB,OAAd,KAA0B,uDAA9B,EAAqC;AACnC,gBAAIhS,EAAE,IAAI,uDAAV,EAAiB;AACflmB,iBAAG,GAAG,KAAK+I,IAAX;AACA9I,iBAAG,GAAG,KAAKwjB,KAAX;AACA7M,eAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,eAAC,CAACrT,CAAF,GAAMvD,GAAN,CAJe,CAKf;;AACA,qBAAO4W,CAAP;AACD;;AACDA,aAAC,CAACtT,CAAF,IAAO,KAAK+J,GAAZ;AACAuJ,aAAC,CAACrT,CAAF,IAAO,KAAK8J,GAAZ;AACAI,cAAE,GAAGyY,EAAE,GAAG,KAAKkS,IAAV,IAAkB,IAAI,KAAKj3B,CAAT,GAAa,KAAKE,EAApC,CAAL;AACArB,eAAG,GAAG,KAAKqN,GAAL,GAAW,8DAAM,KAAK3G,CAAX,EAAc+G,EAAd,CAAjB;AACAxN,eAAG,GAAG,KAAKoN,GAAL,GAAW,mEAAW,KAAKA,GAAL,GAAW,KAAKoW,KAAhB,GAAwB5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgB,CAAE,CAAF,GAAMsT,CAAC,CAACrT,CAAxB,CAAnC,CAAjB;AACD,WAdD,MAeK;AACHm1B,cAAE,GAAG,IAAI73B,IAAI,CAAC2M,IAAL,CAAU0Y,EAAE,GAAG,KAAKoS,KAAV,IAAmB,IAAI,KAAKn3B,CAAT,GAAa,KAAKE,EAAlB,GAAuB,KAAKokB,GAA/C,CAAV,CAAT;AACAxlB,eAAG,GAAG,KAAKwjB,KAAX;;AACA,gBAAIyC,EAAE,IAAI,uDAAV,EAAiB;AACfyS,iBAAG,GAAG,KAAKN,EAAX;AACD,aAFD,MAGK;AACHM,iBAAG,GAAG93B,IAAI,CAACkK,IAAL,CAAUlK,IAAI,CAACuB,GAAL,CAASs2B,EAAT,IAAe,KAAKH,KAApB,GAA4B3hB,CAAC,CAACrT,CAAF,GAAM1C,IAAI,CAACqB,GAAL,CAASw2B,EAAT,CAAN,GAAqB,KAAKJ,KAA1B,GAAkCpS,EAAxE,CAAN;AACAjmB,iBAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAF,GAAMzC,IAAI,CAACqB,GAAL,CAASw2B,EAAT,CAAjB,EAA+BxS,EAAE,GAAG,KAAKoS,KAAV,GAAkBz3B,IAAI,CAACuB,GAAL,CAASs2B,EAAT,CAAlB,GAAiC9hB,CAAC,CAACrT,CAAF,GAAM,KAAKg1B,KAAX,GAAmB13B,IAAI,CAACqB,GAAL,CAASw2B,EAAT,CAAnF,CAAxB,CAAN;AACD;;AACD14B,eAAG,GAAG,CAAC,CAAD,GAAK,8DAAM,KAAK0G,CAAX,EAAc7F,IAAI,CAACsB,GAAL,CAAS,OAAO,4DAAUw2B,GAAjB,CAAT,CAAd,CAAX;AACD;AACF;;AACD/hB,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN,CA5DyB,CA8DzB;;AACA,eAAO4W,CAAP;AAED;;AAEM,UAAIsO,KAAK,GAAG,CAAC,OAAD,EAAU,0BAAV,EAAsC,iCAAtC,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA,KAJM;AAKb6S,aAAK,EAAEA;AALM;;;;;;;;;;;;;;;;ACvKf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,eAASpuB,IAAT,GAAgB;AACrB,uDAAMA,IAAN,CAAW8S,KAAX,CAAiB,IAAjB;;AACA,YAAI,CAAC,KAAK2M,EAAV,EAAc;AACZ;AACD;;AACD,aAAKwP,KAAL,GAAa/3B,IAAI,CAACqB,GAAL,CAAS,KAAKsoB,KAAd,CAAb;AACA,aAAKqO,KAAL,GAAah4B,IAAI,CAACuB,GAAL,CAAS,KAAKooB,KAAd,CAAb;AACA,aAAKsO,EAAL,GAAU,IAAI,KAAK1P,EAAnB;;AACA,YAAI,CAAC,KAAKD,KAAV,EAAiB;AACf,eAAKA,KAAL,GAAa,mCAAb;AACD;AACF;;AAEM,eAAS1pB,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAIqU,IAAJ,EAAUC,IAAV,EAAgB6N,IAAhB,EAAsBvqB,CAAtB;AACAoI,SAAC,CAACtT,CAAF,GAAM,mEAAWsT,CAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAtB,CAAN;;AACA,uDAAMhkB,OAAN,CAAcgd,KAAd,CAAoB,IAApB,EAA0B,CAAC7F,CAAD,CAA1B;;AACAqU,YAAI,GAAGpqB,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAP;AACA2nB,YAAI,GAAGrqB,IAAI,CAACuB,GAAL,CAASwU,CAAC,CAACrT,CAAX,CAAP;AACAw1B,YAAI,GAAGl4B,IAAI,CAACuB,GAAL,CAASwU,CAAC,CAACtT,CAAX,CAAP;AACAkL,SAAC,GAAG,KAAKnN,EAAL,GAAU,KAAKy3B,EAAf,IAAqB,IAAI,KAAKF,KAAL,GAAa3N,IAAjB,GAAwB,KAAK4N,KAAL,GAAa3N,IAAb,GAAoB6N,IAAjE,CAAJ;AACAniB,SAAC,CAACtT,CAAF,GAAMkL,CAAC,GAAG0c,IAAJ,GAAWrqB,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACtT,CAAX,CAAjB;AACAsT,SAAC,CAACrT,CAAF,GAAMiL,CAAC,IAAI,KAAKqqB,KAAL,GAAa5N,IAAb,GAAoB,KAAK2N,KAAL,GAAa1N,IAAb,GAAoB6N,IAA5C,CAAP;AACAniB,SAAC,CAACtT,CAAF,GAAM,KAAKnC,CAAL,GAASyV,CAAC,CAACtT,CAAX,GAAe,KAAK8gB,EAA1B;AACAxN,SAAC,CAACrT,CAAF,GAAM,KAAKpC,CAAL,GAASyV,CAAC,CAACrT,CAAX,GAAe,KAAK+gB,EAA1B;AACA,eAAO1N,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIqU,IAAJ,EAAUC,IAAV,EAAgBjrB,GAAhB,EAAqBD,GAArB,EAA0B8tB,GAA1B;AACAlX,SAAC,CAACtT,CAAF,GAAM,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,IAAkB,KAAKjjB,CAA7B;AACAyV,SAAC,CAACrT,CAAF,GAAM,CAACqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,IAAkB,KAAKnjB,CAA7B;AAEAyV,SAAC,CAACtT,CAAF,IAAO,KAAKjC,EAAZ;AACAuV,SAAC,CAACrT,CAAF,IAAO,KAAKlC,EAAZ;;AACA,YAAKysB,GAAG,GAAGjtB,IAAI,CAACoB,IAAL,CAAU2U,CAAC,CAACtT,CAAF,GAAMsT,CAAC,CAACtT,CAAR,GAAYsT,CAAC,CAACrT,CAAF,GAAMqT,CAAC,CAACrT,CAA9B,CAAX,EAA8C;AAC5C,cAAI0iB,CAAC,GAAG,IAAIplB,IAAI,CAAC2X,KAAL,CAAWsV,GAAX,EAAgB,KAAKgL,EAArB,CAAZ;AACA7N,cAAI,GAAGpqB,IAAI,CAACqB,GAAL,CAAS+jB,CAAT,CAAP;AACAiF,cAAI,GAAGrqB,IAAI,CAACuB,GAAL,CAAS6jB,CAAT,CAAP;AACAjmB,aAAG,GAAGa,IAAI,CAACkK,IAAL,CAAUmgB,IAAI,GAAG,KAAK0N,KAAZ,GAAoBhiB,CAAC,CAACrT,CAAF,GAAM0nB,IAAN,GAAa,KAAK4N,KAAlB,GAA0B/K,GAAxD,CAAN;AACA7tB,aAAG,GAAGY,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAF,GAAM2nB,IAAjB,EAAuB6C,GAAG,GAAG,KAAK+K,KAAX,GAAmB3N,IAAnB,GAA0BtU,CAAC,CAACrT,CAAF,GAAM,KAAKq1B,KAAX,GAAmB3N,IAApE,CAAN;AACD,SAND,MAOK;AACHjrB,aAAG,GAAG,KAAKwqB,KAAX;AACAvqB,aAAG,GAAG,CAAN;AACD;;AAED2W,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;;AACA,uDAAMN,OAAN,CAAc+c,KAAd,CAAoB,IAApB,EAA0B,CAAC7F,CAAD,CAA1B;;AACAA,SAAC,CAACtT,CAAF,GAAM,mEAAWsT,CAAC,CAACtT,CAAF,GAAM,KAAKmgB,KAAtB,CAAN;AACA,eAAO7M,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,0BAAD,EAA6B,uBAA7B,EAAsD,qBAAtD,EAA6E,QAA7E,EAAsF,mCAAtF,EAA0H,sBAA1H,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC1Df;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,iD,CAAA;AACA;;;AAUO,eAASvb,IAAT,GAAgB;AACrB,aAAKya,EAAL,GAAU,KAAKA,EAAL,KAAY/Z,SAAZ,GAAwB,KAAK+Z,EAA7B,GAAkC,CAA5C;AACA,aAAKE,EAAL,GAAU,KAAKA,EAAL,KAAYja,SAAZ,GAAwB,KAAKia,EAA7B,GAAkC,CAA5C;AACA,aAAKb,KAAL,GAAa,KAAKA,KAAL,KAAepZ,SAAf,GAA2B,KAAKoZ,KAAhC,GAAwC,CAArD;AACA,aAAK1a,IAAL,GAAY,KAAKA,IAAL,KAAcsB,SAAd,GAA0B,KAAKtB,IAA/B,GAAsC,CAAlD;;AAEA,YAAI,KAAKU,EAAT,EAAa;AACX,eAAK6E,EAAL,GAAU,gEAAQ,KAAK7E,EAAb,CAAV;AACA,eAAK2e,GAAL,GAAW,gEAAQ,KAAKrf,IAAb,EAAmBlI,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAnB,EAAwClI,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAxC,EAA6D,KAAKuF,EAAlE,CAAX;AACD;AACF;AAED;;;;;;AAIO,eAAS7O,OAAT,CAAiBmX,CAAjB,EAAoB;AACzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA,YAAI6oB,SAAS,GAAG,mEAAWnsB,GAAG,GAAG,KAAKwjB,KAAtB,CAAhB;AACA,YAAIpW,GAAJ;AACA,YAAI/J,CAAJ,EAAOC,CAAP;AACA,YAAI4J,OAAO,GAAGtM,IAAI,CAACqB,GAAL,CAASlC,GAAT,CAAd;AACA,YAAIoN,OAAO,GAAGvM,IAAI,CAACuB,GAAL,CAASpC,GAAT,CAAd;;AAEA,YAAI,CAAC,KAAKyJ,EAAV,EAAc;AACZ,cAAIR,CAAC,GAAGmE,OAAO,GAAGvM,IAAI,CAACqB,GAAL,CAASkqB,SAAT,CAAlB;;AAEA,cAAKvrB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS5B,CAAT,IAAc,CAAvB,CAAD,GAA8B,uDAAlC,EAAyC;AACvC,mBAAQ,EAAR;AACD,WAFD,MAGK;AACH3F,aAAC,GAAG,MAAM,KAAKnC,CAAX,GAAe,KAAKE,EAApB,GAAyBR,IAAI,CAACoM,GAAL,CAAS,CAAC,IAAIhE,CAAL,KAAW,IAAIA,CAAf,CAAT,CAAzB,GAAuD,KAAKmb,EAAhE;AACA7gB,aAAC,GAAG6J,OAAO,GAAGvM,IAAI,CAACuB,GAAL,CAASgqB,SAAT,CAAV,GAAgCvrB,IAAI,CAACoB,IAAL,CAAU,IAAIpB,IAAI,CAAC2C,GAAL,CAASyF,CAAT,EAAY,CAAZ,CAAd,CAApC;AACAA,aAAC,GAAGpI,IAAI,CAACgK,GAAL,CAAStH,CAAT,CAAJ;;AAEA,gBAAI0F,CAAC,IAAI,CAAT,EAAY;AACV,kBAAKA,CAAC,GAAG,CAAL,GAAU,uDAAd,EAAqB;AACnB,uBAAQ,EAAR;AACD,eAFD,MAGK;AACH1F,iBAAC,GAAG,CAAJ;AACD;AACF,aAPD,MAQK;AACHA,eAAC,GAAG1C,IAAI,CAAC+mB,IAAL,CAAUrkB,CAAV,CAAJ;AACD;;AAED,gBAAIvD,GAAG,GAAG,CAAV,EAAa;AACXuD,eAAC,GAAG,CAACA,CAAL;AACD;;AAEDA,aAAC,GAAG,KAAKpC,CAAL,GAAS,KAAKE,EAAd,IAAoBkC,CAAC,GAAG,KAAKwF,IAA7B,IAAqC,KAAKub,EAA9C;AACD;AACF,SA7BD,MA8BK;AACH,cAAIkE,EAAE,GAAGpb,OAAO,GAAGgf,SAAnB;AACA,cAAI4M,GAAG,GAAGn4B,IAAI,CAAC2C,GAAL,CAASglB,EAAT,EAAa,CAAb,CAAV;AACA,cAAIvC,CAAC,GAAG,KAAKvc,GAAL,GAAW7I,IAAI,CAAC2C,GAAL,CAAS4J,OAAT,EAAkB,CAAlB,CAAnB;AACA,cAAI6rB,EAAE,GAAGp4B,IAAI,CAAC2C,GAAL,CAASyiB,CAAT,EAAY,CAAZ,CAAT;AACA,cAAIiT,EAAE,GAAGr4B,IAAI,CAACgK,GAAL,CAASuC,OAAT,IAAoB,uDAApB,GAA4BvM,IAAI,CAACsB,GAAL,CAASnC,GAAT,CAA5B,GAA4C,CAArD;AACA,cAAIkK,CAAC,GAAGrJ,IAAI,CAAC2C,GAAL,CAAS01B,EAAT,EAAa,CAAb,CAAR;AACA,cAAIzrB,EAAE,GAAG5M,IAAI,CAAC2C,GAAL,CAAS0G,CAAT,EAAY,CAAZ,CAAT;AACAmD,aAAG,GAAG,IAAI,KAAK5D,EAAL,GAAU5I,IAAI,CAAC2C,GAAL,CAAS2J,OAAT,EAAkB,CAAlB,CAApB;AACAqb,YAAE,GAAGA,EAAE,GAAG3nB,IAAI,CAACoB,IAAL,CAAUoL,GAAV,CAAV;AACA,cAAIV,EAAE,GAAG,gEAAQ3M,GAAR,EAAamN,OAAb,EAAsBC,OAAtB,EAA+B,KAAKkB,EAApC,CAAT;AAEAhL,WAAC,GAAG,KAAKnC,CAAL,IAAU,KAAKE,EAAL,GAAUmnB,EAAV,IAAgB,IAC5BwQ,GAAG,GAAG,CAAN,IAAW,IAAI9uB,CAAJ,GAAQ+b,CAAR,GACX+S,GAAG,GAAG,EAAN,IAAY,IAAI,KAAK9uB,CAAT,GAAauD,EAAb,GAAkB,KAAKwY,CAAvB,GAA2B,KAAK/b,CAAL,GAAS+b,CAApC,GACZ+S,GAAG,GAAG,EAAN,IAAY,KAAK,MAAMvrB,EAAX,GAAgBA,EAAE,GAAGvD,CAArB,GAAyB,MAAMA,CAA3C,CADA,CADA,CADY,CAAV,IAIF,KAAKka,EAJP;AAMA7gB,WAAC,GAAG,KAAKpC,CAAL,IAAU,KAAKE,EAAL,IAAWsL,EAAE,GAAG,KAAKyb,GAAV,GACvBjb,OAAO,GAAGif,SAAV,GAAsB5D,EAAtB,GAA2B,CAA3B,IAAgC,IAChCwQ,GAAG,GAAG,EAAN,IAAY,IAAI9uB,CAAJ,GAAQ,IAAI+b,CAAZ,GAAgB,IAAIgT,EAApB,GACZD,GAAG,GAAG,EAAN,IAAY,KAAKvrB,EAAL,GAAU,KAAKvD,CAAf,GAAmB,MAAM+b,CAAzB,GAA6B,MAAM/b,CAAN,GAAU+b,CAAvC,GACZ+S,GAAG,GAAG,EAAN,IAAY,OAAO,MAAMvrB,EAAb,GAAkBA,EAAE,GAAGvD,CAAvB,GAA2B,OAAOA,CAA9C,CADA,CADA,CADA,CADY,CAAV,IAKF,KAAKoa,EALP;AAMD;;AAED1N,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AAEA,eAAOqT,CAAP;AACD;AAED;;;;;AAGO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAIvJ,GAAJ,EAASZ,GAAT;AACA,YAAIzM,GAAJ,EAASC,GAAT;AACA,YAAIqD,CAAC,GAAG,CAACsT,CAAC,CAACtT,CAAF,GAAM,KAAK8gB,EAAZ,KAAmB,IAAI,KAAKjjB,CAA5B,CAAR;AACA,YAAIoC,CAAC,GAAG,CAACqT,CAAC,CAACrT,CAAF,GAAM,KAAK+gB,EAAZ,KAAmB,IAAI,KAAKnjB,CAA5B,CAAR;;AAEA,YAAI,CAAC,KAAKsI,EAAV,EAAc;AACZ,cAAIqgB,CAAC,GAAGjpB,IAAI,CAACkL,GAAL,CAASzI,CAAC,GAAG,KAAKjC,EAAlB,CAAR;AACA,cAAImoB,CAAC,GAAG,OAAOM,CAAC,GAAG,IAAIA,CAAf,CAAR;AACA,cAAI9d,IAAI,GAAG,KAAKjD,IAAL,GAAYxF,CAAC,GAAG,KAAKlC,EAAhC;AACA,cAAIiL,CAAC,GAAGzL,IAAI,CAACuB,GAAL,CAAS4J,IAAT,CAAR;AACAqB,aAAG,GAAGxM,IAAI,CAACoB,IAAL,CAAU,CAAC,IAAIpB,IAAI,CAAC2C,GAAL,CAAS8I,CAAT,EAAY,CAAZ,CAAL,KAAwB,IAAIzL,IAAI,CAAC2C,GAAL,CAASgmB,CAAT,EAAY,CAAZ,CAA5B,CAAV,CAAN;AACAxpB,aAAG,GAAGa,IAAI,CAACkK,IAAL,CAAUsC,GAAV,CAAN;;AAEA,cAAI9J,CAAC,GAAG,CAAR,EAAW;AACTvD,eAAG,GAAG,CAACA,GAAP;AACD;;AAED,cAAKwpB,CAAC,KAAK,CAAP,IAAcld,CAAC,KAAK,CAAxB,EAA4B;AAC1BrM,eAAG,GAAG,CAAN;AACD,WAFD,MAGK;AACHA,eAAG,GAAG,mEAAWY,IAAI,CAAC2X,KAAL,CAAWgR,CAAX,EAAcld,CAAd,IAAmB,KAAKmX,KAAnC,CAAN;AACD;AACF,SAlBD,MAmBK;AAAE;AACLpW,aAAG,GAAG,KAAK+a,GAAL,GAAW7kB,CAAC,GAAG,KAAKlC,EAA1B;AACAoL,aAAG,GAAG,oEAAYY,GAAZ,EAAiB,KAAK5D,EAAtB,EAA0B,KAAK6E,EAA/B,CAAN;;AAEA,cAAIzN,IAAI,CAACgK,GAAL,CAAS4B,GAAT,IAAgB,yDAApB,EAA6B;AAC3B,gBAAIU,OAAO,GAAGtM,IAAI,CAACqB,GAAL,CAASuK,GAAT,CAAd;AACA,gBAAIW,OAAO,GAAGvM,IAAI,CAACuB,GAAL,CAASqK,GAAT,CAAd;AACA,gBAAI0sB,OAAO,GAAGt4B,IAAI,CAACgK,GAAL,CAASuC,OAAT,IAAoB,uDAApB,GAA4BvM,IAAI,CAACsB,GAAL,CAASsK,GAAT,CAA5B,GAA4C,CAA1D;AACA,gBAAIwZ,CAAC,GAAG,KAAKvc,GAAL,GAAW7I,IAAI,CAAC2C,GAAL,CAAS4J,OAAT,EAAkB,CAAlB,CAAnB;AACA,gBAAI6rB,EAAE,GAAGp4B,IAAI,CAAC2C,GAAL,CAASyiB,CAAT,EAAY,CAAZ,CAAT;AACA,gBAAI/b,CAAC,GAAGrJ,IAAI,CAAC2C,GAAL,CAAS21B,OAAT,EAAkB,CAAlB,CAAR;AACA,gBAAI1rB,EAAE,GAAG5M,IAAI,CAAC2C,GAAL,CAAS0G,CAAT,EAAY,CAAZ,CAAT;AACAmD,eAAG,GAAG,IAAI,KAAK5D,EAAL,GAAU5I,IAAI,CAAC2C,GAAL,CAAS2J,OAAT,EAAkB,CAAlB,CAApB;AACA,gBAAI8e,CAAC,GAAG3oB,CAAC,GAAGzC,IAAI,CAACoB,IAAL,CAAUoL,GAAV,CAAJ,GAAqB,KAAKhM,EAAlC;AACA,gBAAI+3B,EAAE,GAAGv4B,IAAI,CAAC2C,GAAL,CAASyoB,CAAT,EAAY,CAAZ,CAAT;AACA5e,eAAG,GAAGA,GAAG,GAAG8rB,OAAZ;AAEAn5B,eAAG,GAAGyM,GAAG,GAAIY,GAAG,GAAG+rB,EAAN,IAAY,IAAI,KAAK3vB,EAArB,CAAD,GAA6B,GAA7B,IAAoC,IAC9C2vB,EAAE,GAAG,EAAL,IAAW,IAAI,IAAIlvB,CAAR,GAAY,IAAI+b,CAAJ,GAAQ/b,CAApB,GAAwB+b,CAAxB,GAA4B,IAAIgT,EAAhC,GACXG,EAAE,GAAG,EAAL,IAAW,KAAK,KAAKlvB,CAAV,GAAc,MAAM+b,CAAN,GAAU/b,CAAxB,GAA4B,KAAKuD,EAAjC,GAAsC,KAAKwY,CAA3C,GACXmT,EAAE,GAAG,EAAL,IAAW,OAAO,OAAOlvB,CAAd,GAAkB,OAAOuD,EAAzB,GAA8B,OAAOA,EAAP,GAAYvD,CAArD,CADA,CADA,CADU,CAAZ;AAKAjK,eAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAcwI,CAAC,IAAI,IAClCmN,EAAE,GAAG,CAAL,IAAU,IAAI,IAAIlvB,CAAR,GAAY+b,CAAZ,GACVmT,EAAE,GAAG,EAAL,IAAW,IAAI,KAAKlvB,CAAT,GAAa,KAAKuD,EAAlB,GAAuB,IAAIwY,CAAJ,GAAQ/b,CAA/B,GAAmC,IAAI+b,CAAvC,GACXmT,EAAE,GAAG,EAAL,IAAW,KAAK,MAAMlvB,CAAX,GAAe,OAAOuD,EAAtB,GAA2B,MAAMA,EAAN,GAAWvD,CAAjD,CADA,CADA,CAD8B,CAAD,GAG4BkD,OAHrD,CAAN;AAID,WAtBD,MAuBK;AACHpN,eAAG,GAAG,4DAAU,6DAAKuD,CAAL,CAAhB;AACAtD,eAAG,GAAG,CAAN;AACD;AACF;;AAED2W,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AAEA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,0BAAD,EAA6B,0BAA7B,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKf,UAAI0H,IAAI,GAAG;AACTH,cAAM,EAAE,CADC;AAETD,cAAM,EAAE,CAFC;AAGTE,aAAK,EAAE,CAHE;AAITC,aAAK,EAAE;AAJE,OAAX;AAUA,UAAI1J,MAAM,GAAG;AACX3W,SAAC,EAAM;AAAEkQ,aAAG,EAAE,MAAP;AAAe/R,aAAG,EAAE;AAApB,SADI;AACkC;AAC7C4uB,WAAG,EAAI;AAAE7c,aAAG,EAAE,CAAP;AAAU/R,aAAG,EAAE,IAAf;AAAqB6uB,iBAAO,EAAE;AAA9B,SAFI;AAEkC;AAC7CC,YAAI,EAAG;AAAE/c,aAAG,EAAE,CAAP;AAAU/R,aAAG,EAAE,IAAf;AAAqB6uB,iBAAO,EAAE;AAA9B,SAHI;AAGkC;AAC7C7V,aAAK,EAAE;AAAEjH,aAAG,EAAE,CAAP;AAAU/R,aAAG,EAAE;AAAf,SAJI;AAIkC;AAC7C1B,YAAI,EAAG;AAAEyT,aAAG,EAAE,CAAP;AAAU/R,aAAG,EAAE;AAAf,SALI,CAKkC;;AALlC,OAAb;;AAQO,eAASd,IAAT,GAAgB;AACrB8L,cAAM,CAACJ,IAAP,CAAY4N,MAAZ,EAAoBvN,OAApB,CAA4B,UAAUkB,CAAV,EAAa;AACvC,cAAI,OAAO,KAAKA,CAAL,CAAP,KAAmB,WAAvB,EAAoC;AAClC,iBAAKA,CAAL,IAAUqM,MAAM,CAACrM,CAAD,CAAN,CAAU4F,GAApB;AACD,WAFD,MAEO,IAAIyG,MAAM,CAACrM,CAAD,CAAN,CAAUnM,GAAV,IAAiBwQ,KAAK,CAAC,KAAKrE,CAAL,CAAD,CAA1B,EAAqC;AAC1C,kBAAM,IAAI6S,KAAJ,CAAU,8CAA8C7S,CAA9C,GAAkD,KAAlD,GAA0D,KAAKA,CAAL,CAApE,CAAN;AACD,WAFM,MAEA,IAAIqM,MAAM,CAACrM,CAAD,CAAN,CAAUnM,GAAd,EAAmB;AACxB,iBAAKmM,CAAL,IAAUnQ,UAAU,CAAC,KAAKmQ,CAAL,CAAD,CAApB;AACD;;AACD,cAAIqM,MAAM,CAACrM,CAAD,CAAN,CAAU0iB,OAAd,EAAuB;AACrB,iBAAK1iB,CAAL,IAAU,KAAKA,CAAL,IAAU,qDAApB;AACD;AACF,SAX2B,CAW1B4iB,IAX0B,CAWrB,IAXqB,CAA5B;;AAaA,YAAI34B,IAAI,CAACgK,GAAL,CAAUhK,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,yDAAhC,IAA4C,uDAAhD,EAAuD;AACrD,eAAK6jB,IAAL,GAAY,KAAK7jB,IAAL,GAAY,CAAZ,GAAgB6jB,IAAI,CAACJ,MAArB,GAA8BI,IAAI,CAACH,MAA/C;AACD,SAFD,MAEO,IAAI5rB,IAAI,CAACgK,GAAL,CAAS,KAAK9B,IAAd,IAAsB,uDAA1B,EAAiC;AACtC,eAAK6jB,IAAL,GAAYA,IAAI,CAACF,KAAjB;AACD,SAFM,MAEA;AACL,eAAKE,IAAL,GAAYA,IAAI,CAACD,KAAjB;AACA,eAAKW,MAAL,GAAczsB,IAAI,CAACqB,GAAL,CAAS,KAAK6G,IAAd,CAAd;AACA,eAAKwkB,MAAL,GAAc1sB,IAAI,CAACuB,GAAL,CAAS,KAAK2G,IAAd,CAAd;AACD;;AAED,aAAK0wB,GAAL,GAAW,KAAKntB,CAAL,GAAS,KAAKnL,CAAzB,CAxBqB,CAwBQ;;AAE7B,YAAI,KAAKs4B,GAAL,IAAY,CAAZ,IAAiB,KAAKA,GAAL,GAAW,IAAhC,EAAsC;AACpC,gBAAM,IAAIhQ,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,aAAK7S,CAAL,GAAS,IAAI,KAAK6iB,GAAlB;AACA,aAAKC,EAAL,GAAU,IAAI,KAAK9iB,CAAnB;AACA,aAAKxK,EAAL,GAAU,IAAI,KAAKqtB,GAAnB;AACA,aAAKE,KAAL,GAAa,CAAC,KAAK/iB,CAAL,GAAS,CAAV,IAAe,KAAKxK,EAAjC;AACA,aAAK3C,EAAL,GAAU,CAAV;AAEA,YAAImwB,KAAK,GAAG,KAAKL,IAAjB;AACA,YAAIxV,KAAK,GAAG,KAAKsV,GAAjB;AACA,aAAKQ,EAAL,GAAUh5B,IAAI,CAACuB,GAAL,CAAS2hB,KAAT,CAAV;AACA,aAAK+V,EAAL,GAAUj5B,IAAI,CAACqB,GAAL,CAAS6hB,KAAT,CAAV;AACA,aAAKgW,EAAL,GAAUl5B,IAAI,CAACuB,GAAL,CAASw3B,KAAT,CAAV;AACA,aAAKI,EAAL,GAAUn5B,IAAI,CAACqB,GAAL,CAAS03B,KAAT,CAAV;AACD;;AAEM,eAASn6B,OAAT,CAAiBmX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAKmgB,KAAZ;AACA,YAAIxX,MAAM,GAAGpL,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACrT,CAAX,CAAb;AACA,YAAI+J,MAAM,GAAGzM,IAAI,CAACuB,GAAL,CAASwU,CAAC,CAACrT,CAAX,CAAb;AACA,YAAIiqB,MAAM,GAAG3sB,IAAI,CAACuB,GAAL,CAASwU,CAAC,CAACtT,CAAX,CAAb;AACA,YAAIA,CAAJ,EAAOC,CAAP;;AACA,gBAAQ,KAAKqpB,IAAb;AACE,eAAKA,IAAI,CAACD,KAAV;AACEppB,aAAC,GAAG,KAAK+pB,MAAL,GAAcrhB,MAAd,GAAuB,KAAKshB,MAAL,GAAcjgB,MAAd,GAAuBkgB,MAAlD;AACA;;AACF,eAAKZ,IAAI,CAACF,KAAV;AACEnpB,aAAC,GAAG+J,MAAM,GAAGkgB,MAAb;AACA;;AACF,eAAKZ,IAAI,CAACJ,MAAV;AACEjpB,aAAC,GAAG,CAAC0I,MAAL;AACA;;AACF,eAAK2gB,IAAI,CAACH,MAAV;AACElpB,aAAC,GAAG0I,MAAJ;AACA;AAZJ;;AAcA1I,SAAC,GAAG,KAAKk2B,GAAL,IAAY,KAAK7iB,CAAL,GAASrT,CAArB,CAAJ;AACAD,SAAC,GAAGC,CAAC,GAAG+J,MAAJ,GAAazM,IAAI,CAACqB,GAAL,CAAS0U,CAAC,CAACtT,CAAX,CAAjB;;AAEA,gBAAQ,KAAKspB,IAAb;AACE,eAAKA,IAAI,CAACD,KAAV;AACEppB,aAAC,IAAI,KAAKgqB,MAAL,GAActhB,MAAd,GAAuB,KAAKqhB,MAAL,GAAchgB,MAAd,GAAuBkgB,MAAnD;AACA;;AACF,eAAKZ,IAAI,CAACF,KAAV;AACEnpB,aAAC,IAAI0I,MAAL;AACA;;AACF,eAAK2gB,IAAI,CAACH,MAAV;AACElpB,aAAC,IAAI,EAAE+J,MAAM,GAAGkgB,MAAX,CAAL;AACA;;AACF,eAAKZ,IAAI,CAACJ,MAAV;AACEjpB,aAAC,IAAI+J,MAAM,GAAGkgB,MAAd;AACA;AAZJ,SAvByB,CAsCzB;;;AACA,YAAIyM,EAAJ,EAAQC,EAAR;AACAD,UAAE,GAAG12B,CAAC,GAAG,KAAKs2B,EAAT,GAAcv2B,CAAC,GAAG,KAAKw2B,EAA5B;AACAI,UAAE,GAAG,KAAKD,EAAE,GAAG,KAAKD,EAAV,GAAe,KAAK5tB,EAApB,GAAyB,KAAK2tB,EAAnC,CAAL;AACAz2B,SAAC,GAAG,CAACA,CAAC,GAAG,KAAKu2B,EAAT,GAAct2B,CAAC,GAAG,KAAKu2B,EAAxB,IAA8B,KAAKC,EAAnC,GAAwCG,EAA5C;AACA32B,SAAC,GAAG02B,EAAE,GAAGC,EAAT;AAEAtjB,SAAC,CAACtT,CAAF,GAAMA,CAAC,GAAG,KAAKnC,CAAf;AACAyV,SAAC,CAACrT,CAAF,GAAMA,CAAC,GAAG,KAAKpC,CAAf;AACA,eAAOyV,CAAP;AACD;;AAEM,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzBA,SAAC,CAACtT,CAAF,IAAO,KAAKnC,CAAZ;AACAyV,SAAC,CAACrT,CAAF,IAAO,KAAKpC,CAAZ;AACA,YAAI6J,CAAC,GAAG;AAAE1H,WAAC,EAAEsT,CAAC,CAACtT,CAAP;AAAUC,WAAC,EAAEqT,CAAC,CAACrT;AAAf,SAAR,CAHyB,CAKzB;;AACA,YAAI42B,EAAJ,EAAQC,EAAR,EAAYH,EAAZ;AACAA,UAAE,GAAG,KAAK,KAAKR,GAAL,GAAW7iB,CAAC,CAACrT,CAAF,GAAM,KAAKy2B,EAA3B,CAAL;AACAG,UAAE,GAAG,KAAKV,GAAL,GAAW7iB,CAAC,CAACtT,CAAb,GAAiB22B,EAAtB;AACAG,UAAE,GAAG,KAAKX,GAAL,GAAW7iB,CAAC,CAACrT,CAAb,GAAiB,KAAKw2B,EAAtB,GAA2BE,EAAhC;AACArjB,SAAC,CAACtT,CAAF,GAAM62B,EAAE,GAAG,KAAKN,EAAV,GAAeO,EAAE,GAAG,KAAKN,EAA/B;AACAljB,SAAC,CAACrT,CAAF,GAAM62B,EAAE,GAAG,KAAKP,EAAV,GAAeM,EAAE,GAAG,KAAKL,EAA/B;AAEA,YAAI5T,EAAE,GAAG,8DAAMtP,CAAC,CAACtT,CAAR,EAAWsT,CAAC,CAACrT,CAAb,CAAT;;AACA,YAAI1C,IAAI,CAACgK,GAAL,CAASqb,EAAT,IAAe,uDAAnB,EAA0B;AACxBlb,WAAC,CAAC1H,CAAF,GAAM,CAAN;AACA0H,WAAC,CAACzH,CAAF,GAAMqT,CAAC,CAACrT,CAAR;AACD,SAHD,MAGO;AACL,cAAIukB,IAAJ,EAAUD,IAAV;AACAA,cAAI,GAAG,IAAI3B,EAAE,GAAGA,EAAL,GAAU,KAAKyT,KAA1B;AACA9R,cAAI,GAAG,CAAC,KAAKjR,CAAL,GAAS/V,IAAI,CAACoB,IAAL,CAAU4lB,IAAV,CAAV,KAA8B,KAAK4R,GAAL,GAAWvT,EAAX,GAAgBA,EAAE,GAAG,KAAKuT,GAAxD,CAAP;AACA3R,cAAI,GAAGjnB,IAAI,CAACoB,IAAL,CAAU,IAAI4lB,IAAI,GAAGA,IAArB,CAAP;;AACA,kBAAQ,KAAK+E,IAAb;AACE,iBAAKA,IAAI,CAACD,KAAV;AACE3hB,eAAC,CAACzH,CAAF,GAAM1C,IAAI,CAACkK,IAAL,CAAU+c,IAAI,GAAG,KAAKwF,MAAZ,GAAqB1W,CAAC,CAACrT,CAAF,GAAMskB,IAAN,GAAa,KAAK0F,MAAlB,GAA2BrH,EAA1D,CAAN;AACAtP,eAAC,CAACrT,CAAF,GAAM,CAACukB,IAAI,GAAG,KAAKwF,MAAL,GAAczsB,IAAI,CAACqB,GAAL,CAAS8I,CAAC,CAACzH,CAAX,CAAtB,IAAuC2iB,EAA7C;AACAtP,eAAC,CAACtT,CAAF,IAAOukB,IAAI,GAAG,KAAK0F,MAAnB;AACA;;AACF,iBAAKX,IAAI,CAACF,KAAV;AACE1hB,eAAC,CAACzH,CAAF,GAAM1C,IAAI,CAACkK,IAAL,CAAU6L,CAAC,CAACrT,CAAF,GAAMskB,IAAN,GAAa3B,EAAvB,CAAN;AACAtP,eAAC,CAACrT,CAAF,GAAMukB,IAAI,GAAG5B,EAAb;AACAtP,eAAC,CAACtT,CAAF,IAAOukB,IAAP;AACA;;AACF,iBAAK+E,IAAI,CAACH,MAAV;AACEzhB,eAAC,CAACzH,CAAF,GAAM1C,IAAI,CAACkK,IAAL,CAAU+c,IAAV,CAAN;AACAlR,eAAC,CAACrT,CAAF,GAAM,CAACqT,CAAC,CAACrT,CAAT;AACA;;AACF,iBAAKqpB,IAAI,CAACJ,MAAV;AACExhB,eAAC,CAACzH,CAAF,GAAM,CAAC1C,IAAI,CAACkK,IAAL,CAAU+c,IAAV,CAAP;AACA;AAjBJ;;AAmBA9c,WAAC,CAAC1H,CAAF,GAAMzC,IAAI,CAAC2X,KAAL,CAAW5B,CAAC,CAACtT,CAAb,EAAgBsT,CAAC,CAACrT,CAAlB,CAAN;AACD;;AAEDqT,SAAC,CAACtT,CAAF,GAAM0H,CAAC,CAAC1H,CAAF,GAAM,KAAKmgB,KAAjB;AACA7M,SAAC,CAACrT,CAAF,GAAMyH,CAAC,CAACzH,CAAR;AACA,eAAOqT,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,oBAAD,EAAuB,OAAvB,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;ACnKf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAImV,SAAS,GAAG,QAAhB;;AAIA,eAAS1wB,IAAT,GAAgB;AACrB,YAAImB,IAAI,GAAG,oEAAY,KAAKA,IAAjB,EAAuB,KAAK2Y,KAA5B,CAAX;;AACA,YAAI3Y,IAAI,KAAKT,SAAb,EAAwB;AACtB,gBAAM,IAAIof,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACD,aAAK1gB,IAAL,GAAY,CAAZ;AACA,aAAK0a,KAAL,GAAc,CAAE,IAAI5iB,IAAI,CAACgK,GAAL,CAASC,IAAT,CAAL,GAAuB,GAAxB,IAA+B,qDAA7C;AACA,aAAKsZ,EAAL,GAAU,MAAV;AACA,aAAKE,EAAL,GAAU,KAAKI,QAAL,GAAgB,QAAhB,GAA2B,CAArC;AACA,aAAKrjB,EAAL,GAAU,MAAV;;AAEA,wDAAOsI,IAAP,CAAY8S,KAAZ,CAAkB,IAAlB;;AACA,aAAKhd,OAAL,GAAe,gDAAOA,OAAtB;AACA,aAAKC,OAAL,GAAe,gDAAOA,OAAtB;AACD;;AAEM,UAAIwlB,KAAK,GAAG,CAAC,sCAAD,EAAyC,KAAzC,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEbub,aAAK,EAAEA,KAFM;AAGbmV,iBAAS,EAAEA;AAHE;;;;;;;;;;;;;;;;ACvBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;AAEO,eAAS1wB,IAAT,GAAgB;AACrB;AACA,aAAKwtB,CAAL,GAAS,KAAKh2B,CAAd;AACD;;AAEM,eAAS1B,OAAT,CAAiBmX,CAAjB,EAAoB;AAEzB,YAAI3W,GAAG,GAAG2W,CAAC,CAACtT,CAAZ;AACA,YAAItD,GAAG,GAAG4W,CAAC,CAACrT,CAAZ;AAEA;;;AAEA,YAAImjB,IAAI,GAAG,mEAAWzmB,GAAG,GAAG,KAAKwjB,KAAtB,CAAX;AACA,YAAIngB,CAAJ,EAAOC,CAAP;;AAEA,YAAI1C,IAAI,CAACgK,GAAL,CAAS7K,GAAT,KAAiB,uDAArB,EAA4B;AAC1BsD,WAAC,GAAG,KAAK8gB,EAAL,GAAU,KAAK+S,CAAL,GAASzQ,IAAvB;AACAnjB,WAAC,GAAG,KAAK+gB,EAAT;AACD;;AACD,YAAI+B,KAAK,GAAG,8DAAM,IAAIxlB,IAAI,CAACgK,GAAL,CAAS7K,GAAG,GAAGa,IAAI,CAACC,EAApB,CAAV,CAAZ;;AACA,YAAKD,IAAI,CAACgK,GAAL,CAAS6b,IAAT,KAAkB,uDAAnB,IAA8B7lB,IAAI,CAACgK,GAAL,CAAShK,IAAI,CAACgK,GAAL,CAAS7K,GAAT,IAAgB,yDAAzB,KAAqC,uDAAvE,EAA+E;AAC7EsD,WAAC,GAAG,KAAK8gB,EAAT;;AACA,cAAIpkB,GAAG,IAAI,CAAX,EAAc;AACZuD,aAAC,GAAG,KAAK+gB,EAAL,GAAUzjB,IAAI,CAACC,EAAL,GAAU,KAAKq2B,CAAf,GAAmBt2B,IAAI,CAACsB,GAAL,CAAS,MAAMkkB,KAAf,CAAjC;AACD,WAFD,MAGK;AACH9iB,aAAC,GAAG,KAAK+gB,EAAL,GAAUzjB,IAAI,CAACC,EAAL,GAAU,KAAKq2B,CAAf,GAAmB,CAACt2B,IAAI,CAACsB,GAAL,CAAS,MAAMkkB,KAAf,CAAlC;AACD,WAP4E,CAQ7E;;AACD;;AACD,YAAImC,EAAE,GAAG,MAAM3nB,IAAI,CAACgK,GAAL,CAAUhK,IAAI,CAACC,EAAL,GAAU4lB,IAAX,GAAoBA,IAAI,GAAG7lB,IAAI,CAACC,EAAzC,CAAf;AACA,YAAI2nB,GAAG,GAAGD,EAAE,GAAGA,EAAf;AACA,YAAI8R,KAAK,GAAGz5B,IAAI,CAACqB,GAAL,CAASmkB,KAAT,CAAZ;AACA,YAAIkU,KAAK,GAAG15B,IAAI,CAACuB,GAAL,CAASikB,KAAT,CAAZ;AAEA,YAAImD,CAAC,GAAG+Q,KAAK,IAAID,KAAK,GAAGC,KAAR,GAAgB,CAApB,CAAb;AACA,YAAIC,GAAG,GAAGhR,CAAC,GAAGA,CAAd;AACA,YAAIza,CAAC,GAAGya,CAAC,IAAI,IAAI8Q,KAAJ,GAAY,CAAhB,CAAT;AACA,YAAIG,GAAG,GAAG1rB,CAAC,GAAGA,CAAd;AACA,YAAI1B,GAAG,GAAGxM,IAAI,CAACC,EAAL,GAAU,KAAKq2B,CAAf,IAAoB3O,EAAE,IAAIgB,CAAC,GAAGiR,GAAR,CAAF,GAAiB55B,IAAI,CAACoB,IAAL,CAAUwmB,GAAG,IAAIe,CAAC,GAAGiR,GAAR,CAAH,IAAmBjR,CAAC,GAAGiR,GAAvB,IAA8B,CAACA,GAAG,GAAGhS,GAAP,KAAe+R,GAAG,GAAGC,GAArB,CAAxC,CAArC,KAA4GA,GAAG,GAAGhS,GAAlH,CAAV;;AACA,YAAI/B,IAAI,GAAG,CAAX,EAAc;AACZrZ,aAAG,GAAG,CAACA,GAAP;AACD;;AACD/J,SAAC,GAAG,KAAK8gB,EAAL,GAAU/W,GAAd,CAtCyB,CAuCzB;;AACA,YAAIH,CAAC,GAAGub,GAAG,GAAGe,CAAd;AACAnc,WAAG,GAAGxM,IAAI,CAACC,EAAL,GAAU,KAAKq2B,CAAf,IAAoBpoB,CAAC,GAAG7B,CAAJ,GAAQsb,EAAE,GAAG3nB,IAAI,CAACoB,IAAL,CAAU,CAACw4B,GAAG,GAAGhS,GAAP,KAAeA,GAAG,GAAG,CAArB,IAA0Bvb,CAAC,GAAGA,CAAxC,CAAjC,KAAgFutB,GAAG,GAAGhS,GAAtF,CAAN;;AACA,YAAIzoB,GAAG,IAAI,CAAX,EAAc;AACZ;AACAuD,WAAC,GAAG,KAAK+gB,EAAL,GAAUjX,GAAd;AACD,SAHD,MAIK;AACH;AACA9J,WAAC,GAAG,KAAK+gB,EAAL,GAAUjX,GAAd;AACD;;AACDuJ,SAAC,CAACtT,CAAF,GAAMA,CAAN;AACAsT,SAAC,CAACrT,CAAF,GAAMA,CAAN;AACA,eAAOqT,CAAP;AACD;AAED;;;;AAEO,eAASlX,OAAT,CAAiBkX,CAAjB,EAAoB;AACzB,YAAI3W,GAAJ,EAASD,GAAT;AACA,YAAI06B,EAAJ,EAAQC,EAAR,EAAYC,GAAZ,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB;AACA,YAAIC,EAAJ;AACA,YAAIC,EAAJ;AACA,YAAI5tB,GAAJ;AACA,YAAI6tB,GAAJ;AACA,YAAIjP,CAAJ;AAEA;;;AAEArV,SAAC,CAACtT,CAAF,IAAO,KAAK8gB,EAAZ;AACAxN,SAAC,CAACrT,CAAF,IAAO,KAAK+gB,EAAZ;AACAjX,WAAG,GAAGxM,IAAI,CAACC,EAAL,GAAU,KAAKq2B,CAArB;AACAuD,UAAE,GAAG9jB,CAAC,CAACtT,CAAF,GAAM+J,GAAX;AACAstB,UAAE,GAAG/jB,CAAC,CAACrT,CAAF,GAAM8J,GAAX;AACAutB,WAAG,GAAGF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAArB;AACAE,UAAE,GAAG,CAACh6B,IAAI,CAACgK,GAAL,CAAS8vB,EAAT,CAAD,IAAiB,IAAIC,GAArB,CAAL;AACAE,UAAE,GAAGD,EAAE,GAAG,IAAIF,EAAJ,GAASA,EAAd,GAAmBD,EAAE,GAAGA,EAA7B;AACAK,UAAE,GAAG,CAAC,CAAD,GAAKF,EAAL,GAAU,CAAV,GAAc,IAAIF,EAAJ,GAASA,EAAvB,GAA4BC,GAAG,GAAGA,GAAvC;AACA3O,SAAC,GAAG0O,EAAE,GAAGA,EAAL,GAAUI,EAAV,GAAe,CAAC,IAAID,EAAJ,GAASA,EAAT,GAAcA,EAAd,GAAmBC,EAAnB,GAAwBA,EAAxB,GAA6BA,EAA7B,GAAkC,IAAIF,EAAJ,GAASC,EAAT,GAAcC,EAAd,GAAmBA,EAAtD,IAA4D,EAA/E;AACAC,UAAE,GAAG,CAACH,EAAE,GAAGC,EAAE,GAAGA,EAAL,GAAU,CAAV,GAAcC,EAApB,IAA0BA,EAA/B;AACAE,UAAE,GAAG,IAAIp6B,IAAI,CAACoB,IAAL,CAAU,CAAC+4B,EAAD,GAAM,CAAhB,CAAT;AACA3tB,WAAG,GAAK,IAAI4e,CAAL,GAAU+O,EAAX,GAAiBC,EAAvB;;AACA,YAAIp6B,IAAI,CAACgK,GAAL,CAASwC,GAAT,IAAgB,CAApB,EAAuB;AACrB,cAAIA,GAAG,IAAI,CAAX,EAAc;AACZA,eAAG,GAAG,CAAN;AACD,WAFD,MAGK;AACHA,eAAG,GAAG,CAAC,CAAP;AACD;AACF;;AACD6tB,WAAG,GAAGr6B,IAAI,CAAC+mB,IAAL,CAAUva,GAAV,IAAiB,CAAvB;;AACA,YAAIuJ,CAAC,CAACrT,CAAF,IAAO,CAAX,EAAc;AACZvD,aAAG,GAAG,CAAC,CAACi7B,EAAD,GAAMp6B,IAAI,CAACuB,GAAL,CAAS84B,GAAG,GAAGr6B,IAAI,CAACC,EAAL,GAAU,CAAzB,CAAN,GAAoCg6B,EAAE,GAAG,CAAL,GAASC,EAA9C,IAAoDl6B,IAAI,CAACC,EAA/D;AACD,SAFD,MAGK;AACHd,aAAG,GAAG,EAAE,CAACi7B,EAAD,GAAMp6B,IAAI,CAACuB,GAAL,CAAS84B,GAAG,GAAGr6B,IAAI,CAACC,EAAL,GAAU,CAAzB,CAAN,GAAoCg6B,EAAE,GAAG,CAAL,GAASC,EAA/C,IAAqDl6B,IAAI,CAACC,EAAhE;AACD;;AAED,YAAID,IAAI,CAACgK,GAAL,CAAS6vB,EAAT,IAAe,uDAAnB,EAA0B;AACxBz6B,aAAG,GAAG,KAAKwjB,KAAX;AACD,SAFD,MAGK;AACHxjB,aAAG,GAAG,mEAAW,KAAKwjB,KAAL,GAAa5iB,IAAI,CAACC,EAAL,IAAW85B,GAAG,GAAG,CAAN,GAAU/5B,IAAI,CAACoB,IAAL,CAAU,IAAI,KAAKy4B,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAApB,CAAJ,GAA8BC,GAAG,GAAGA,GAA9C,CAArB,IAA2E,CAA3E,GAA+EF,EAAvG,CAAN;AACD;;AAED9jB,SAAC,CAACtT,CAAF,GAAMrD,GAAN;AACA2W,SAAC,CAACrT,CAAF,GAAMvD,GAAN;AACA,eAAO4W,CAAP;AACD;;AAEM,UAAIsO,KAAK,GAAG,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,OAAvC,CAAZ;AACQ;;AAAA;AACbvb,YAAI,EAAEA,IADO;AAEblK,eAAO,EAAEA,OAFI;AAGbC,eAAO,EAAEA,OAHI;AAIbwlB,aAAK,EAAEA;AAJM;;;;;;;;;;;;;;;;AC3Hf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,eAASiW,WAAT,CAAqB1kB,MAArB,EAA6BC,IAA7B,EAAmC;AACjC,eAAQ,CAACD,MAAM,CAACjN,KAAP,CAAa6M,UAAb,KAA4B,4DAA5B,IAA0CI,MAAM,CAACjN,KAAP,CAAa6M,UAAb,KAA4B,4DAAvE,KAAsFK,IAAI,CAACpO,SAAL,KAAmB,OAA1G,IAAuH,CAACoO,IAAI,CAAClN,KAAL,CAAW6M,UAAX,KAA0B,4DAA1B,IAAwCK,IAAI,CAAClN,KAAL,CAAW6M,UAAX,KAA0B,4DAAnE,KAAkFI,MAAM,CAACnO,SAAP,KAAqB,OAArO;AACD;;AAEc,eAASiV,SAAT,CAAmB9G,MAAnB,EAA2BC,IAA3B,EAAiC5M,KAAjC,EAAwCqL,WAAxC,EAAqD;AAClE,YAAIjG,KAAJ;;AACA,YAAI/H,KAAK,CAACC,OAAN,CAAc0C,KAAd,CAAJ,EAA0B;AACxBA,eAAK,GAAG,gEAAQA,KAAR,CAAR;AACD;;AACD,qEAAYA,KAAZ,EALkE,CAMlE;;AACA,YAAI2M,MAAM,CAACjN,KAAP,IAAgBkN,IAAI,CAAClN,KAArB,IAA8B2xB,WAAW,CAAC1kB,MAAD,EAASC,IAAT,CAA7C,EAA6D;AAC3DxH,eAAK,GAAG,IAAI,6CAAJ,CAAS,OAAT,CAAR;AACApF,eAAK,GAAGyT,SAAS,CAAC9G,MAAD,EAASvH,KAAT,EAAgBpF,KAAhB,EAAuBqL,WAAvB,CAAjB;AACAsB,gBAAM,GAAGvH,KAAT;AACD,SAXiE,CAYlE;;;AACA,YAAIiG,WAAW,IAAIsB,MAAM,CAAC5N,IAAP,KAAgB,KAAnC,EAA0C;AACxCiB,eAAK,GAAG,6DAAY2M,MAAZ,EAAoB,KAApB,EAA2B3M,KAA3B,CAAR;AACD,SAfiE,CAgBlE;;;AACA,YAAI2M,MAAM,CAACpO,QAAP,KAAoB,SAAxB,EAAmC;AACjCyB,eAAK,GAAG;AACNxG,aAAC,EAAEwG,KAAK,CAACxG,CAAN,GAAU,qDADP;AAENC,aAAC,EAAEuG,KAAK,CAACvG,CAAN,GAAU,qDAFP;AAGN2D,aAAC,EAAE4C,KAAK,CAAC5C,CAAN,IAAW;AAHR,WAAR;AAKD,SAND,MAMO;AACL,cAAIuP,MAAM,CAAC7C,QAAX,EAAqB;AACnB9J,iBAAK,GAAG;AACNxG,eAAC,EAAEwG,KAAK,CAACxG,CAAN,GAAUmT,MAAM,CAAC7C,QADd;AAENrQ,eAAC,EAAEuG,KAAK,CAACvG,CAAN,GAAUkT,MAAM,CAAC7C,QAFd;AAGN1M,eAAC,EAAE4C,KAAK,CAAC5C,CAAN,IAAW;AAHR,aAAR;AAKD;;AACD4C,eAAK,GAAG2M,MAAM,CAAC/W,OAAP,CAAeoK,KAAf,CAAR,CARK,CAQ0B;;AAC/B,cAAI,CAACA,KAAL,EAAY;AACV;AACD;AACF,SAnCiE,CAoClE;;;AACA,YAAI2M,MAAM,CAACoO,cAAX,EAA2B;AACzB/a,eAAK,CAACxG,CAAN,IAAWmT,MAAM,CAACoO,cAAlB;AACD,SAvCiE,CAyClE;;;AACA/a,aAAK,GAAG,iEAAgB2M,MAAM,CAACjN,KAAvB,EAA8BkN,IAAI,CAAClN,KAAnC,EAA0CM,KAA1C,CAAR;;AACA,YAAI,CAACA,KAAL,EAAY;AACV;AACD,SA7CiE,CA+ClE;;;AACA,YAAI4M,IAAI,CAACmO,cAAT,EAAyB;AACvB/a,eAAK,GAAG;AACNxG,aAAC,EAAEwG,KAAK,CAACxG,CAAN,GAAUoT,IAAI,CAACmO,cADZ;AAENthB,aAAC,EAAEuG,KAAK,CAACvG,CAFH;AAGN2D,aAAC,EAAE4C,KAAK,CAAC5C,CAAN,IAAW;AAHR,WAAR;AAKD;;AAED,YAAIwP,IAAI,CAACrO,QAAL,KAAkB,SAAtB,EAAiC;AAC/B;AACAyB,eAAK,GAAG;AACNxG,aAAC,EAAEwG,KAAK,CAACxG,CAAN,GAAU,qDADP;AAENC,aAAC,EAAEuG,KAAK,CAACvG,CAAN,GAAU,qDAFP;AAGN2D,aAAC,EAAE4C,KAAK,CAAC5C,CAAN,IAAW;AAHR,WAAR;AAKD,SAPD,MAOO;AAAE;AACP4C,eAAK,GAAG4M,IAAI,CAACjX,OAAL,CAAaqK,KAAb,CAAR;;AACA,cAAI4M,IAAI,CAAC9C,QAAT,EAAmB;AACjB9J,iBAAK,GAAG;AACNxG,eAAC,EAAEwG,KAAK,CAACxG,CAAN,GAAUoT,IAAI,CAAC9C,QADZ;AAENrQ,eAAC,EAAEuG,KAAK,CAACvG,CAAN,GAAUmT,IAAI,CAAC9C,QAFZ;AAGN1M,eAAC,EAAE4C,KAAK,CAAC5C,CAAN,IAAW;AAHR,aAAR;AAKD;AACF,SAxEiE,CA0ElE;;;AACA,YAAIiO,WAAW,IAAIuB,IAAI,CAAC7N,IAAL,KAAc,KAAjC,EAAwC;AACtC,iBAAO,6DAAY6N,IAAZ,EAAkB,IAAlB,EAAwB5M,KAAxB,CAAP;AACD;;AAED,eAAOA,KAAP;AACD;;;;;;;;;;;;;;;;;AC3FD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AA4Be;;;AAAA;AACbiM,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,4DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,4DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,6DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,6DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,6DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,6DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,8DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,6DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,iEAA3B;AACArP,aAAK,CAACsH,IAAN,CAAWlV,WAAX,CAAuBid,GAAvB,CAA2B,+DAA3B;OA5Ba;;;;;;;;;;;;;;;AC5Bf;;AAAA;AACC,YAAImM,CAAJ,EAAOxb,KAAP;;AACA,YAAI,IAAJ,EAAgD;AAC/C;AACA,2CAAO,CAAC;AAAA;AAAA,uDAAD,EAAY;AAAA;AAAA,8CAAZ,CAAP,EAA6B,8BAAF,GAAEqlB,OAA7B,EAAoC,mMAApC,EAAoC,+FAApC;AACA,SAHD,MAGO,CAUN;AACD,OAhBD,EAgBE,UAAU7J,CAAV,EAAaxb,KAAb,EAAoB;AACrB,YAAIA,KAAK,CAACslB,UAAN,IAAoBtlB,KAAK,WAA7B,EAAuC;AACtC;AACA;AACA;AACAA,eAAK,GAAGA,KAAK,WAAb;AACA;;AAEDwb,SAAC,CAAClU,IAAF,GAAS,EAAT;;AAEAkU,SAAC,CAAClU,IAAF,CAAOie,WAAP,GAAqB,UAASn6B,CAAT,EAAY;AAChC,iBAAQ,OAAOA,CAAC,CAACzB,OAAT,KAAqB,WAArB,IACP,OAAOyB,CAAC,CAAC1B,OAAT,KAAqB,WADtB;AAEA,SAHD;;AAKA8xB,SAAC,CAAClU,IAAF,CAAOxV,UAAP,GAAoB0pB,CAAC,CAACgK,KAAF,CAAQC,MAAR,CAAe;AAClCC,oBAAU,EAAE,oBAAS9Z,IAAT,EAAenF,GAAf,EAAoBkf,MAApB,EAA4B;AACvC,gBAAIC,IAAI,GAAGpK,CAAC,CAAClU,IAAF,CAAOie,WAAP,CAAmB3Z,IAAnB,CAAX;;AACA,iBAAKia,KAAL,GAAaD,IAAI,GAAGha,IAAH,GAAU,KAAKka,gBAAL,CAAsBla,IAAtB,EAA4BnF,GAA5B,CAA3B;AACA,iBAAKkf,MAAL,GAAcC,IAAI,GAAGnf,GAAH,GAASkf,MAA3B;AACA,WALiC;AAOlCI,iBAAO,EAAE,iBAAUC,MAAV,EAAkB;AAC1B,gBAAIjyB,KAAK,GAAG,KAAK8xB,KAAL,CAAWn8B,OAAX,CAAmB,CAACs8B,MAAM,CAACC,GAAR,EAAaD,MAAM,CAAC/7B,GAApB,CAAnB,CAAZ;;AACA,mBAAO,IAAIuxB,CAAC,CAACtqB,KAAN,CAAY6C,KAAK,CAAC,CAAD,CAAjB,EAAsBA,KAAK,CAAC,CAAD,CAA3B,CAAP;AACA,WAViC;AAYlCmyB,mBAAS,EAAE,mBAAUnyB,KAAV,EAAiBoyB,SAAjB,EAA4B;AACtC,gBAAIC,MAAM,GAAG,KAAKP,KAAL,CAAWl8B,OAAX,CAAmB,CAACoK,KAAK,CAACxG,CAAP,EAAUwG,KAAK,CAACvG,CAAhB,CAAnB,CAAb;;AACA,mBAAO,IAAIguB,CAAC,CAAC6K,MAAN,CAAaD,MAAM,CAAC,CAAD,CAAnB,EAAwBA,MAAM,CAAC,CAAD,CAA9B,EAAmCD,SAAnC,CAAP;AACA,WAfiC;AAiBlCL,0BAAgB,EAAE,0BAASla,IAAT,EAAenF,GAAf,EAAoB;AACrC,gBAAIA,GAAJ,EAAS;AACRzG,mBAAK,CAACsG,IAAN,CAAWsF,IAAX,EAAiBnF,GAAjB;AACA,aAFD,MAEO,IAAIzG,KAAK,CAACsG,IAAN,CAAWsF,IAAX,MAAqBtX,SAAzB,EAAoC;AAC1C,kBAAIgyB,GAAG,GAAG1a,IAAI,CAACra,KAAL,CAAW,GAAX,CAAV;;AACA,kBAAI+0B,GAAG,CAACr4B,MAAJ,GAAa,CAAjB,EAAoB;AACnB2d,oBAAI,GAAG0a,GAAG,CAACA,GAAG,CAACr4B,MAAJ,GAAa,CAAd,CAAH,GAAsB,GAAtB,GAA4Bq4B,GAAG,CAACA,GAAG,CAACr4B,MAAJ,GAAa,CAAd,CAAtC;AACA;;AACD,kBAAI+R,KAAK,CAACsG,IAAN,CAAWsF,IAAX,MAAqBtX,SAAzB,EAAoC;AACnC,sBAAM,uCAAuCsX,IAA7C;AACA;AACD;;AAED,mBAAO5L,KAAK,CAAC4L,IAAD,CAAZ;AACA;AA/BiC,SAAf,CAApB;AAkCA4P,SAAC,CAAClU,IAAF,CAAOif,GAAP,GAAa/K,CAAC,CAACgK,KAAF,CAAQC,MAAR,CAAe;AAC3Be,kBAAQ,EAAEhL,CAAC,CAAC+K,GADe;AAG3BE,iBAAO,EAAE;AACRC,0BAAc,EAAE,IAAIlL,CAAC,CAACmL,cAAN,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAAC,CAA5B,EAA+B,CAA/B;AADR,WAHkB;AAO3BjB,oBAAU,EAAE,oBAASt6B,CAAT,EAAY8H,CAAZ,EAAegd,CAAf,EAAkB;AAC7B,gBAAItE,IAAJ,EACIuB,IADJ,EAEI1G,GAFJ,EAGIggB,OAHJ;;AAKA,gBAAIjL,CAAC,CAAClU,IAAF,CAAOie,WAAP,CAAmBn6B,CAAnB,CAAJ,EAA2B;AAC1B+hB,kBAAI,GAAG/hB,CAAP;AACAwgB,kBAAI,GAAGuB,IAAI,CAACpb,OAAZ;AACA00B,qBAAO,GAAGvzB,CAAC,IAAI,EAAf;AAEA,mBAAK0zB,UAAL,GAAkB,IAAIpL,CAAC,CAAClU,IAAF,CAAOxV,UAAX,CAAsBqb,IAAtB,EAA4BsZ,OAAO,CAACd,MAApC,CAAlB;AACA,aAND,MAMO;AACN/Z,kBAAI,GAAGxgB,CAAP;AACAqb,iBAAG,GAAGvT,CAAN;AACAuzB,qBAAO,GAAGvW,CAAC,IAAI,EAAf;AACA,mBAAK0W,UAAL,GAAkB,IAAIpL,CAAC,CAAClU,IAAF,CAAOxV,UAAX,CAAsB8Z,IAAtB,EAA4BnF,GAA5B,EAAiCggB,OAAO,CAACd,MAAzC,CAAlB;AACA;;AAEDnK,aAAC,CAACqL,IAAF,CAAOC,UAAP,CAAkB,IAAlB,EAAwBL,OAAxB;AACA,iBAAK7a,IAAL,GAAYA,IAAZ;AACA,iBAAK8a,cAAL,GAAsB,KAAKD,OAAL,CAAaC,cAAnC;;AAEA,gBAAI,KAAKD,OAAL,CAAaM,MAAjB,EAAyB;AACxB,mBAAKL,cAAL,GACC,IAAIlL,CAAC,CAACmL,cAAN,CAAqB,CAArB,EAAwB,CAAC,KAAKF,OAAL,CAAaM,MAAb,CAAoB,CAApB,CAAzB,EACC,CAAC,CADF,EACK,KAAKN,OAAL,CAAaM,MAAb,CAAoB,CAApB,CADL,CADD;AAGA;;AAED,gBAAI,KAAKN,OAAL,CAAaO,MAAjB,EAAyB;AACxB,mBAAKC,OAAL,GAAe,KAAKR,OAAL,CAAaO,MAA5B;AACA,aAFD,MAEO,IAAI,KAAKP,OAAL,CAAaS,WAAjB,EAA8B;AACpC,mBAAKD,OAAL,GAAe,EAAf;;AACA,mBAAK,IAAI14B,CAAC,GAAG,KAAKk4B,OAAL,CAAaS,WAAb,CAAyBj5B,MAAzB,GAAkC,CAA/C,EAAkDM,CAAC,IAAI,CAAvD,EAA0DA,CAAC,EAA3D,EAA+D;AAC9D,oBAAI,KAAKk4B,OAAL,CAAaS,WAAb,CAAyB34B,CAAzB,CAAJ,EAAiC;AAChC,uBAAK04B,OAAL,CAAa14B,CAAb,IAAkB,IAAI,KAAKk4B,OAAL,CAAaS,WAAb,CAAyB34B,CAAzB,CAAtB;AACA;AACD;AACD;;AAED,iBAAK44B,QAAL,GAAgB,CAAC,KAAKV,OAAL,CAAad,MAA9B;AAEA,WAjD0B;AAmD3ByB,eAAK,EAAE,eAASC,IAAT,EAAe;AACrB,gBAAIC,KAAK,GAAGx8B,IAAI,CAACmB,KAAL,CAAWo7B,IAAX,CAAZ;AAAA,gBACCE,SADD;AAAA,gBAECC,SAFD;AAAA,gBAGCC,SAHD;AAAA,gBAICC,KAJD;;AAKA,gBAAIL,IAAI,KAAKC,KAAb,EAAoB;AACnB,qBAAO,KAAKL,OAAL,CAAaI,IAAb,CAAP;AACA,aAFD,MAEO;AACN;AACAE,uBAAS,GAAG,KAAKN,OAAL,CAAaK,KAAb,CAAZ;AACAE,uBAAS,GAAG,KAAKP,OAAL,CAAaK,KAAK,GAAG,CAArB,CAAZ;AACAG,uBAAS,GAAGD,SAAS,GAAGD,SAAxB;AACAG,mBAAK,GAAIL,IAAI,GAAGC,KAAhB;AACA,qBAAOC,SAAS,GAAGE,SAAS,GAAGC,KAA/B;AACA;AACD,WAnE0B;AAqE3BL,cAAI,EAAE,cAASD,KAAT,EAAgB;AACrB;AACA,gBAAIO,SAAS,GAAG,KAAKC,eAAL,CAAqB,KAAKX,OAA1B,EAAmCG,KAAnC,CAAhB;AAAA,gBACCS,QAAQ,GAAG,KAAKZ,OAAL,CAAa1yB,OAAb,CAAqBozB,SAArB,CADZ;AAAA,gBAECH,SAFD;AAAA,gBAGCM,QAHD;AAAA,gBAICL,SAJD,CAFqB,CAOrB;;;AACA,gBAAIL,KAAK,KAAKO,SAAd,EAAyB;AACxB,qBAAOE,QAAP;AACA;;AACD,gBAAIF,SAAS,KAAKrzB,SAAlB,EAA6B;AAC5B,qBAAO,CAAC+M,QAAR;AACA,aAboB,CAcrB;;;AACAymB,oBAAQ,GAAGD,QAAQ,GAAG,CAAtB;AACAL,qBAAS,GAAG,KAAKP,OAAL,CAAaa,QAAb,CAAZ;;AACA,gBAAIN,SAAS,KAAKlzB,SAAlB,EAA6B;AAC5B,qBAAO+M,QAAP;AACA;;AACDomB,qBAAS,GAAGD,SAAS,GAAGG,SAAxB;AACA,mBAAO,CAACP,KAAK,GAAGO,SAAT,IAAsBF,SAAtB,GAAkCI,QAAzC;AACA,WA3F0B;AA6F3BE,kBAAQ,EAAEvM,CAAC,CAAC+K,GAAF,CAAMyB,KAAN,CAAYD,QA7FK;AA+F3B3G,WAAC,EAAE5F,CAAC,CAAC+K,GAAF,CAAMyB,KAAN,CAAY5G,CA/FY;;AAiG3B;AACAwG,yBAAe,EAAE,yBAAS7uB,KAAT,EAAgBkvB,OAAhB,EAAyB;AACzC,gBAAIC,GAAJ;;AACA,iBAAK,IAAI35B,CAAC,GAAGwK,KAAK,CAAC9K,MAAnB,EAA2BM,CAAC,EAA5B,GAAiC;AAChC,kBAAIwK,KAAK,CAACxK,CAAD,CAAL,IAAY05B,OAAZ,KAAwBC,GAAG,KAAK5zB,SAAR,IAAqB4zB,GAAG,GAAGnvB,KAAK,CAACxK,CAAD,CAAxD,CAAJ,EAAkE;AACjE25B,mBAAG,GAAGnvB,KAAK,CAACxK,CAAD,CAAX;AACA;AACD;;AACD,mBAAO25B,GAAP;AACA;AA1G0B,SAAf,CAAb;AA6GA1M,SAAC,CAAClU,IAAF,CAAO6gB,OAAP,GAAiB3M,CAAC,CAAC2M,OAAF,CAAU1C,MAAV,CAAiB;AACjCC,oBAAU,EAAE,oBAAS0C,OAAT,EAAkB3B,OAAlB,EAA2B;AACtC,iBAAK4B,UAAL,GAAkB,CAAlB;AACA7M,aAAC,CAAC2M,OAAF,CAAUv2B,SAAV,CAAoB8zB,UAApB,CAA+B4C,IAA/B,CAAoC,IAApC,EAA0CF,OAA1C,EAAmD3B,OAAnD;AACA,WAJgC;AAMjC8B,iBAAO,EAAE,iBAASH,OAAT,EAAkB;AAC1B,gBAAI5zB,GAAJ;;AAEA,gBAAI4zB,OAAJ,EAAa;AACZ,kBAAIA,OAAO,CAAC5zB,GAAR,IAAe4zB,OAAO,CAAC5zB,GAAR,CAAY+O,IAAZ,KAAqB,MAAxC,EAAgD;AAC/C/O,mBAAG,GAAG,IAAIgnB,CAAC,CAAClU,IAAF,CAAOif,GAAX,CAAe6B,OAAO,CAAC5zB,GAAR,CAAYg0B,UAAZ,CAAuBjpB,IAAtC,CAAN;AACA,eAFD,MAEO,IAAI6oB,OAAO,CAAC5zB,GAAR,IAAe4zB,OAAO,CAAC5zB,GAAR,CAAY+O,IAA/B,EAAqC;AAC3C/O,mBAAG,GAAG,IAAIgnB,CAAC,CAAClU,IAAF,CAAOif,GAAX,CAAe6B,OAAO,CAAC5zB,GAAR,CAAY+O,IAAZ,GAAmB,GAAnB,GAAyB6kB,OAAO,CAAC5zB,GAAR,CAAYg0B,UAAZ,CAAuB5c,IAA/D,CAAN;AACA;;AAED,kBAAIpX,GAAG,KAAKF,SAAZ,EAAuB;AACtB,qBAAKmyB,OAAL,CAAagC,cAAb,GAA8B,UAASn3B,MAAT,EAAiB;AAC9C,sBAAIyC,KAAK,GAAGynB,CAAC,CAACznB,KAAF,CAAQzC,MAAM,CAAC,CAAD,CAAd,EAAmBA,MAAM,CAAC,CAAD,CAAzB,CAAZ;AACA,yBAAOkD,GAAG,CAACoyB,UAAJ,CAAeV,SAAf,CAAyBnyB,KAAzB,CAAP;AACA,iBAHD;AAIA;AACD,aAhByB,CAkB1B;AACA;AACA;;;AACA,iBAAKs0B,UAAL;;AACA,gBAAI;AACH7M,eAAC,CAAC2M,OAAF,CAAUv2B,SAAV,CAAoB22B,OAApB,CAA4BD,IAA5B,CAAiC,IAAjC,EAAuCF,OAAvC;AACA,aAFD,SAEU;AACT,mBAAKC,UAAL;;AACA,kBAAI,KAAKA,UAAL,KAAoB,CAAxB,EAA2B;AAC1B,uBAAO,KAAK5B,OAAL,CAAagC,cAApB;AACA;AACD;AACD;AApCgC,SAAjB,CAAjB;;AAuCAjN,SAAC,CAAClU,IAAF,CAAOohB,OAAP,GAAiB,UAASN,OAAT,EAAkB3B,OAAlB,EAA2B;AAC3C,iBAAO,IAAIjL,CAAC,CAAClU,IAAF,CAAO6gB,OAAX,CAAmBC,OAAnB,EAA4B3B,OAA5B,CAAP;AACA,SAFD;;AAIAjL,SAAC,CAAClU,IAAF,CAAOqhB,YAAP,GAAsBnN,CAAC,CAACmN,YAAF,CAAelD,MAAf,CAAsB;AAC3CC,oBAAU,EAAE,oBAAUkD,GAAV,EAAejD,MAAf,EAAuBc,OAAvB,EAAgC;AAC3CjL,aAAC,CAACmN,YAAF,CAAe/2B,SAAf,CAAyB8zB,UAAzB,CAAoC4C,IAApC,CAAyC,IAAzC,EAA+CM,GAA/C,EAAoD,IAApD,EAA0DnC,OAA1D;AACA,iBAAKoC,gBAAL,GAAwBlD,MAAxB;AACA,WAJ0C;AAM3C;AACA;AACA;AACA;AACAmD,sBAAY,EAAE,sBAAUC,KAAV,EAAiB;AAC9B,gBAAI3B,KAAK,GAAG,KAAK4B,IAAL,CAAUC,YAAV,CAAuBF,KAAK,CAAC1B,IAA7B,CAAZ;;AACA,gBAAI6B,SAAS,GAAG1N,CAAC,CAACznB,KAAF,CAAQ,KAAK80B,gBAAL,CAAsBpyB,GAAtB,CAA0BlJ,CAAlC,EAAqC,KAAKs7B,gBAAL,CAAsBryB,GAAtB,CAA0BhJ,CAA/D,CAAhB;;AACA,gBAAIyd,MAAM,GAAG,KAAKke,yBAAL,CAA+BD,SAA/B,EAA0CH,KAAK,CAAC1B,IAAhD,EAAsD0B,KAAK,CAACK,MAA5D,CAAb;;AAEA5N,aAAC,CAAC6N,OAAF,CAAUC,YAAV,CAAuB,KAAKC,MAA5B,EAAoCte,MAApC,EAA4Cmc,KAA5C;AACA,WAhB0C;AAkB3CoC,gBAAM,EAAE,kBAAY;AACnB,gBAAInC,IAAI,GAAG,KAAK2B,IAAL,CAAUS,OAAV,EAAX;;AACA,gBAAIC,WAAW,GAAG,KAAKV,IAAL,CAAUW,cAAV,EAAlB;;AACA,gBAAIhE,MAAM,GAAGnK,CAAC,CAACmK,MAAF,CACZ,KAAKiE,UAAL,CAAgB,KAAKf,gBAAL,CAAsBpyB,GAAtC,EAA2C4wB,IAA3C,EAAiDwC,SAAjD,CAA2DH,WAA3D,CADY,EAEZ,KAAKE,UAAL,CAAgB,KAAKf,gBAAL,CAAsBryB,GAAtC,EAA2C6wB,IAA3C,EAAiDwC,SAAjD,CAA2DH,WAA3D,CAFY,CAAb;AAIA,gBAAII,IAAI,GAAGnE,MAAM,CAACoE,OAAP,EAAX;AAEAvO,aAAC,CAAC6N,OAAF,CAAUW,WAAV,CAAsB,KAAKT,MAA3B,EAAmC5D,MAAM,CAAClvB,GAA1C;AACA,iBAAK8yB,MAAL,CAAYU,KAAZ,CAAkBC,KAAlB,GAA0BJ,IAAI,CAACv8B,CAAL,GAAS,IAAnC;AACA,iBAAKg8B,MAAL,CAAYU,KAAZ,CAAkBE,MAAlB,GAA2BL,IAAI,CAACt8B,CAAL,GAAS,IAApC;AACA,WA9B0C;AAgC3C27B,mCAAyB,EAAE,mCAAUp1B,KAAV,EAAiBszB,IAAjB,EAAuB+B,MAAvB,EAA+B;AACzD,gBAAIgB,QAAQ,GAAG,KAAKpB,IAAL,CAAUe,OAAV,GAAoBM,SAApB,CAA8B,CAA9B,CAAf;;AACA,gBAAIC,UAAU,GAAG,KAAKtB,IAAL,CAAUjD,OAAV,CAAkBqD,MAAlB,EAA0B/B,IAA1B,EAAgCwC,SAAhC,CAA0CO,QAA1C,EAAoDG,MAApD,EAAjB;;AACA,gBAAIC,OAAO,GAAGF,UAAU,CAACjb,GAAX,CAAe,KAAK2Z,IAAL,CAAUyB,cAAV,EAAf,CAAd;AAEA,mBAAO,KAAKb,UAAL,CAAgB71B,KAAhB,EAAuBszB,IAAvB,EAA6BwC,SAA7B,CAAuCW,OAAvC,CAAP;AACA,WAtC0C;AAwC3CZ,oBAAU,EAAE,oBAAU71B,KAAV,EAAiBszB,IAAjB,EAAuB;AAClC,gBAAI7yB,GAAG,GAAG,KAAKw0B,IAAL,CAAUvC,OAAV,CAAkBjyB,GAA5B;AACA,gBAAIkyB,cAAc,GAAGlyB,GAAG,CAACkyB,cAAzB;AACA,gBAAIU,KAAK,GAAG5yB,GAAG,CAAC4yB,KAAJ,CAAUC,IAAV,CAAZ;AAEA,mBAAOX,cAAc,CAAClf,SAAf,CAAyBzT,KAAzB,EAAgCqzB,KAAhC,CAAP;AACA;AA9C0C,SAAtB,CAAtB;;AAiDA5L,SAAC,CAAClU,IAAF,CAAOojB,YAAP,GAAsB,UAAU9B,GAAV,EAAejD,MAAf,EAAuBc,OAAvB,EAAgC;AACrD,iBAAO,IAAIjL,CAAC,CAAClU,IAAF,CAAOqhB,YAAX,CAAwBC,GAAxB,EAA6BjD,MAA7B,EAAqCc,OAArC,CAAP;AACA,SAFD;;AAIA,eAAOjL,CAAC,CAAClU,IAAT;AACA,OA/QD;;;;;;;;;;;;;;;;;ACAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAI1I,GAAG,GAAG,sBAAV;;AAMA,eAAS+rB,MAAT,CAAgBtqB,GAAhB,EAAqB6M,MAArB,EAA6B;AAC3B,YAAI0d,OAAO,GAAG1d,MAAM,CAAC,CAAD,CAApB;AACA,YAAI2d,MAAM,GAAG3d,MAAM,CAAC,CAAD,CAAnB;;AACA,YAAI,EAAE0d,OAAO,IAAIvqB,GAAb,KAAsBwqB,MAAM,IAAIxqB,GAApC,EAA0C;AACxCA,aAAG,CAACuqB,OAAD,CAAH,GAAevqB,GAAG,CAACwqB,MAAD,CAAlB;;AACA,cAAI3d,MAAM,CAACjf,MAAP,KAAkB,CAAtB,EAAyB;AACvBoS,eAAG,CAACuqB,OAAD,CAAH,GAAe1d,MAAM,CAAC,CAAD,CAAN,CAAU7M,GAAG,CAACuqB,OAAD,CAAb,CAAf;AACD;AACF;AACF;;AAED,eAASE,GAAT,CAAa9mB,KAAb,EAAoB;AAClB,eAAOA,KAAK,GAAGpF,GAAf;AACD;;AAED,eAASmsB,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,YAAIA,GAAG,CAACznB,IAAJ,KAAa,QAAjB,EAA2B;AACzBynB,aAAG,CAAC14B,QAAJ,GAAe,SAAf;AACD,SAFD,MAEO,IAAI04B,GAAG,CAACznB,IAAJ,KAAa,UAAjB,EAA6B;AAClCynB,aAAG,CAAC14B,QAAJ,GAAe,UAAf;AACA04B,aAAG,CAACC,KAAJ,GAAY,IAAZ;AACD,SAHM,MAGA;AACL,cAAI,OAAOD,GAAG,CAACzP,UAAX,KAA0B,QAA9B,EAAwC;AACtCyP,eAAG,CAAC14B,QAAJ,GAAeoN,MAAM,CAACJ,IAAP,CAAY0rB,GAAG,CAACzP,UAAhB,EAA4B,CAA5B,CAAf;AACD,WAFD,MAEO;AACLyP,eAAG,CAAC14B,QAAJ,GAAe04B,GAAG,CAACzP,UAAnB;AACD;AACF;;AACD,YAAIyP,GAAG,CAACE,IAAR,EAAc;AACZ,cAAIC,SAAS,GAAG,EAAhB;;AACA,eAAK,IAAI58B,CAAC,GAAG,CAAR,EAAW68B,EAAE,GAAGJ,GAAG,CAACE,IAAJ,CAASj9B,MAA9B,EAAsCM,CAAC,GAAG68B,EAA1C,EAA8C,EAAE78B,CAAhD,EAAmD;AACjD,gBAAIuE,IAAI,GAAG,CAACk4B,GAAG,CAACE,IAAJ,CAAS38B,CAAT,EAAY,CAAZ,EAAesZ,WAAf,EAAD,EAA+BmjB,GAAG,CAACE,IAAJ,CAAS38B,CAAT,EAAY,CAAZ,EAAesZ,WAAf,EAA/B,CAAX;;AACA,gBAAI/U,IAAI,CAAC,CAAD,CAAJ,CAAQyB,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAoC,CAACzB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhC,KAA0CA,IAAI,CAAC,CAAD,CAAJ,KAAY,OAA9F,EAAwG;AACtGq4B,uBAAS,IAAI,GAAb;AACD,aAFD,MAEO,IAAIr4B,IAAI,CAAC,CAAD,CAAJ,CAAQyB,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAA9B,IAAoC,CAACzB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhC,KAA0CA,IAAI,CAAC,CAAD,CAAJ,KAAY,OAA9F,EAAwG;AAC7Gq4B,uBAAS,IAAI,GAAb;AACD,aAFM,MAEA,IAAIr4B,IAAI,CAAC,CAAD,CAAJ,CAAQyB,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAmC,CAACzB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhC,KAA0CA,IAAI,CAAC,CAAD,CAAJ,KAAY,MAA7F,EAAsG;AAC3Gq4B,uBAAS,IAAI,GAAb;AACD,aAFM,MAEA,IAAIr4B,IAAI,CAAC,CAAD,CAAJ,CAAQyB,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IAAmC,CAACzB,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,KAAhC,KAA0CA,IAAI,CAAC,CAAD,CAAJ,KAAY,MAA7F,EAAsG;AAC3Gq4B,uBAAS,IAAI,GAAb;AACD;AACF;;AACD,cAAIA,SAAS,CAACl9B,MAAV,KAAqB,CAAzB,EAA4B;AAC1Bk9B,qBAAS,IAAI,GAAb;AACD;;AACD,cAAIA,SAAS,CAACl9B,MAAV,KAAqB,CAAzB,EAA4B;AAC1B+8B,eAAG,CAACl4B,IAAJ,GAAWq4B,SAAX;AACD;AACF;;AACD,YAAIH,GAAG,CAACK,IAAR,EAAc;AACZL,aAAG,CAACpc,KAAJ,GAAYoc,GAAG,CAACK,IAAJ,CAAS9rB,IAAT,CAAcsI,WAAd,EAAZ;;AACA,cAAImjB,GAAG,CAACpc,KAAJ,KAAc,OAAlB,EAA2B;AACzBoc,eAAG,CAACpc,KAAJ,GAAY,OAAZ;AACD;;AACD,cAAIoc,GAAG,CAACK,IAAJ,CAASC,OAAb,EAAsB;AACpB,gBAAIN,GAAG,CAACznB,IAAJ,KAAa,QAAjB,EAA2B;AACzB,kBAAIynB,GAAG,CAACO,KAAJ,IAAaP,GAAG,CAACO,KAAJ,CAAUC,QAA3B,EAAqC;AACnCR,mBAAG,CAACntB,QAAJ,GAAemtB,GAAG,CAACK,IAAJ,CAASC,OAAT,GAAiBN,GAAG,CAACO,KAAJ,CAAUC,QAAV,CAAmBpgC,CAAnD;AACD;AACF,aAJD,MAIO;AACL4/B,iBAAG,CAACntB,QAAJ,GAAemtB,GAAG,CAACK,IAAJ,CAASC,OAAxB;AACD;AACF;AACF;;AACD,YAAIG,MAAM,GAAGT,GAAG,CAACU,MAAjB;;AACA,YAAIV,GAAG,CAACznB,IAAJ,KAAa,QAAjB,EAA2B;AACzBkoB,gBAAM,GAAGT,GAAT;AACD;;AACD,YAAIS,MAAJ,EAAY;AACV;AACA;AACA;AACA,cAAIA,MAAM,CAACF,KAAX,EAAkB;AAChBP,eAAG,CAACz4B,SAAJ,GAAgBk5B,MAAM,CAACF,KAAP,CAAahsB,IAAb,CAAkBsI,WAAlB,EAAhB;AACD,WAFD,MAEO;AACLmjB,eAAG,CAACz4B,SAAJ,GAAgBk5B,MAAM,CAAClsB,IAAP,CAAYsI,WAAZ,EAAhB;AACD;;AACD,cAAImjB,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAApB,EAAuB,CAAvB,MAA8B,IAAlC,EAAwC;AACtCkiB,eAAG,CAACz4B,SAAJ,GAAgBy4B,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAApB,CAAhB;AACD;;AACD,cAAIkiB,GAAG,CAACz4B,SAAJ,KAAkB,iCAAlB,IAAuDy4B,GAAG,CAACz4B,SAAJ,KAAkB,kBAA7E,EAAiG;AAC/Fy4B,eAAG,CAACz4B,SAAJ,GAAgB,QAAhB;AACD;;AACD,cAAIy4B,GAAG,CAACz4B,SAAJ,KAAkB,UAAlB,IAAgCy4B,GAAG,CAACz4B,SAAJ,KAAkB,4BAAtD,EAAoF;AAClF,gBAAIy4B,GAAG,CAACzP,UAAJ,KAAmB,2BAAvB,EAAoD;AAClDyP,iBAAG,CAAC53B,MAAJ,GAAa,IAAb;AACD;;AACD43B,eAAG,CAACz4B,SAAJ,GAAgB,OAAhB;AACD;;AACD,cAAIy4B,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAAC,CAArB,MAA4B,QAAhC,EAA0C;AACxCkiB,eAAG,CAACz4B,SAAJ,GAAgBy4B,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAApB,EAAuB,CAAE,CAAzB,CAAhB;AACD;;AACD,cAAIkiB,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAAC,CAArB,MAA4B,UAAhC,EAA4C;AAC1CkiB,eAAG,CAACz4B,SAAJ,GAAgBy4B,GAAG,CAACz4B,SAAJ,CAAcuW,KAAd,CAAoB,CAApB,EAAuB,CAAE,CAAzB,CAAhB;AACD;;AACD,cAAI,CAACkiB,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,OAAtB,CAAL,EAAqC;AACnCy2B,eAAG,CAACz4B,SAAJ,GAAgB,OAAhB;AACD;;AACD,cAAIk5B,MAAM,CAACF,KAAP,IAAgBE,MAAM,CAACF,KAAP,CAAaC,QAAjC,EAA2C;AACzCR,eAAG,CAACr4B,KAAJ,GAAY84B,MAAM,CAACF,KAAP,CAAaC,QAAb,CAAsBjsB,IAAtB,CAA2BuI,OAA3B,CAAmC,KAAnC,EAA0C,EAA1C,EAA8CA,OAA9C,CAAsD,eAAtD,EAAuE,MAAvE,CAAZ;;AACA,gBAAIkjB,GAAG,CAACr4B,KAAJ,CAAUkV,WAAV,GAAwBiB,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,MAAyC,eAA7C,EAA8D;AAC5DkiB,iBAAG,CAACr4B,KAAJ,GAAY,MAAZ;AACD;;AAEDq4B,eAAG,CAAC5/B,CAAJ,GAAQqgC,MAAM,CAACF,KAAP,CAAaC,QAAb,CAAsBpgC,CAA9B;AACA4/B,eAAG,CAAC73B,EAAJ,GAASzC,UAAU,CAAC+6B,MAAM,CAACF,KAAP,CAAaC,QAAb,CAAsBr4B,EAAvB,EAA2B,EAA3B,CAAnB;AACD;;AAED,cAAIs4B,MAAM,CAACF,KAAP,IAAgBE,MAAM,CAACF,KAAP,CAAaI,OAAjC,EAA0C;AACxCX,eAAG,CAACv4B,YAAJ,GAAmBg5B,MAAM,CAACF,KAAP,CAAaI,OAAhC;AACD;;AACD,cAAI,CAACX,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,WAAtB,CAAL,EAAyC;AACvCy2B,eAAG,CAACz4B,SAAJ,GAAgB,QAAhB;AACD;;AACD,cAAI,CAACy4B,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,WAAtB,CAAL,EAAyC;AACvCy2B,eAAG,CAACz4B,SAAJ,GAAgB,QAAhB;AACD;;AACD,cAAI,CAACy4B,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,MAAtB,CAAD,IACC,CAACy2B,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,wBAAtB,CADN,EACuD;AACrDy2B,eAAG,CAACz4B,SAAJ,GAAgB,OAAhB;AACD;;AACD,cAAIy4B,GAAG,CAACz4B,SAAJ,KAAkB,SAAtB,EAAiC;AAC/By4B,eAAG,CAACz4B,SAAJ,GAAgB,QAAhB;AACD;;AACD,cAAI,CAACy4B,GAAG,CAACz4B,SAAJ,CAAcgC,OAAd,CAAsB,QAAtB,CAAL,EAAsC;AACpCy2B,eAAG,CAACz4B,SAAJ,GAAgB,OAAhB;AACD;AACF;;AACD,YAAIy4B,GAAG,CAAC93B,CAAJ,IAAS,CAAC0B,QAAQ,CAACo2B,GAAG,CAAC93B,CAAL,CAAtB,EAA+B;AAC7B83B,aAAG,CAAC93B,CAAJ,GAAQ83B,GAAG,CAAC5/B,CAAZ;AACD;;AAED,iBAASwgC,OAAT,CAAiB5nB,KAAjB,EAAwB;AACtB,cAAI6nB,KAAK,GAAGb,GAAG,CAACntB,QAAJ,IAAgB,CAA5B;AACA,iBAAOmG,KAAK,GAAG6nB,KAAf;AACD;;AACD,YAAIC,OAAO,GAAG,SAAVA,OAAU,CAAS1gC,CAAT,EAAY;AACxB,iBAAOu/B,MAAM,CAACK,GAAD,EAAM5/B,CAAN,CAAb;AACD,SAFD;;AAGA,YAAI2gC,IAAI,GAAG,CACT,CAAC,qBAAD,EAAwB,qBAAxB,CADS,EAET,CAAC,qBAAD,EAAwB,mCAAxB,CAFS,EAGT,CAAC,qBAAD,EAAwB,qBAAxB,CAHS,EAIT,CAAC,qBAAD,EAAwB,mCAAxB,CAJS,EAKT,CAAC,eAAD,EAAkB,eAAlB,CALS,EAMT,CAAC,eAAD,EAAkB,eAAlB,CANS,EAOT,CAAC,eAAD,EAAkB,yBAAlB,CAPS,EAQT,CAAC,gBAAD,EAAmB,gBAAnB,CARS,EAST,CAAC,gBAAD,EAAmB,gBAAnB,CATS,EAUT,CAAC,gBAAD,EAAmB,0BAAnB,CAVS,EAWT,CAAC,kBAAD,EAAqB,kBAArB,CAXS,EAYT,CAAC,kBAAD,EAAqB,6BAArB,CAZS,EAaT,CAAC,kBAAD,EAAqB,2BAArB,CAbS,EAcT,CAAC,oBAAD,EAAuB,oBAAvB,CAdS,EAeT,CAAC,oBAAD,EAAuB,kBAAvB,CAfS,EAgBT,CAAC,oBAAD,EAAuB,4BAAvB,CAhBS,EAiBT,CAAC,oBAAD,EAAuB,0BAAvB,CAjBS,EAkBT,CAAC,cAAD,EAAiB,cAAjB,CAlBS,EAmBT,CAAC,IAAD,EAAO,cAAP,CAnBS,EAoBT,CAAC,oBAAD,EAAuB,oBAAvB,CApBS,EAqBT,CAAC,oBAAD,EAAuB,oBAAvB,CArBS,EAsBT,CAAC,MAAD,EAAS,oBAAT,EAA+BjB,GAA/B,CAtBS,EAuBT,CAAC,qBAAD,EAAwB,qBAAxB,CAvBS,EAwBT,CAAC,qBAAD,EAAwB,qBAAxB,CAxBS,EAyBT,CAAC,OAAD,EAAU,qBAAV,EAAiCA,GAAjC,CAzBS,EA0BT,CAAC,IAAD,EAAO,eAAP,EAAwBc,OAAxB,CA1BS,EA2BT,CAAC,IAAD,EAAO,gBAAP,EAAyBA,OAAzB,CA3BS,EA4BT,CAAC,OAAD,EAAU,kBAAV,EAA8Bd,GAA9B,CA5BS,EA6BT,CAAC,MAAD,EAAS,oBAAT,EAA+BA,GAA/B,CA7BS,EA8BT,CAAC,MAAD,EAAS,qBAAT,EAAgCA,GAAhC,CA9BS,EA+BT,CAAC,MAAD,EAAS,qBAAT,EAAgCA,GAAhC,CA/BS,EAgCT,CAAC,MAAD,EAAS,qBAAT,EAAgCA,GAAhC,CAhCS,EAiCT,CAAC,SAAD,EAAY,SAAZ,CAjCS,EAkCT,CAAC,OAAD,EAAU,SAAV,EAAqBA,GAArB,CAlCS,EAmCT,CAAC,SAAD,EAAY,MAAZ,CAnCS,CAAX;AAqCAiB,YAAI,CAACpsB,OAAL,CAAamsB,OAAb;;AACA,YAAI,CAACd,GAAG,CAACtd,KAAL,IAAcsd,GAAG,CAAC7c,KAAlB,KAA4B6c,GAAG,CAAC14B,QAAJ,KAAiB,yBAAjB,IAA8C04B,GAAG,CAAC14B,QAAJ,KAAiB,8BAA3F,CAAJ,EAAgI;AAC9H04B,aAAG,CAACtd,KAAJ,GAAYsd,GAAG,CAAC7c,KAAhB;AACD;;AACD,YAAI,CAAC6c,GAAG,CAACxd,MAAL,IAAewd,GAAG,CAACj4B,IAAnB,KAA4Bi4B,GAAG,CAAC14B,QAAJ,KAAiB,0BAAjB,IAA+C04B,GAAG,CAAC14B,QAAJ,KAAiB,iCAA5F,CAAJ,EAAoI;AAClI04B,aAAG,CAACh4B,IAAJ,GAAW83B,GAAG,CAACE,GAAG,CAACj4B,IAAJ,GAAW,CAAX,GAAe,EAAf,GAAoB,CAAC,EAAtB,CAAd;AACAi4B,aAAG,CAACxd,MAAJ,GAAawd,GAAG,CAACj4B,IAAjB;AACD;AACF;AACc;;;AAAA;AACb,YAAIi5B,IAAI,GAAG,wDAAOhB,GAAP,CAAX;AACA,YAAIznB,IAAI,GAAGyoB,IAAI,CAACC,KAAL,EAAX;AACA,YAAI1sB,IAAI,GAAGysB,IAAI,CAACC,KAAL,EAAX;AACAD,YAAI,CAACE,OAAL,CAAa,CAAC,MAAD,EAAS3sB,IAAT,CAAb;AACAysB,YAAI,CAACE,OAAL,CAAa,CAAC,MAAD,EAAS3oB,IAAT,CAAb;AACA,YAAIlD,GAAG,GAAG,EAAV;AACA,+DAAM2rB,IAAN,EAAY3rB,GAAZ;AACA0qB,gBAAQ,CAAC1qB,GAAD,CAAR;AACA,eAAOA,GAAP;AACD,OAVc;;;;;;;;;;;;;;;;;AC/Lf;AAAe;;;AAAA,uCAAA8rB,WAAA;AAEf,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,KAAK,GAAG,CAAC,CAAb;AACA,UAAIC,UAAU,GAAG,IAAjB;AACA,UAAIC,KAAK,GAAG,UAAZ;AACA,UAAIC,OAAO,GAAG,YAAd;AACA,UAAIC,SAAS,GAAG,OAAhB;AACA,UAAIC,MAAM,GAAG,aAAb,C,CACA;;AACA,eAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,gBAAM,IAAItZ,KAAJ,CAAU,cAAV,CAAN;AACD;;AACD,aAAKsZ,IAAL,GAAYA,IAAI,CAAC1jB,IAAL,EAAZ;AACA,aAAK2jB,KAAL,GAAa,CAAb;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,IAAL,GAAY,IAAZ;AACA,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,aAAL,GAAqB,IAArB;AACA,aAAKC,KAAL,GAAalB,OAAb;AACD;;AACDW,YAAM,CAACn7B,SAAP,CAAiB27B,aAAjB,GAAiC,YAAW;AAC1C,YAAIC,KAAI,GAAG,KAAKR,IAAL,CAAU,KAAKE,KAAL,EAAV,CAAX;;AACA,YAAI,KAAKI,KAAL,KAAef,MAAnB,EAA2B;AACzB,iBAAOG,UAAU,CAACj9B,IAAX,CAAgB+9B,KAAhB,CAAP,EAA8B;AAC5B,gBAAI,KAAKN,KAAL,IAAc,KAAKF,IAAL,CAAU/+B,MAA5B,EAAoC;AAClC;AACD;;AACDu/B,iBAAI,GAAG,KAAKR,IAAL,CAAU,KAAKE,KAAL,EAAV,CAAP;AACD;AACF;;AACD,gBAAQ,KAAKI,KAAb;AACE,eAAKlB,OAAL;AACE,mBAAO,KAAKqB,OAAL,CAAaD,KAAb,CAAP;;AACF,eAAKnB,OAAL;AACE,mBAAO,KAAKO,OAAL,CAAaY,KAAb,CAAP;;AACF,eAAKjB,MAAL;AACE,mBAAO,KAAKmB,MAAL,CAAYF,KAAZ,CAAP;;AACF,eAAKhB,UAAL;AACE,mBAAO,KAAKmB,UAAL,CAAgBH,KAAhB,CAAP;;AACF,eAAKlB,MAAL;AACE,mBAAO,KAAKsB,MAAL,CAAYJ,KAAZ,CAAP;;AACF,eAAKf,KAAL;AACE;AAZJ;AAcD,OAxBD;;AAyBAM,YAAM,CAACn7B,SAAP,CAAiB+7B,UAAjB,GAA8B,UAASH,MAAT,EAAe;AAC3C,YAAIA,MAAI,KAAK,GAAb,EAAkB;AAChB,eAAKvhB,IAAL,IAAa,GAAb;AACA,eAAKqhB,KAAL,GAAaf,MAAb;AACA;AACD;;AACD,YAAIM,SAAS,CAACp9B,IAAV,CAAe+9B,MAAf,CAAJ,EAA0B;AACxB,eAAKvhB,IAAL,GAAY,KAAKA,IAAL,CAAU3C,IAAV,EAAZ;AACA,eAAKukB,SAAL,CAAeL,MAAf;AACA;AACD;;AACD,cAAM,IAAI9Z,KAAJ,CAAU,sBAAqB8Z,MAArB,GAA4B,6BAA5B,GAA4D,KAAKN,KAA3E,CAAN;AACD,OAZD;;AAaAH,YAAM,CAACn7B,SAAP,CAAiBi8B,SAAjB,GAA6B,UAASL,MAAT,EAAe;AAC1C,YAAIA,MAAI,KAAK,GAAb,EAAkB;AAChB,cAAI,KAAKvhB,IAAL,KAAc,IAAlB,EAAwB;AACtB,iBAAKohB,aAAL,CAAmBhpB,IAAnB,CAAwB,KAAK4H,IAA7B;AACD;;AACD,eAAKA,IAAL,GAAY,IAAZ;AACA,eAAKqhB,KAAL,GAAalB,OAAb;AACA;AACD;;AACD,YAAIoB,MAAI,KAAK,GAAb,EAAkB;AAChB,eAAKP,KAAL;;AACA,cAAI,KAAKhhB,IAAL,KAAc,IAAlB,EAAwB;AACtB,iBAAKohB,aAAL,CAAmBhpB,IAAnB,CAAwB,KAAK4H,IAA7B;AACA,iBAAKA,IAAL,GAAY,IAAZ;AACD;;AACD,eAAKqhB,KAAL,GAAalB,OAAb;AACA,eAAKiB,aAAL,GAAqB,KAAKD,KAAL,CAAWU,GAAX,EAArB;;AACA,cAAI,CAAC,KAAKT,aAAV,EAAyB;AACvB,iBAAKC,KAAL,GAAab,KAAb;AACD;;AAED;AACD;AACF,OAvBD;;AAwBAM,YAAM,CAACn7B,SAAP,CAAiBg8B,MAAjB,GAA0B,UAASJ,MAAT,EAAe;AACvC,YAAIV,MAAM,CAACr9B,IAAP,CAAY+9B,MAAZ,CAAJ,EAAuB;AACrB,eAAKvhB,IAAL,IAAauhB,MAAb;AACA;AACD;;AACD,YAAIX,SAAS,CAACp9B,IAAV,CAAe+9B,MAAf,CAAJ,EAA0B;AACxB,eAAKvhB,IAAL,GAAYvb,UAAU,CAAC,KAAKub,IAAN,CAAtB;AACA,eAAK4hB,SAAL,CAAeL,MAAf;AACA;AACD;;AACD,cAAM,IAAI9Z,KAAJ,CAAU,sBAAqB8Z,MAArB,GAA4B,yBAA5B,GAAwD,KAAKN,KAAvE,CAAN;AACD,OAXD;;AAYAH,YAAM,CAACn7B,SAAP,CAAiB87B,MAAjB,GAA0B,UAASF,MAAT,EAAe;AACvC,YAAIA,MAAI,KAAK,GAAb,EAAkB;AAChB,eAAKF,KAAL,GAAad,UAAb;AACA;AACD;;AACD,aAAKvgB,IAAL,IAAauhB,MAAb;AACA;AACD,OAPD;;AAQAT,YAAM,CAACn7B,SAAP,CAAiBg7B,OAAjB,GAA2B,UAASY,MAAT,EAAe;AACxC,YAAIZ,OAAO,CAACn9B,IAAR,CAAa+9B,MAAb,CAAJ,EAAwB;AACtB,eAAKvhB,IAAL,IAAauhB,MAAb;AACA;AACD;;AACD,YAAIA,MAAI,KAAK,GAAb,EAAkB;AAChB,cAAIO,UAAU,GAAG,EAAjB;AACAA,oBAAU,CAAC1pB,IAAX,CAAgB,KAAK4H,IAArB;AACA,eAAKghB,KAAL;;AACA,cAAI,KAAKE,IAAL,KAAc,IAAlB,EAAwB;AACtB,iBAAKA,IAAL,GAAYY,UAAZ;AACD,WAFD,MAEO;AACL,iBAAKV,aAAL,CAAmBhpB,IAAnB,CAAwB0pB,UAAxB;AACD;;AACD,eAAKX,KAAL,CAAW/oB,IAAX,CAAgB,KAAKgpB,aAArB;AACA,eAAKA,aAAL,GAAqBU,UAArB;AACA,eAAKT,KAAL,GAAalB,OAAb;AACA;AACD;;AACD,YAAIS,SAAS,CAACp9B,IAAV,CAAe+9B,MAAf,CAAJ,EAA0B;AACxB,eAAKK,SAAL,CAAeL,MAAf;AACA;AACD;;AACD,cAAM,IAAI9Z,KAAJ,CAAU,sBAAqB8Z,MAArB,GAA4B,0BAA5B,GAAyD,KAAKN,KAAxE,CAAN;AACD,OAxBD;;AAyBAH,YAAM,CAACn7B,SAAP,CAAiB67B,OAAjB,GAA2B,UAASD,MAAT,EAAe;AACxC,YAAIb,KAAK,CAACl9B,IAAN,CAAW+9B,MAAX,CAAJ,EAAsB;AACpB,eAAKvhB,IAAL,GAAYuhB,MAAZ;AACA,eAAKF,KAAL,GAAajB,OAAb;AACA;AACD;;AACD,YAAImB,MAAI,KAAK,GAAb,EAAkB;AAChB,eAAKvhB,IAAL,GAAY,EAAZ;AACA,eAAKqhB,KAAL,GAAaf,MAAb;AACA;AACD;;AACD,YAAIO,MAAM,CAACr9B,IAAP,CAAY+9B,MAAZ,CAAJ,EAAuB;AACrB,eAAKvhB,IAAL,GAAYuhB,MAAZ;AACA,eAAKF,KAAL,GAAahB,MAAb;AACA;AACD;;AACD,YAAIO,SAAS,CAACp9B,IAAV,CAAe+9B,MAAf,CAAJ,EAA0B;AACxB,eAAKK,SAAL,CAAeL,MAAf;AACA;AACD;;AACD,cAAM,IAAI9Z,KAAJ,CAAU,sBAAqB8Z,MAArB,GAA4B,0BAA5B,GAAyD,KAAKN,KAAxE,CAAN;AACD,OArBD;;AAsBAH,YAAM,CAACn7B,SAAP,CAAiBqS,MAAjB,GAA0B,YAAW;AACnC,eAAO,KAAKipB,KAAL,GAAa,KAAKF,IAAL,CAAU/+B,MAA9B,EAAsC;AACpC,eAAKs/B,aAAL;AACD;;AACD,YAAI,KAAKD,KAAL,KAAeb,KAAnB,EAA0B;AACxB,iBAAO,KAAKU,IAAZ;AACD;;AACD,cAAM,IAAIzZ,KAAJ,CAAU,6BAA4B,KAAKsZ,IAAjC,GAAwC,cAAxC,GAAyD,KAAKM,KAAxE,CAAN;AACD,OARD;;AAUA,eAASnB,WAAT,CAAqB6B,GAArB,EAA0B;AACxB,YAAIC,MAAM,GAAG,IAAIlB,MAAJ,CAAWiB,GAAX,CAAb;AACA,eAAOC,MAAM,CAAChqB,MAAP,EAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;ACtKD,eAASiqB,KAAT,CAAe7tB,GAAf,EAAoBT,GAApB,EAAyBsH,KAAzB,EAAgC;AAC9B,YAAI9V,KAAK,CAACC,OAAN,CAAcuO,GAAd,CAAJ,EAAwB;AACtBsH,eAAK,CAACglB,OAAN,CAActsB,GAAd;AACAA,aAAG,GAAG,IAAN;AACD;;AACD,YAAIuuB,KAAK,GAAGvuB,GAAG,GAAG,EAAH,GAAQS,GAAvB;AAEA,YAAIjM,GAAG,GAAG8S,KAAK,CAAC4F,MAAN,CAAa,UAASshB,MAAT,EAAiBtuB,IAAjB,EAAuB;AAC5CuuB,eAAK,CAACvuB,IAAD,EAAOsuB,MAAP,CAAL;AACA,iBAAOA,MAAP;AACD,SAHS,EAGPD,KAHO,CAAV;;AAIA,YAAIvuB,GAAJ,EAAS;AACPS,aAAG,CAACT,GAAD,CAAH,GAAWxL,GAAX;AACD;AACF;;AAEM,eAASi6B,KAAT,CAAen6B,CAAf,EAAkBmM,GAAlB,EAAuB;AAC5B,YAAI,CAACjP,KAAK,CAACC,OAAN,CAAc6C,CAAd,CAAL,EAAuB;AACrBmM,aAAG,CAACnM,CAAD,CAAH,GAAS,IAAT;AACA;AACD;;AACD,YAAI0L,GAAG,GAAG1L,CAAC,CAAC+3B,KAAF,EAAV;;AACA,YAAIrsB,GAAG,KAAK,WAAZ,EAAyB;AACvBA,aAAG,GAAG1L,CAAC,CAAC+3B,KAAF,EAAN;AACD;;AACD,YAAI/3B,CAAC,CAACjG,MAAF,KAAa,CAAjB,EAAoB;AAClB,cAAImD,KAAK,CAACC,OAAN,CAAc6C,CAAC,CAAC,CAAD,CAAf,CAAJ,EAAyB;AACvBmM,eAAG,CAACT,GAAD,CAAH,GAAW,EAAX;AACAyuB,iBAAK,CAACn6B,CAAC,CAAC,CAAD,CAAF,EAAOmM,GAAG,CAACT,GAAD,CAAV,CAAL;AACA;AACD;;AACDS,aAAG,CAACT,GAAD,CAAH,GAAW1L,CAAC,CAAC,CAAD,CAAZ;AACA;AACD;;AACD,YAAI,CAACA,CAAC,CAACjG,MAAP,EAAe;AACboS,aAAG,CAACT,GAAD,CAAH,GAAW,IAAX;AACA;AACD;;AACD,YAAIA,GAAG,KAAK,SAAZ,EAAuB;AACrBS,aAAG,CAACT,GAAD,CAAH,GAAW1L,CAAX;AACA;AACD;;AACD,YAAI0L,GAAG,KAAK,MAAZ,EAAoB;AAClB,cAAI,EAAEA,GAAG,IAAIS,GAAT,CAAJ,EAAmB;AACjBA,eAAG,CAACT,GAAD,CAAH,GAAW,EAAX;AACD;;AACDS,aAAG,CAACT,GAAD,CAAH,CAASyE,IAAT,CAAcnQ,CAAd;AACA;AACD;;AACD,YAAI,CAAC9C,KAAK,CAACC,OAAN,CAAcuO,GAAd,CAAL,EAAyB;AACvBS,aAAG,CAACT,GAAD,CAAH,GAAW,EAAX;AACD;;AAED,YAAIrR,CAAJ;;AACA,gBAAQqR,GAAR;AACE,eAAK,MAAL;AACA,eAAK,QAAL;AACA,eAAK,YAAL;AACES,eAAG,CAACT,GAAD,CAAH,GAAW;AACTL,kBAAI,EAAErL,CAAC,CAAC,CAAD,CAAD,CAAK2T,WAAL,EADG;AAETyjB,qBAAO,EAAEp3B,CAAC,CAAC,CAAD;AAFD,aAAX;;AAIA,gBAAIA,CAAC,CAACjG,MAAF,KAAa,CAAjB,EAAoB;AAClBogC,mBAAK,CAACn6B,CAAC,CAAC,CAAD,CAAF,EAAOmM,GAAG,CAACT,GAAD,CAAV,CAAL;AACD;;AACD;;AACF,eAAK,UAAL;AACA,eAAK,WAAL;AACES,eAAG,CAACT,GAAD,CAAH,GAAW;AACTL,kBAAI,EAAErL,CAAC,CAAC,CAAD,CADE;AAET9I,eAAC,EAAE8I,CAAC,CAAC,CAAD,CAFK;AAGTf,gBAAE,EAAEe,CAAC,CAAC,CAAD;AAHI,aAAX;;AAKA,gBAAIA,CAAC,CAACjG,MAAF,KAAa,CAAjB,EAAoB;AAClBogC,mBAAK,CAACn6B,CAAC,CAAC,CAAD,CAAF,EAAOmM,GAAG,CAACT,GAAD,CAAV,CAAL;AACD;;AACD;;AACF,eAAK,cAAL;AACA,eAAK,SAAL;AACA,eAAK,QAAL;AACA,eAAK,QAAL;AACA,eAAK,QAAL;AACA,eAAK,UAAL;AACA,eAAK,SAAL;AACA,eAAK,aAAL;AACA,eAAK,eAAL;AACA,eAAK,QAAL;AACA,eAAK,kBAAL;AACA,eAAK,SAAL;AACA,eAAK,SAAL;AACA,eAAK,aAAL;AACA,eAAK,UAAL;AACA,eAAK,aAAL;AACA,eAAK,gBAAL;AACA,eAAK,QAAL;AACA,eAAK,WAAL;AACA,eAAK,aAAL;AACA,eAAK,OAAL;AACE1L,aAAC,CAAC,CAAD,CAAD,GAAO,CAAC,MAAD,EAASA,CAAC,CAAC,CAAD,CAAV,CAAP;AACAg6B,iBAAK,CAAC7tB,GAAD,EAAMT,GAAN,EAAW1L,CAAX,CAAL;AACA;;AACF;AACE3F,aAAC,GAAG,CAAC,CAAL;;AACA,mBAAO,EAAEA,CAAF,GAAM2F,CAAC,CAACjG,MAAf,EAAuB;AACrB,kBAAI,CAACmD,KAAK,CAACC,OAAN,CAAc6C,CAAC,CAAC3F,CAAD,CAAf,CAAL,EAA0B;AACxB,uBAAO8/B,KAAK,CAACn6B,CAAD,EAAImM,GAAG,CAACT,GAAD,CAAP,CAAZ;AACD;AACF;;AACD,mBAAOsuB,KAAK,CAAC7tB,GAAD,EAAMT,GAAN,EAAW1L,CAAX,CAAZ;AAtDJ;AAwDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GD,UAAMo6B,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAJjC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERp1B,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIiC,GAArBu1B,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSAG,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAb1B,+DAAS;AACRF,eAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,qEALO,EAMP,2GANO,EAOP,6DAAaC,QAAb,CAAsB,CAAC;AAAEJ,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SAAD,CAAtB,CAPO,EAQP,2EARO,CADD;AAWRK,oBAAY,EAAE,CAAC,mDAAD;AAXN,OAAT,CAa0B,GAAdD,cAAc,CAAd;;;;;;;;;;;;;;;;ACxBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6ICCf;;;UAiBaE,QAAQ;AAoCnB,0BAAoBC,IAApB,EAAoC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AAxBpB,eAAAC,mBAAA,GAAsB,CACpB;AACEC,sBAAU,EAAE,OADd;AAEE/nB,iBAAK,EAAC,OAFR;AAGEgoB,oBAAQ,EAAE;AAHZ,WADoB,EAMpB;AACED,sBAAU,EAAE,QADd;AAEE/nB,iBAAK,EAAC,QAFR;AAGEgoB,oBAAQ,EAAE;AAHZ,WANoB,EAWpB;AACED,sBAAU,EAAE,OADd;AAEE/nB,iBAAK,EAAC,OAFR;AAGEgoB,oBAAQ,EAAE;AAHZ,WAXoB,EAgBpB;AACED,sBAAU,EAAE,QADd;AAEE/nB,iBAAK,EAAC,QAFR;AAGEgoB,oBAAQ,EAAE;AAHZ,WAhBoB,CAAtB;AAyBE,cAAIC,WAAJ;AAGD;;AAxCkB;AAAA;AAAA,qCA4CX;AAEN,iBAAKC,kBAAL;AACA,iBAAKC,oBAAL;AAED;AAjDkB;AAAA;AAAA,4CAmDD,CAIjB;AAvDkB;AAAA;AAAA,+CA0DC;AAChB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACpCC,uBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,IAAI,EAAE;AAC7CL,uBAAO,CAAC;AAACtJ,qBAAG,EAAE2J,IAAI,CAACt+B,MAAL,CAAYu+B,SAAlB;AAA6B5lC,qBAAG,EAAE2lC,IAAI,CAACt+B,MAAL,CAAYw+B;AAA9C,iBAAD,CAAP;AACD,eAFD;AAID,aALM,CAAP;AAMD;AAjEgB;AAAA;AAAA,qCAmENvvB,GAnEM,EAmEI;AAAA;;AACnB,iBAAKA,GAAL,GAAWA,GAAX;AACA,iBAAK6uB,kBAAL,GAA0BW,IAA1B,CAA+B,UAAAH,IAAI,EAAG;AACpC,mBAAI,CAACrvB,GAAL,CAASyvB,OAAT,CAAiB,+CAASJ,IAAI,CAAC3lC,GAAd,EAAmB2lC,IAAI,CAAC3J,GAAxB,CAAjB,EAA+C,EAA/C;AACD,aAFD,EAFmB,CAKnB;;AACA,iBAAKgK,SAAL;AACA,iBAAKC,iBAAL;AACD,WA3EgB,CA8ErB;;AA9EqB;AAAA;AAAA,iDA+Ec;AAE7B,iBAAKC,UAAL,GAAkB;AAChBC,oBAAM,EAAE,CACN,0DACE,mDADF,EAEE;AACEC,uBAAO,EAAE,EADX;AAEEC,2BAAW,EAAE;AAFf,eAFF,CADM,CADQ;AAShBjJ,kBAAI,EAAE;AATU,aAAlB;AAaD;AA9FgB;AAAA;AAAA,sCAkGL;AACV,gBAAIkJ,OAAO,GAAGC,MAAM,CAACC,YAArB;AACA,gBAAIvpB,KAAK,GAAGqpB,OAAO,CAACG,OAAR,CAAgB,KAAKC,UAArB,CAAZ,CAFU,CAGV;;AACAn/B,mBAAO,CAAC0F,GAAR,CAAY,KAAK05B,eAAjB;;AACA,iBAAK,IAAIriC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsiC,YAAL,CAAkB5iC,MAAtC,EAA8CM,CAAC,EAA/C,EAAkD;AAChD,kBAAM05B,OAAO,GAAG,KAAK4I,YAAL,CAAkBtiC,CAAlB,CAAhB;;AAEA,kBAAI05B,OAAO,CAACO,UAAR,CAAmBsI,MAAnB,IAA6B,KAAKF,eAAtC,EAAwD;AAEtD,oBAAI,KAAKG,aAAL,KAAuBz8B,SAA3B,EAAqC;AACnC,uBAAKy8B,aAAL,GAAqB,+CAAS,CAAC9I,OAAO,CAACO,UAAR,CAAmBt9B,GAApB,EAAyB+8B,OAAO,CAACO,UAAR,CAAmBwI,GAA5C,CAAT,EAA2D;AAACC,0BAAM,EAAE;AAAT,mBAA3D,EAA4EC,KAA5E,CAAkF,KAAK3wB,GAAvF,CAArB;AACA,uBAAKA,GAAL,CAAS4wB,KAAT,CAAe,CAAClJ,OAAO,CAACO,UAAR,CAAmBt9B,GAApB,EAAyB+8B,OAAO,CAACO,UAAR,CAAmBwI,GAA5C,CAAf;AACA,uBAAKI,aAAL,GAAqB,KAAKC,eAAL,CAAqB,KAAKN,aAA1B,CAArB;AACA,uBAAKO,UAAL,GAAkB,KAAKF,aAAL,CAAmBG,SAAnB,EAAlB;AACA,uBAAKR,aAAL,CAAmBS,SAAnB;AACD,iBAND,MAMO;AACLhgC,yBAAO,CAAC0F,GAAR,CAAY,IAAZ;AACA,uBAAK65B,aAAL,CAAmBU,SAAnB,CAA6B,CAACxJ,OAAO,CAACO,UAAR,CAAmBt9B,GAApB,EAAyB+8B,OAAO,CAACO,UAAR,CAAmBwI,GAA5C,CAA7B;AACA,uBAAKzwB,GAAL,CAAS4wB,KAAT,CAAe,CAAClJ,OAAO,CAACO,UAAR,CAAmBt9B,GAApB,EAAyB+8B,OAAO,CAACO,UAAR,CAAmBwI,GAA5C,CAAf;AACA,uBAAKI,aAAL,GAAqB,KAAKC,eAAL,CAAqB,KAAKN,aAA1B,CAArB;AACA,uBAAKO,UAAL,GAAkB,KAAKF,aAAL,CAAmBG,SAAnB,EAAlB;AAEA,uBAAKR,aAAL,CAAmBW,MAAnB;AACD;;AACD;AACD;AACF;AACF;AA9HgB;AAAA;AAAA,4CAqIS;AAAA;;AACxB,iBAAKtC,kBAAL,GAA0BW,IAA1B,CAA+B,UAAAH,IAAI,EAAG;AACpC,kBAAM+B,MAAM,GAAG,IAAI,8CAAJ,CAAW,CAAC/B,IAAI,CAAC3lC,GAAN,EAAW2lC,IAAI,CAAC3J,GAAhB,CAAX,EACd2L,OADc,CAEb,qDAAK;AACHC,wBAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CADP;AAEHC,0BAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAFT;AAGHC,uBAAO,EAAE;AAHN,eAAL,CAFa,CAAf;AAOFJ,oBAAM,CAACT,KAAP,CAAa,MAAI,CAAC3wB,GAAlB;AACC,aATD;AAWD,WAjJgB,CAsJrB;;AAtJqB;AAAA;AAAA,sCAuJS;;;;;;;;;AACpByxB,0B,GAAO,E;AACLC,8B,GAAW,KAAKlD,IAAL,CAAU18B,GAAV,CAAc,+CAAd,EAA+D6/B,SAA/D,CAAyE,UAAChgC,IAAD,EAAe;AACrGV,+BAAO,CAAC0F,GAAR,CAAYhF,IAAZ;AACA,8BAAI,CAACA,IAAL,GAAYA,IAAZ;;AACA,6BAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAAC2D,IAAL,CAAUigC,QAAV,CAAmBlkC,MAAvC,EAA+CM,CAAC,EAAhD,EAAoD;AAClD,8BAAM05B,OAAO,GAAG,MAAI,CAAC/1B,IAAL,CAAUigC,QAAV,CAAmB5jC,CAAnB,CAAhB;AACAiD,iCAAO,CAAC0F,GAAR,CAAY+wB,OAAZ;AAEA+J,8BAAI,CAAC3tB,IAAL,CAAU4jB,OAAV;AACA,gCAAI,CAACmK,QAAL,GAAgBJ,IAAhB;AACAxgC,iCAAO,CAAC0F,GAAR,CAAY,MAAI,CAACk7B,QAAjB;AAEA,8BAAIC,QAAQ,GAAG,gDAAUpK,OAAV,EAAmBiJ,KAAnB,CAAyB,MAAI,CAAC3wB,GAA9B,CAAf;AACA8xB,kCAAQ,CAACC,SAAT,+BAA0CrK,OAAO,CAACO,UAAR,CAAmB+J,QAA7D,yCACYtK,OAAO,CAACO,UAAR,CAAmBO,KAD/B;AAGD;AAEF,uBAjBc,C;;;;;;;;;AAkBhB;AA3Kc;AAAA;AAAA,8CA8KmB;;;;;;;;;AAC5ByJ,yC,GAAsB,E;AACtBC,oC,GAAkB,KAAK1D,IAAL,CAAU18B,GAAV,CAAc,qDAAd,EAAqE6/B,SAArE,CAA+E,UAAChgC,IAAD,EAAe;AAClHV,+BAAO,CAAC0F,GAAR,CAAYhF,IAAZ;AACA,8BAAI,CAACA,IAAL,GAAYA,IAAZ;;AACA,6BAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAAC2D,IAAL,CAAUigC,QAAV,CAAmBlkC,MAAvC,EAA+CM,CAAC,EAAhD,EAAoD;AAClD,8BAAM05B,OAAO,GAAG,MAAI,CAAC/1B,IAAL,CAAUigC,QAAV,CAAmB5jC,CAAnB,CAAhB;AAEAikC,6CAAmB,CAACnuB,IAApB,CAAyB4jB,OAAzB;AACA,gCAAI,CAAC4I,YAAL,GAAoB2B,mBAApB;AACA,8BAAIE,YAAY,GAAG,gDAAUzK,OAAV,EAAmBiJ,KAAnB,CAAyB,MAAI,CAAC3wB,GAA9B,CAAnB;AACAmyB,sCAAY,CAACJ,SAAb,2BAA0CrK,OAAO,CAACO,UAAR,CAAmBsI,MAA7D;AACD;;AACHt/B,+BAAO,CAAC0F,GAAR,CAAY,MAAI,CAAC25B,YAAjB;AAEC,uBAbqB,C;;;;;;;;;AAevB,WA/Lc,CAgMrB;;AAhMqB;AAAA;AAAA,8CAkMY8B,MAlMZ,EAkMoBC,IAlMpB,EAkM0BC,IAlM1B,EAkMgC;AAC7C,gBAAMC,iBAAiB,GAAG;AACxB1nC,eAAC,EAAE,OADqB;AAExB8H,eAAC,EAAE,YAFqB;AAGxB6gB,eAAC,EAAE,IAAI;AAHiB,aAA1B;AAD6C,gBAOtC3oB,CAPsC,GAO3B0nC,iBAP2B,CAOtC1nC,CAPsC;AAAA,gBAOnC8H,CAPmC,GAO3B4/B,iBAP2B,CAOnC5/B,CAPmC;AAAA,gBAOhC6gB,CAPgC,GAO3B+e,iBAP2B,CAOhC/e,CAPgC;AAQ7C,gBAAMgf,IAAI,GAAGJ,MAAM,CAAC1M,GAApB;AACA,gBAAMlzB,IAAI,GAAG4/B,MAAM,CAAC1oC,GAApB;AACA,gBAAM0O,CAAC,GAAGk6B,IAAV;AACA,gBAAMrW,EAAE,GAAG1xB,IAAI,CAACC,EAAhB;AACA,gBAAMioC,MAAM,GAAGJ,IAAI,GAAGpW,EAAP,GAAY,GAA3B,CAZ6C,CAYb;;AAChC,gBAAMyW,SAAS,GAAGnoC,IAAI,CAACqB,GAAL,CAAS6mC,MAAT,CAAlB;AACA,gBAAME,SAAS,GAAGpoC,IAAI,CAACuB,GAAL,CAAS2mC,MAAT,CAAlB;AACA,gBAAMG,KAAK,GAAG,CAAC,IAAIpf,CAAL,IAAUjpB,IAAI,CAACsB,GAAL,CAAS2G,IAAI,GAAGypB,EAAP,GAAY;AAAI;AAAzB,aAAxB;AACA,gBAAM4W,KAAK,GAAG,IAAItoC,IAAI,CAACoB,IAAL,CAAW,IAAIinC,KAAK,GAAGA,KAAvB,CAAlB;AACA,gBAAME,KAAK,GAAGF,KAAK,GAAGC,KAAtB;AACA,gBAAME,MAAM,GAAGxoC,IAAI,CAAC2X,KAAL,CAAW0wB,KAAX,EAAkBD,SAAlB,CAAf;AACA,gBAAMK,QAAQ,GAAGH,KAAK,GAAGH,SAAzB;AACA,gBAAMO,UAAU,GAAG,IAAID,QAAQ,GAAGA,QAAlC;AACA,gBAAME,GAAG,GAAGD,UAAU,IAAIpoC,CAAC,GAAGA,CAAJ,GAAQ8H,CAAC,GAAGA,CAAhB,CAAV,IAAgCA,CAAC,GAAGA,CAApC,CAAZ;AACA,gBAAM7J,CAAC,GAAG,IAAIoqC,GAAG,GAAG,KAAN,IAAe,OAAOA,GAAG,IAAI,CAAC,GAAD,GAAOA,GAAG,IAAI,MAAM,MAAMA,GAAhB,CAAd,CAAzB,CAAd;AACA,gBAAMr9B,CAAC,GAAGq9B,GAAG,GAAG,IAAN,IAAc,MAAMA,GAAG,IAAI,CAAC,GAAD,GAAOA,GAAG,IAAI,KAAK,KAAKA,GAAd,CAAd,CAAvB,CAAV;AACA,gBAAIC,KAAK,GAAG/6B,CAAC,IAAIzF,CAAC,GAAG7J,CAAR,CAAb;AACA,gBAAIsqC,MAAM,GAAG,IAAI7oC,IAAI,CAACC,EAAtB;AAEA,gBAAI6oC,UAAJ;AACA,gBAAIC,QAAJ;AACA,gBAAIC,QAAJ;;AACA,mBAAOhpC,IAAI,CAACgK,GAAL,CAAS4+B,KAAK,GAAGC,MAAjB,IAA2B,KAAlC,EAAyC;AACvCC,wBAAU,GAAG9oC,IAAI,CAACuB,GAAL,CAAS,IAAIinC,MAAJ,GAAaI,KAAtB,CAAb;AACAG,sBAAQ,GAAG/oC,IAAI,CAACqB,GAAL,CAASunC,KAAT,CAAX;AACAI,sBAAQ,GAAGhpC,IAAI,CAACuB,GAAL,CAASqnC,KAAT,CAAX;AACA,kBAAMK,UAAU,GAAG39B,CAAC,GAAGy9B,QAAJ,IAAgBD,UAAU,GAAGx9B,CAAC,GAAG,CAAJ,IAAS09B,QAAQ,IAAI,CAAC,CAAD,GAAK,IAAIF,UAAJ,GAAiBA,UAA1B,CAAR,GACvDx9B,CAAC,GAAG,CAAJ,GAAQw9B,UAAR,IAAsB,CAAC,CAAD,GAAK,IAAIC,QAAJ,GAAeA,QAA1C,KAAuD,CAAC,CAAD,GAAK,IAAID,UAAJ,GAAiBA,UAA7E,CAD8C,CAA7B,CAAnB;AAEAD,oBAAM,GAAGD,KAAT;AACAA,mBAAK,GAAG/6B,CAAC,IAAIzF,CAAC,GAAG7J,CAAR,CAAD,GAAc0qC,UAAtB;AACD;;AACD,gBAAM9hB,GAAG,GAAGohB,KAAK,GAAGQ,QAAR,GAAmBT,KAAK,GAAGU,QAAR,GAAmBZ,SAAlD;AACA,gBAAM3lB,IAAI,GAAGziB,IAAI,CAAC2X,KAAL,CAAW4wB,KAAK,GAAGS,QAAR,GAAmBV,KAAK,GAAGS,QAAR,GAAmBX,SAAjD,EACX,CAAC,IAAInf,CAAL,IAAUjpB,IAAI,CAACoB,IAAL,CAAUqnC,QAAQ,GAAGA,QAAX,GAAsBthB,GAAG,GAAGA,GAAtC,CADC,CAAb;AAEA,gBAAM2P,MAAM,GAAG92B,IAAI,CAAC2X,KAAL,CAAWoxB,QAAQ,GAAGZ,SAAtB,EAAiCG,KAAK,GAAGU,QAAR,GAAmBT,KAAK,GAAGQ,QAAR,GAAmBX,SAAvE,CAAf;AACA,gBAAMvnC,CAAC,GAAGooB,CAAC,GAAG,EAAJ,GAASyf,UAAT,IAAuB,IAAIzf,CAAC,IAAI,IAAI,IAAIyf,UAAZ,CAA5B,CAAV;AACA,gBAAMlhB,GAAG,GAAGsP,MAAM,GAAG,CAAC,IAAIj2B,CAAL,IAAUooB,CAAV,GAAcwf,QAAd,IAClBG,KAAK,GAAG/nC,CAAC,GAAGkoC,QAAJ,IAAgBD,UAAU,GAAGjoC,CAAC,GAAGmoC,QAAJ,IAAgB,CAAC,CAAD,GAAK,IAAIF,UAAJ,GAAiBA,UAAtC,CAA7B,CADU,CAArB,CA5C6C,CA8C7C;;AACA,gBAAMI,OAAO,GAAGjB,IAAI,GAAIzgB,GAAG,GAAG,GAAN,GAAYkK,EAApC,CA/C6C,CA+CJ;;AACzC,gBAAMyX,KAAK,GAAG1mB,IAAI,GAAG,GAAP,GAAaiP,EAA3B,CAhD6C,CAgDd;;AAE/B,mBAAO,+CAASwX,OAAT,EAAkBC,KAAlB,CAAP;AACD;AArPc;AAAA;AAAA,gDAuPQlN,MAvPR,EAuPgBkK,MAvPhB,EAuPwBiD,KAvPxB,EAuP+BC,QAvP/B,EAuPyC;AACtD,gBAAIC,KAAJ;AACA,gBAAIC,SAAJ;AACA,gBAAIC,SAAJ;AACA,gBAAMC,MAAM,GAAG,EAAf;;AAEA,iBAAK,IAAIhmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2lC,KAApB,EAA2B3lC,CAAC,IAAI,CAAhC,EAAmC;AACjC6lC,mBAAK,GAAI7lC,CAAC,GAAG,GAAJ,GAAU2lC,KAAX,GAAoBC,QAA5B;AACAE,uBAAS,GAAG,KAAKG,mBAAL,CAAyBzN,MAAzB,EAAiCqN,KAAjC,EAAwCnD,MAAxC,CAAZ;AACAqD,uBAAS,GAAG,+CAASD,SAAS,CAACpO,GAAnB,EAAwBoO,SAAS,CAACpqC,GAAlC,CAAZ;AACAsqC,oBAAM,CAAClwB,IAAP,CAAYiwB,SAAZ;AACD;;AAED,mBAAOC,MAAP;AACD;AArQc;AAAA;AAAA,0CAuQEE,MAvQF,EAuQsB;AAAA,gBAAZP,KAAY,uEAAJ,EAAI;AACnC,gBAAMnN,MAAM,GAAG0N,MAAM,CAACjD,SAAP,EAAf;AACA,gBAAMP,MAAM,GAAGwD,MAAM,CAACC,SAAP,EAAf;AACA,gBAAMC,KAAK,GAAG,KAAKC,qBAAL,CAA2B7N,MAA3B,EAAmCkK,MAAnC,EAA2CiD,KAA3C,EAAkD,CAAlD,CAAd,CAHmC,CAGiC;;AACpE,gBAAMW,OAAO,GAAG,EAAhB;;AACA,iBAAK,IAAItmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGomC,KAAK,CAAC1mC,MAA1B,EAAkCM,CAAC,IAAI,CAAvC,EAA0C;AACxC,kBAAMumC,QAAQ,GAAG,CAACH,KAAK,CAACpmC,CAAD,CAAL,CAAStE,GAAV,EAAe0qC,KAAK,CAACpmC,CAAD,CAAL,CAAS03B,GAAxB,CAAjB;AACA4O,qBAAO,CAACxwB,IAAR,CAAaywB,QAAb;AACD;;AACD,mBAAO,gDAAUD,OAAV,EAAmBJ,MAAM,CAAChO,OAA1B,CAAP;AACP;AAjRoB;;AAAA;AAAA,S;;;;gBAhBZ;;;;;;gBAkDN,uD;AAAS,iBAAC,QAAD;;;AAlCCqI,cAAQ,6DANpB,gEAAU;AACTiG,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAMoB,GAARlG,QAAQ,CAAR","file":"tab3-tab3-module-es5.js","sourcesContent":["export default __webpack_public_path__ + \"marker-icon.png\";","export default __webpack_public_path__ + \"marker-shadow.png\";","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","(function (factory) {\r\n\tvar L, proj4;\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine(['leaflet', 'proj4'], factory);\r\n\t} else if (typeof module === 'object' && typeof module.exports === \"object\") {\r\n\t\t// Node/CommonJS\r\n\t\tL = require('leaflet');\r\n\t\tproj4 = require('proj4');\r\n\t\tmodule.exports = factory(L, proj4);\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\tif (typeof window.L === 'undefined' || typeof window.proj4 === 'undefined')\r\n\t\t\tthrow 'Leaflet and proj4 must be loaded first';\r\n\t\tfactory(window.L, window.proj4);\r\n\t}\r\n}(function (L, proj4) {\r\n\tif (proj4.__esModule && proj4.default) {\r\n\t\t// If proj4 was bundled as an ES6 module, unwrap it to get\r\n\t\t// to the actual main proj4 object.\r\n\t\t// See discussion in https://github.com/kartena/Proj4Leaflet/pull/147\r\n\t\tproj4 = proj4.default;\r\n\t}\r\n \r\n\tL.Proj = {};\r\n\r\n\tL.Proj._isProj4Obj = function(a) {\r\n\t\treturn (typeof a.inverse !== 'undefined' &&\r\n\t\t\ttypeof a.forward !== 'undefined');\r\n\t};\r\n\r\n\tL.Proj.Projection = L.Class.extend({\r\n\t\tinitialize: function(code, def, bounds) {\r\n\t\t\tvar isP4 = L.Proj._isProj4Obj(code);\r\n\t\t\tthis._proj = isP4 ? code : this._projFromCodeDef(code, def);\r\n\t\t\tthis.bounds = isP4 ? def : bounds;\r\n\t\t},\r\n\r\n\t\tproject: function (latlng) {\r\n\t\t\tvar point = this._proj.forward([latlng.lng, latlng.lat]);\r\n\t\t\treturn new L.Point(point[0], point[1]);\r\n\t\t},\r\n\r\n\t\tunproject: function (point, unbounded) {\r\n\t\t\tvar point2 = this._proj.inverse([point.x, point.y]);\r\n\t\t\treturn new L.LatLng(point2[1], point2[0], unbounded);\r\n\t\t},\r\n\r\n\t\t_projFromCodeDef: function(code, def) {\r\n\t\t\tif (def) {\r\n\t\t\t\tproj4.defs(code, def);\r\n\t\t\t} else if (proj4.defs[code] === undefined) {\r\n\t\t\t\tvar urn = code.split(':');\r\n\t\t\t\tif (urn.length > 3) {\r\n\t\t\t\t\tcode = urn[urn.length - 3] + ':' + urn[urn.length - 1];\r\n\t\t\t\t}\r\n\t\t\t\tif (proj4.defs[code] === undefined) {\r\n\t\t\t\t\tthrow 'No projection definition for code ' + code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn proj4(code);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.CRS = L.Class.extend({\r\n\t\tincludes: L.CRS,\r\n\r\n\t\toptions: {\r\n\t\t\ttransformation: new L.Transformation(1, 0, -1, 0)\r\n\t\t},\r\n\r\n\t\tinitialize: function(a, b, c) {\r\n\t\t\tvar code,\r\n\t\t\t    proj,\r\n\t\t\t    def,\r\n\t\t\t    options;\r\n\r\n\t\t\tif (L.Proj._isProj4Obj(a)) {\r\n\t\t\t\tproj = a;\r\n\t\t\t\tcode = proj.srsCode;\r\n\t\t\t\toptions = b || {};\r\n\r\n\t\t\t\tthis.projection = new L.Proj.Projection(proj, options.bounds);\r\n\t\t\t} else {\r\n\t\t\t\tcode = a;\r\n\t\t\t\tdef = b;\r\n\t\t\t\toptions = c || {};\r\n\t\t\t\tthis.projection = new L.Proj.Projection(code, def, options.bounds);\r\n\t\t\t}\r\n\r\n\t\t\tL.Util.setOptions(this, options);\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.transformation = this.options.transformation;\r\n\r\n\t\t\tif (this.options.origin) {\r\n\t\t\t\tthis.transformation =\r\n\t\t\t\t\tnew L.Transformation(1, -this.options.origin[0],\r\n\t\t\t\t\t\t-1, this.options.origin[1]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tthis._scales = this.options.scales;\r\n\t\t\t} else if (this.options.resolutions) {\r\n\t\t\t\tthis._scales = [];\r\n\t\t\t\tfor (var i = this.options.resolutions.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (this.options.resolutions[i]) {\r\n\t\t\t\t\t\tthis._scales[i] = 1 / this.options.resolutions[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.infinite = !this.options.bounds;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function(zoom) {\r\n\t\t\tvar iZoom = Math.floor(zoom),\r\n\t\t\t\tbaseScale,\r\n\t\t\t\tnextScale,\r\n\t\t\t\tscaleDiff,\r\n\t\t\t\tzDiff;\r\n\t\t\tif (zoom === iZoom) {\r\n\t\t\t\treturn this._scales[zoom];\r\n\t\t\t} else {\r\n\t\t\t\t// Non-integer zoom, interpolate\r\n\t\t\t\tbaseScale = this._scales[iZoom];\r\n\t\t\t\tnextScale = this._scales[iZoom + 1];\r\n\t\t\t\tscaleDiff = nextScale - baseScale;\r\n\t\t\t\tzDiff = (zoom - iZoom);\r\n\t\t\t\treturn baseScale + scaleDiff * zDiff;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tzoom: function(scale) {\r\n\t\t\t// Find closest number in this._scales, down\r\n\t\t\tvar downScale = this._closestElement(this._scales, scale),\r\n\t\t\t\tdownZoom = this._scales.indexOf(downScale),\r\n\t\t\t\tnextScale,\r\n\t\t\t\tnextZoom,\r\n\t\t\t\tscaleDiff;\r\n\t\t\t// Check if scale is downScale => return array index\r\n\t\t\tif (scale === downScale) {\r\n\t\t\t\treturn downZoom;\r\n\t\t\t}\r\n\t\t\tif (downScale === undefined) {\r\n\t\t\t\treturn -Infinity;\r\n\t\t\t}\r\n\t\t\t// Interpolate\r\n\t\t\tnextZoom = downZoom + 1;\r\n\t\t\tnextScale = this._scales[nextZoom];\r\n\t\t\tif (nextScale === undefined) {\r\n\t\t\t\treturn Infinity;\r\n\t\t\t}\r\n\t\t\tscaleDiff = nextScale - downScale;\r\n\t\t\treturn (scale - downScale) / scaleDiff + downZoom;\r\n\t\t},\r\n\r\n\t\tdistance: L.CRS.Earth.distance,\r\n\r\n\t\tR: L.CRS.Earth.R,\r\n\r\n\t\t/* Get the closest lowest element in an array */\r\n\t\t_closestElement: function(array, element) {\r\n\t\t\tvar low;\r\n\t\t\tfor (var i = array.length; i--;) {\r\n\t\t\t\tif (array[i] <= element && (low === undefined || low < array[i])) {\r\n\t\t\t\t\tlow = array[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn low;\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.GeoJSON = L.GeoJSON.extend({\r\n\t\tinitialize: function(geojson, options) {\r\n\t\t\tthis._callLevel = 0;\r\n\t\t\tL.GeoJSON.prototype.initialize.call(this, geojson, options);\r\n\t\t},\r\n\r\n\t\taddData: function(geojson) {\r\n\t\t\tvar crs;\r\n\r\n\t\t\tif (geojson) {\r\n\t\t\t\tif (geojson.crs && geojson.crs.type === 'name') {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.properties.name);\r\n\t\t\t\t} else if (geojson.crs && geojson.crs.type) {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.type + ':' + geojson.crs.properties.code);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (crs !== undefined) {\r\n\t\t\t\t\tthis.options.coordsToLatLng = function(coords) {\r\n\t\t\t\t\t\tvar point = L.point(coords[0], coords[1]);\r\n\t\t\t\t\t\treturn crs.projection.unproject(point);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Base class' addData might call us recursively, but\r\n\t\t\t// CRS shouldn't be cleared in that case, since CRS applies\r\n\t\t\t// to the whole GeoJSON, inluding sub-features.\r\n\t\t\tthis._callLevel++;\r\n\t\t\ttry {\r\n\t\t\t\tL.GeoJSON.prototype.addData.call(this, geojson);\r\n\t\t\t} finally {\r\n\t\t\t\tthis._callLevel--;\r\n\t\t\t\tif (this._callLevel === 0) {\r\n\t\t\t\t\tdelete this.options.coordsToLatLng;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.geoJson = function(geojson, options) {\r\n\t\treturn new L.Proj.GeoJSON(geojson, options);\r\n\t};\r\n\r\n\tL.Proj.ImageOverlay = L.ImageOverlay.extend({\r\n\t\tinitialize: function (url, bounds, options) {\r\n\t\t\tL.ImageOverlay.prototype.initialize.call(this, url, null, options);\r\n\t\t\tthis._projectedBounds = bounds;\r\n\t\t},\r\n\r\n\t\t// Danger ahead: Overriding internal methods in Leaflet.\r\n\t\t// Decided to do this rather than making a copy of L.ImageOverlay\r\n\t\t// and doing very tiny modifications to it.\r\n\t\t// Future will tell if this was wise or not.\r\n\t\t_animateZoom: function (event) {\r\n\t\t\tvar scale = this._map.getZoomScale(event.zoom);\r\n\t\t\tvar northWest = L.point(this._projectedBounds.min.x, this._projectedBounds.max.y);\r\n\t\t\tvar offset = this._projectedToNewLayerPoint(northWest, event.zoom, event.center);\r\n\r\n\t\t\tL.DomUtil.setTransform(this._image, offset, scale);\r\n\t\t},\r\n\r\n\t\t_reset: function () {\r\n\t\t\tvar zoom = this._map.getZoom();\r\n\t\t\tvar pixelOrigin = this._map.getPixelOrigin();\r\n\t\t\tvar bounds = L.bounds(\r\n\t\t\t\tthis._transform(this._projectedBounds.min, zoom)._subtract(pixelOrigin),\r\n\t\t\t\tthis._transform(this._projectedBounds.max, zoom)._subtract(pixelOrigin)\r\n\t\t\t);\r\n\t\t\tvar size = bounds.getSize();\r\n\r\n\t\t\tL.DomUtil.setPosition(this._image, bounds.min);\r\n\t\t\tthis._image.style.width = size.x + 'px';\r\n\t\t\tthis._image.style.height = size.y + 'px';\r\n\t\t},\r\n\r\n\t\t_projectedToNewLayerPoint: function (point, zoom, center) {\r\n\t\t\tvar viewHalf = this._map.getSize()._divideBy(2);\r\n\t\t\tvar newTopLeft = this._map.project(center, zoom)._subtract(viewHalf)._round();\r\n\t\t\tvar topLeft = newTopLeft.add(this._map._getMapPanePos());\r\n\r\n\t\t\treturn this._transform(point, zoom)._subtract(topLeft);\r\n\t\t},\r\n\r\n\t\t_transform: function (point, zoom) {\r\n\t\t\tvar crs = this._map.options.crs;\r\n\t\t\tvar transformation = crs.transformation;\r\n\t\t\tvar scale = crs.scale(zoom);\r\n\r\n\t\t\treturn transformation.transform(point, scale);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.imageOverlay = function (url, bounds, options) {\r\n\t\treturn new L.Proj.ImageOverlay(url, bounds, options);\r\n\t};\r\n\r\n\treturn L.Proj;\r\n}));\r\n","export default \"<ion-header [translucent]=\\\"false\\\">\\n    <ion-toolbar id=\\\"toolbarColor\\\">\\n        <ion-title style=\\\"font-size: 40px; font-weight: bolder; color: #fff;\\\">  <img src=\\\"assets/mema-seal.png\\\" height=\\\"35\\\"> MEMA</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n    <ion-card-header> <img src=\\\"assets/tab3/map.png\\\" height=\\\"30\\\"> WEATHER ALERTS</ion-card-header>\\n    <!-- <div id=\\\"mapId3\\\" style=\\\"width: 100%; height: 70%\\\"></div> -->\\n    <div \\n    id=\\\"map\\\"\\n  leaflet\\n  style=\\\"width: 100%; height: 70%\\\"\\n  \\n  [leafletOptions]=\\\"mapOptions\\\"\\n  (leafletMapReady)=\\\"onMapReady($event)\\\"\\n></div>\\n<!-- <div class=\\\"App\\\">\\n</div> -->\\n\\n<!-- <input #ranger (input)=\\\"geoRadius(ranger.value)\\\" type=\\\"range\\\" min=0 max=400000 value=200\\n /> -->\\n\\n <ion-item>\\n     <ion-label>Select your County</ion-label>\\n     <ion-select placeholder=\\\"Select County\\\" [(ngModel)]=\\\"countySelection\\\" (ionChange)=\\\"geoRadius()\\\">\\n        <ion-select-option value=\\\"Adams\\\">Adams</ion-select-option>\\n        <ion-select-option value=\\\"Alcorn\\\">Alcorn</ion-select-option>\\n        <ion-select-option value=\\\"Amite\\\">Amite</ion-select-option>\\n        <ion-select-option value=\\\"Benton\\\">Benton</ion-select-option>\\n        <ion-select-option value=\\\"Bolivar\\\">Bolivar</ion-select-option>\\n        <ion-select-option value=\\\"Calhoun\\\">Calhoun</ion-select-option>\\n        <ion-select-option value=\\\"CARROLL\\\">Carroll</ion-select-option>\\n        <ion-select-option value=\\\"CHICKASAW\\\">Chickasaw</ion-select-option>\\n        <ion-select-option value=\\\"CHOCTAW\\\">Choctaw</ion-select-option>\\n        <ion-select-option value=\\\"CLAIBORNE\\\">Claiborne</ion-select-option>\\n     </ion-select>\\n </ion-item>\\n\\n<!-- \\n <ion-item>\\n    <ion-label>Select your County</ion-label>\\n    <ion-select placeholder=\\\"Select County\\\"  >\\n       <ion-item *ngFor=\\\"let counties of countySelectionTest\\\" (ionChange)=\\\"geoRadius(countySelectionTest)\\\">\\n           <ion-select-option  [(ngModel)]=\\\"counties.selected\\\" [value]=\\\"counties.countyName\\\">{{counties.countyName}}</ion-select-option>\\n\\n       </ion-item>\\n\\n    </ion-select>\\n</ion-item> -->\\n\\n</ion-content>\";","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab3Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { LeafletModule } from \"@asymmetrik/ngx-leaflet\";\nimport { Tab3PageRoutingModule } from './tab3-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    LeafletModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\n    Tab3PageRoutingModule,\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","export default \".App {\\n  height: 480px;\\n  padding: 10rem;\\n}\\n\\n.leaflet-container {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMy90YWIzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBQ0U7RUFDRSxZQUFBO0FBRUoiLCJmaWxlIjoic3JjL2FwcC90YWIzL3RhYjMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkFwcCB7XG4gICAgaGVpZ2h0OiA0ODBweDtcbiAgICBwYWRkaW5nOiAxMHJlbTtcbiAgfVxuICAubGVhZmxldC1jb250YWluZXIge1xuICAgIGhlaWdodDogMTAwJTtcbiAgfSJdfQ== */\";","import { Component, OnInit, OnDestroy, NgZone, SimpleChange, SimpleChanges, Input, ViewChild, AfterViewInit } from '@angular/core';\n// import * as Leaflet from 'leaflet';\nimport { HttpClient } from \"@angular/common/http\";\nimport * as L from \"leaflet\";\nimport {latLng, MapOptions, tileLayer, Map, Marker, icon, Circle} from 'leaflet';\nimport * as turfcircle from '@turf/circle';\nimport booleanIntersects from '@turf/boolean-intersects';\nimport 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/images/marker-icon.png';\nimport 'proj4leaflet';\n\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\n\nexport class Tab3Page implements AfterViewInit {\n  rangeId: any;\n  map: Map;\n  mapOptions: MapOptions;\n  geoRadiusLine: any;\n  geoJSONCircle: any;\n  polygons: any;\n  CountyPoints: any;\n  turfcircle: any;\n\n  countyInfo: any;\n  countySelection: string;\n  countySelectionTest = [\n    {\n      countyName: \"Adams\",\n      value:\"Adams\",\n      selected: false,\n    },\n    {\n      countyName: \"Alcorn\",\n      value:\"Alcorn\",\n      selected: false,\n    },\n    {\n      countyName: \"Amite\",\n      value:\"AMITE\",\n      selected: false,\n    },\n    {\n      countyName: \"Benton\",\n      value:\"Benton\",\n      selected: false,\n    },\n  ]\n  @ViewChild('ranger') tab3Page: Tab3Page;\n \n  constructor(private http: HttpClient ) {\n    var Functionone;\n    \n    \n  }\n\n\n\n  ngOnInit(){\n\n    this.getLocationService() \n    this.initializeMapOptions()\n\n  }   \n    \n  ngAfterViewInit() {\n\n\n\n  }\n\n\n    getLocationService():Promise<any>{\n      return new Promise((resolve, reject)=>{\n        navigator.geolocation.getCurrentPosition(resp=>{\n          resolve({lng: resp.coords.longitude, lat: resp.coords.latitude})\n        })\n  \n      }) \n    }\n    \n    onMapReady(map: Map) {\n      this.map = map;\n      this.getLocationService().then(resp=> {\n        this.map.setView(L.latLng(resp.lat, resp.lng), 25)\n      })\n      //this.geoRadius(this.rangeId)\n      this.getAlerts();\n      this.setCountiesPoints();\n    }\n\n\n//MISSISSIPPI AREA\n    private initializeMapOptions() {\n\n      this.mapOptions = {\n        layers: [\n          tileLayer(\n            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n            {\n              maxZoom: 18,\n              attribution: 'Map data © OpenStreetMap contributors'\n            })\n        ],\n        zoom: 18,\n        \n      };\n\n    }\n\n\n\n    geoRadius() {\n      var storage = window.localStorage;\n      var value = storage.getItem(this.countyInfo)\n      //WHAT DO I STORE TO SHOW UP THE COUNTY\n      console.log(this.countySelection)\n      for (let i = 0; i < this.CountyPoints.length; i++){\n        const element = this.CountyPoints[i];\n\n        if (element.properties.CONAME == this.countySelection ) {\n\n          if (this.geoRadiusLine === undefined){\n            this.geoRadiusLine = L.circle([element.properties.Lat, element.properties.Lon], {radius: 16900}).addTo(this.map);\n            this.map.panTo([element.properties.Lat, element.properties.Lon])\n            this.geoJSONCircle = this.circleToPolygon(this.geoRadiusLine)\n            this.turfcircle = this.geoJSONCircle.toGeoJSON()\n            this.geoRadiusLine.getLatLng();\n          } else {\n            console.log(true)\n            this.geoRadiusLine.setLatLng([element.properties.Lat, element.properties.Lon])\n            this.map.panTo([element.properties.Lat, element.properties.Lon])\n            this.geoJSONCircle = this.circleToPolygon(this.geoRadiusLine)\n            this.turfcircle = this.geoJSONCircle.toGeoJSON()\n\n            this.geoRadiusLine.redraw();\n          }\n          debugger\n        }\n      }\n    }\n\n\n\n\n\n\n    private addSampleMarker() {\n      this.getLocationService().then(resp=> {\n        const marker = new Marker([resp.lat, resp.lng])\n        .setIcon( \n          icon({\n            iconSize: [25, 41],\n            iconAnchor: [13, 41],\n            iconUrl: 'assets/marker-icon.png'\n          }));\n      marker.addTo(this.map);\n      })\n      \n    }\n    \n    json;\n\n\n//WEATHER POLOYON \n    private async getAlerts() {\n      let poly = [];\n        let response = this.http.get(\"https://api.weather.gov/alerts/active?area=MS\").subscribe((json: any) => {\n          console.log(json);\n          this.json = json;\n          for (let i = 0; i < this.json.features.length; i++) {\n            const element = this.json.features[i];\n            console.log(element)\n            \n            poly.push(element) ;\n            this.polygons = poly\n            console.log(this.polygons)\n            \n            var pressOne = L.geoJSON(element).addTo(this.map);\n            pressOne.bindPopup(`<p>County Affected: ${element.properties.areaDesc}</p>\n            <p>Event: ${element.properties.event}</p>\n            `)\n          }\n          \n        });\n      }\n\n\n      private async setCountiesPoints() {\n        let countiesPointsArray = []\n        let countiesPoints =  this.http.get('../../assets/MississippiCountiesPointsWGS84.geojson').subscribe((json: any) => {\n          console.log(json)\n          this.json = json;\n          for (let i = 0; i < this.json.features.length; i++) {\n            const element = this.json.features[i]\n\n            countiesPointsArray.push(element);\n            this.CountyPoints = countiesPointsArray\n            var countiesList = L.geoJSON(element).addTo(this.map)\n            countiesList.bindPopup(`<p>County Name: ${element.properties.CONAME}</p>`)\n          }\n        console.log(this.CountyPoints);\n\n        })\n\n      }\n//FUNCTIONS FOR CONVERTING L.CIRCLE\n\n      public destinationVincenty(lonlat, brng, dist) { // rewritten to work with leaflet\n        const VincentyConstants = {\n          a: 6378137,\n          b: 6356752.3142,\n          f: 1 / 298.257223563\n        };\n      \n        const {a, b, f} = VincentyConstants;\n        const lon1 = lonlat.lng;\n        const lat1 = lonlat.lat;\n        const s = dist;\n        const pi = Math.PI;\n        const alpha1 = brng * pi / 180; // converts brng degrees to radius\n        const sinAlpha1 = Math.sin(alpha1);\n        const cosAlpha1 = Math.cos(alpha1);\n        const tanU1 = (1 - f) * Math.tan(lat1 * pi / 180 /* converts lat1 degrees to radius */);\n        const cosU1 = 1 / Math.sqrt((1 + tanU1 * tanU1));\n        const sinU1 = tanU1 * cosU1;\n        const sigma1 = Math.atan2(tanU1, cosAlpha1);\n        const sinAlpha = cosU1 * sinAlpha1;\n        const cosSqAlpha = 1 - sinAlpha * sinAlpha;\n        const uSq = cosSqAlpha * (a * a - b * b) / (b * b);\n        const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n        const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n        let sigma = s / (b * A);\n        let sigmaP = 2 * Math.PI;\n      \n        let cos2SigmaM;\n        let sinSigma;\n        let cosSigma;\n        while (Math.abs(sigma - sigmaP) > 1e-12) {\n          cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n          sinSigma = Math.sin(sigma);\n          cosSigma = Math.cos(sigma);\n          const deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM) -\n            B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n          sigmaP = sigma;\n          sigma = s / (b * A) + deltaSigma;\n        }\n        const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n        const lat2 = Math.atan2(sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n          (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp));\n        const lambda = Math.atan2(sinSigma * sinAlpha1, cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1);\n        const C = f / 16 * cosSqAlpha * (4 + f * (4 - 3 * cosSqAlpha));\n        const lam = lambda - (1 - C) * f * sinAlpha *\n          (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n        // const revAz = Math.atan2(sinAlpha, -tmp);  // final bearing\n        const lamFunc = lon1 + (lam * 180 / pi); // converts lam radius to degrees\n        const lat2a = lat2 * 180 / pi; // converts lat2a radius to degrees\n      \n        return L.latLng(lamFunc, lat2a);\n      }\n      \npublic createGeodesicPolygon(origin, radius, sides, rotation) {\n        let angle;\n        let newLonlat;\n        let geomPoint;\n        const points = [];\n      \n        for (let i = 0; i < sides; i += 1) {\n          angle = (i * 360 / sides) + rotation;\n          newLonlat = this.destinationVincenty(origin, angle, radius);\n          geomPoint = L.latLng(newLonlat.lng, newLonlat.lat);\n          points.push(geomPoint);\n        }\n      \n        return points;\n      }\n\npublic circleToPolygon(circle, sides = 60) {\n        const origin = circle.getLatLng();\n        const radius = circle.getRadius();\n        const polys = this.createGeodesicPolygon(origin, radius, sides, 0); // these are the points that make up the circle\n        const polygon = [];\n        for (let i = 0; i < polys.length; i += 1) {\n          const geometry = [polys[i].lat, polys[i].lng];\n          polygon.push(geometry);\n        }\n        return L.polygon(polygon, circle.options);\n}\n      \n  }\n\n\n\n\n\n"]}